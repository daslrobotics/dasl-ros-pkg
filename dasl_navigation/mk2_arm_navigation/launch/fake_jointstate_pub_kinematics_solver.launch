<?xml version="1.0"?>
<launch>

<!-- YOU NEED TO CHANGE  MYROBOT  NAME TO POINT TO YOUR PACKAGES -->

    <!-- Load robot model into Parameter Server -->
    <param name="robot_description" command="$(find xacro)/xacro.py '$(find mk2)/robots/mk2.URDF'" />

    <!-- Start Robot State Publisher (calculates joint frame transforms) -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />

    <!-- Start Joint State Publisher with joint control GUI -->
    <param name="use_gui" value="true" />
    <node pkg="joint_state_publisher" type="joint_state_publisher" name="joint_state_publisher"/>

    <!-- Start Rviz visualization tool using saved config file -->
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find mk2)/launch/test.vcg" />

    <include file="$(find planning_environment)/launch/environment_server.launch">
        <arg name="use_monitor" value="true" />
        <arg name="use_collision_map" value="false" />
    </include>

    <!-- Load planning config from MYROBOT_arm_navigation package -->
    <rosparam command="load" ns="robot_description_planning" file="$(find mk2_arm_navigation)/config/mk2_planning_description.yaml" />

    <!-- Load arm_kinematics_constraint_aware node configured for your robot, using specific kinematics plugin -->
    <node pkg="arm_kinematics_constraint_aware" type="arm_kinematics_constraint_aware" name="mk2_manipulator_kinematics" output="screen" >
        <param name="group" type="string" value="manipulator"/>
        <param name="manipulator/root_name" type="string" value="torso_roll_link"/>
        <param name="manipulator/tip_name" type="string" value="right_wrist_roll_link"/>

        <!-- KDL is the default plugin, however you can build an IKFast plugin -->
        <!--<param name="kinematics_solver" type="string" value="arm_kinematics_constraint_aware/KDLArmKinematicsPlugin" /> -->
        <param name="kinematics_solver" type="string" value="mk2_manipulator_kinematics/IKFastKinematicsPlugin"/>
   </node>

    <!-- Publish a static transform between the robot base and the world frame -->
    <node pkg="tf" type="static_transform_publisher" name="world_base_broadcaster" args="3 3 1.5 0 0 -1.57 /world /torso_base_link 100" /> 

</launch> 

