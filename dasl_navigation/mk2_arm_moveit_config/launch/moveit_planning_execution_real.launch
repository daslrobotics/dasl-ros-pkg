<launch>

 <param name="robot_description" textfile="$(find mk2)/robots/mk2_arm.URDF" />
 
 <node pkg="mk2_controller" type="joint_trajectory_handler.py" name="joint_trajectory_handler" output="screen" />

 <!-- joint_trajectory_action: provides actionlib interface for high-level robot control -->
 <node pkg="industrial_robot_client" type="joint_trajectory_action" name="joint_trajectory_action"/>

 <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

 <rosparam param="controller_joint_names">[ 'right_shoulder_pitch_joint', 'right_shoulder_roll_joint', 'right_shoulder_yaw_joint',  
 'right_elbow_pitch_joint', 'right_wrist_roll_joint', 'right_wrist_pitch_joint', 'right_wrist_yaw_joint']</rosparam>

 <include file="$(find mk2_arm_moveit_config)/launch/move_group.launch">
  <arg name="publish_monitored_planning_scene" value="true" />
 </include>

 <include file="$(find mk2_arm_moveit_config)/launch/moveit_rviz.launch"/>

 <!-- Start the mk2 Driver -->
 <node pkg="mk2_controller" type="mk2_controller" name="mk2_controller" output="screen" >
   <rosparam command="load" file="$(find mk2_controller)/config/mk2_arm.yaml" />
 </node>

 <!-- Publish a static transform between the robot base and the world frame
 <node pkg="tf" type="static_transform_publisher" name="world_base_broadcaster" args="0 0 1.5 0 0 0 /world /torso_roll_link 100" />
 <node pkg="tf" type="static_transform_publisher" name="world_mocap_broadcaster" args="0 0 0 0 0 0 /world /mocap_origin 100" />
 <node pkg="tf" type="static_transform_publisher" name="mocap_gantry_broadcaster" args="0 0 0 0 0 0 /gantry_base /torso_roll_link 100" />
 -->
 <node pkg="tf" type="static_transform_publisher" name="world_mocap_broadcaster" args="0 0 0 0 0 0 /world /mocap_origin 100" />

 <node pkg="tf" type="static_transform_publisher" name="world_base_broadcaster" args="0 0 1.5 0 0 0 /world /torso_roll_link 100" />

</launch>
