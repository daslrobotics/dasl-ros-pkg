#!/usr/bin/env python
PKG = 'gantry_navigation'

import roslib; roslib.load_manifest(PKG)
import rospy
import math
import tf

from nav_msgs.msg import Odometry as Odometry

import socket


UDP_IP = "129.25.16.43"
UDP_PORT = 5005
socket_buffer_size = 1024



def buffer_parse(value_array):

	data, addr = sock.recvfrom(socket_buffer_size) # buffer size is 1024 bytes
	part = data.split(',')

	for i in range(0,len(part)):
		value_array.append(float(part[i]))



def talker():
    
	

	pub = rospy.Publisher('gantry_odom', Odometry)
	rospy.init_node('ODOM_talker')

	odom = Odometry()

	while not rospy.is_shutdown():

		value_array= []

		buffer_parse(value_array)		

		rospy.loginfo(value_array)

		odom.pose.pose.position.x = value_array[0]
		odom.pose.pose.position.y = value_array[1]
		odom.pose.pose.position.z = value_array[2]

		odom.twist.twist.linear.x = value_array[3]
		odom.twist.twist.linear.y = value_array[4]
		odom.twist.twist.linear.z = value_array[5]

	#rospy.loginfo(odom)    # publishes to the terminal/console    
		pub.publish(odom)	#publishes to ROS 
		rospy.sleep(0.1)


if __name__ == '__main__':

	sock = socket.socket(socket.AF_INET, # Internet
                     socket.SOCK_DGRAM) # UDP
	sock.bind((UDP_IP, UDP_PORT))

	try:
		talker()
	except rospy.ROSInterruptException:
		pass
