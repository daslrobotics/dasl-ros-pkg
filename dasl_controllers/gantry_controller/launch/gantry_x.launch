<launch>

    <!-- Load the URDF/Xacro model of our robot -->
    <param name="robot_description" command="$(find xacro)/xacro.py '$(find mk2)/robots/mk2_arm.URDF'" />
	
    <!-- Launch mocap -->
    <node pkg="dasl_mocap" type="MOCAPnode" name="MOCAPnode" respawn="false" required="true">
        <rosparam file="$(find dasl_mocap)/config/mocap.yaml" command="load" />
    </node>

    <!-- Start the joystick node -->
    <node respawn="true" pkg="joy" type="joy_node" name="joy" >
        <param name="dev" type="string" value="/dev/input/js0" />
        <param name="deadzone" value="0.12" />
    </node> 

    <!-- Load gantry PID controller node -->
    <node pkg="gantry_controller" type="move_gantry_x_axis.py" name="move_gantry_x_axis" output="screen" />

    <!-- Load UDP gantry interface node -->
    <node pkg="gantry_controller" type="gantry_controller.py" name="gantry_controller" />

    <!-- Start the MK2 Driver -->
    <node pkg="mk2_controller" type="mk2_controller" name="mk2_controller" output="screen" >
        <rosparam command="load" file="$(find mk2_controller)/config/mk2.yaml" />
    </node>

    <!-- Publish the robot state -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher">
	<param name="publish_frequency" value="20.0"/>
    </node> 

    <!-- Set the odom frame equal to the mocap_origin -->
    <node pkg="tf" type="static_transform_publisher" name="odom_mocap_broadcaster" args="0 0 0 0 0 0 /odom /mocap_origin 100" />

    <!-- Publish odom msgs based on mocap marker -->
    <node pkg="gantry_navigation" type="gantry_mocap_odom" name="gantry_mocap_odom" />

</launch>
