#include <ros/ros.h>
#include <tf/transform_listener.h>
#include<geometry_msgs/Quaternion.h>
#include <turtlesim/Spawn.h>

int main(int argc, char** argv){
  ros::init(argc, argv, "marker_ar");

  ros::NodeHandle node;
  ros::Publisher tfsend = 
       node.advertise<geometry_msgs::Quaternion>("/ar_coor", 10);
 
  tf::TransformListener listener;

  ros::Rate rate(10.0);
  while (node.ok()){
    tf::StampedTransform transform;
    try{
      listener.lookupTransform("/torso_base_link", "/Kanji",  
                               ros::Time(0), transform);
    }
    catch (tf::TransformException ex){
      ROS_ERROR("%s",ex.what());
    }
    geometry_msgs::Quaternion tfpump;
    tfpump.x=transform.getOrigin().x();
    tfpump.y=transform.getOrigin().y();
    tfpump.z=transform.getOrigin().z();
    tfpump.w=0;
    tfsend.publish(tfpump);

    rate.sleep();
  }
  return 0;
};
