/// autogenerated analytical inverse kinematics code from ikfast program part of OpenRAVE
/// \author Rosen Diankov
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///     http://www.apache.org/licenses/LICENSE-2.0
/// 
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// ikfast version 61 generated on 2013-02-11 22:48:09.105847
/// To compile with gcc:
///     gcc -lstdc++ ik.cpp
/// To compile without any main function as a shared object (might need -llapack):
///     gcc -fPIC -lstdc++ -DIKFAST_NO_MAIN -DIKFAST_CLIBRARY -shared -Wl,-soname,libik.so -o libik.so ik.cpp
#define IKFAST_HAS_LIBRARY
#include "ikfast.h" // found inside share/openrave-X.Y/python/ikfast.h
using namespace ikfast;

// check if the included ikfast version matches what this file was compiled with
#define IKFAST_COMPILE_ASSERT(x) extern int __dummy[(int)x]
IKFAST_COMPILE_ASSERT(IKFAST_VERSION==61);

#include <cmath>
#include <vector>
#include <limits>
#include <algorithm>
#include <complex>

#define IKFAST_STRINGIZE2(s) #s
#define IKFAST_STRINGIZE(s) IKFAST_STRINGIZE2(s)

#ifndef IKFAST_ASSERT
#include <stdexcept>
#include <sstream>
#include <iostream>

#ifdef _MSC_VER
#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __FUNCDNAME__
#endif
#endif

#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __func__
#endif

#define IKFAST_ASSERT(b) { if( !(b) ) { std::stringstream ss; ss << "ikfast exception: " << __FILE__ << ":" << __LINE__ << ": " <<__PRETTY_FUNCTION__ << ": Assertion '" << #b << "' failed"; throw std::runtime_error(ss.str()); } }

#endif

#if defined(_MSC_VER)
#define IKFAST_ALIGNED16(x) __declspec(align(16)) x
#else
#define IKFAST_ALIGNED16(x) x __attribute((aligned(16)))
#endif

#define IK2PI  ((IkReal)6.28318530717959)
#define IKPI  ((IkReal)3.14159265358979)
#define IKPI_2  ((IkReal)1.57079632679490)

#ifdef _MSC_VER
#ifndef isnan
#define isnan _isnan
#endif
#endif // _MSC_VER

// lapack routines
extern "C" {
  void dgetrf_ (const int* m, const int* n, double* a, const int* lda, int* ipiv, int* info);
  void zgetrf_ (const int* m, const int* n, std::complex<double>* a, const int* lda, int* ipiv, int* info);
  void dgetri_(const int* n, const double* a, const int* lda, int* ipiv, double* work, const int* lwork, int* info);
  void dgesv_ (const int* n, const int* nrhs, double* a, const int* lda, int* ipiv, double* b, const int* ldb, int* info);
  void dgetrs_(const char *trans, const int *n, const int *nrhs, double *a, const int *lda, int *ipiv, double *b, const int *ldb, int *info);
  void dgeev_(const char *jobvl, const char *jobvr, const int *n, double *a, const int *lda, double *wr, double *wi,double *vl, const int *ldvl, double *vr, const int *ldvr, double *work, const int *lwork, int *info);
}

using namespace std; // necessary to get std math routines

#ifdef IKFAST_NAMESPACE
namespace IKFAST_NAMESPACE {
#endif

inline float IKabs(float f) { return fabsf(f); }
inline double IKabs(double f) { return fabs(f); }

inline float IKsqr(float f) { return f*f; }
inline double IKsqr(double f) { return f*f; }

inline float IKlog(float f) { return logf(f); }
inline double IKlog(double f) { return log(f); }

// allows asin and acos to exceed 1
#ifndef IKFAST_SINCOS_THRESH
#define IKFAST_SINCOS_THRESH ((IkReal)0.000001)
#endif

// used to check input to atan2 for degenerate cases
#ifndef IKFAST_ATAN2_MAGTHRESH
#define IKFAST_ATAN2_MAGTHRESH ((IkReal)2e-6)
#endif

// minimum distance of separate solutions
#ifndef IKFAST_SOLUTION_THRESH
#define IKFAST_SOLUTION_THRESH ((IkReal)1e-6)
#endif

inline float IKasin(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(-IKPI_2);
else if( f >= 1 ) return float(IKPI_2);
return asinf(f);
}
inline double IKasin(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asin(f);
}

// return positive value in [0,y)
inline float IKfmod(float x, float y)
{
    while(x < 0) {
        x += y;
    }
    return fmodf(x,y);
}

// return positive value in [0,y)
inline double IKfmod(double x, double y)
{
    while(x < 0) {
        x += y;
    }
    return fmod(x,y);
}

inline float IKacos(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(IKPI);
else if( f >= 1 ) return float(0);
return acosf(f);
}
inline double IKacos(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0;
return acos(f);
}
inline float IKsin(float f) { return sinf(f); }
inline double IKsin(double f) { return sin(f); }
inline float IKcos(float f) { return cosf(f); }
inline double IKcos(double f) { return cos(f); }
inline float IKtan(float f) { return tanf(f); }
inline double IKtan(double f) { return tan(f); }
inline float IKsqrt(float f) { if( f <= 0.0f ) return 0.0f; return sqrtf(f); }
inline double IKsqrt(double f) { if( f <= 0.0 ) return 0.0; return sqrt(f); }
inline float IKatan2(float fy, float fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return float(IKPI_2);
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2f(fy,fx);
}
inline double IKatan2(double fy, double fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2(fy,fx);
}

inline float IKsign(float f) {
    if( f > 0 ) {
        return float(1);
    }
    else if( f < 0 ) {
        return float(-1);
    }
    return 0;
}

inline double IKsign(double f) {
    if( f > 0 ) {
        return 1.0;
    }
    else if( f < 0 ) {
        return -1.0;
    }
    return 0;
}

/// solves the forward kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API void ComputeFk(const IkReal* j, IkReal* eetrans, IkReal* eerot) {
IkReal x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71,x72,x73;
x0=IKcos(j[1]);
x1=IKsin(j[2]);
x2=IKcos(j[2]);
x3=IKcos(j[3]);
x4=IKsin(j[1]);
x5=IKsin(j[3]);
x6=IKcos(j[4]);
x7=IKsin(j[4]);
x8=IKsin(j[5]);
x9=IKcos(j[5]);
x10=IKcos(j[6]);
x11=IKsin(j[6]);
x12=IKsin(j[0]);
x13=IKcos(j[0]);
x14=((IkReal(0.999999995000000))*(x13));
x15=((IkReal(9.99999995000000e-5))*(x12));
x16=((IkReal(0.999998175954991))*(x1));
x17=((IkReal(8.99999996355000e-5))*(x3));
x18=((IkReal(0.00190999651607403))*(x1));
x19=((IkReal(8.99999996355000e-5))*(x5));
x20=((IkReal(0.00190999651607403))*(x10));
x21=((IkReal(0.999999995950000))*(x3));
x22=((IkReal(0.00190999651607403))*(x2));
x23=((IkReal(0.999998175954991))*(x2));
x24=((IkReal(0.00190999651607403))*(x11));
x25=((IkReal(0.999998175954991))*(x11));
x26=((IkReal(0.999999995950000))*(x5));
x27=((IkReal(0.999998175954991))*(x10));
x28=((IkReal(1.00000000000000))*(x7));
x29=((IkReal(-0.00190999651607403))*(x1));
x30=((IkReal(-0.999999995950000))*(x3));
x31=((IkReal(-0.00190999651607403))*(x2));
x32=((x4)*(x5));
x33=((IkReal(-0.999999995950000))*(x5));
x34=((x3)*(x4));
x35=((x0)*(x22));
x36=((x0)*(x16));
x37=((x19)*(x4));
x38=((((IkReal(-1.00000000000000))*(x14)))+(x15));
x39=((((IkReal(-1.00000000000000))*(x15)))+(x14));
x40=((((IkReal(-0.999999995000000))*(x12)))+(((IkReal(-9.99999995000000e-5))*(x13))));
x41=((((IkReal(0.999999995000000))*(x12)))+(((IkReal(9.99999995000000e-5))*(x13))));
x42=((x39)*(x4));
x43=((x0)*(x38));
x44=((x38)*(x4));
x45=((x1)*(x40));
x46=((x4)*(x40));
x47=((x2)*(x40));
x48=((x4)*(x41));
x49=((x0)*(x41));
x50=((((IkReal(-1.00000000000000))*(x36)))+(x35));
x51=((((IkReal(-1.00000000000000))*(x35)))+(x36));
x52=((x0)*(((x18)+(x23))));
x53=((IkReal(-1.00000000000000))*(x52));
x54=((x3)*(x51));
x55=((x5)*(x50));
x56=((x17)*(x51));
x57=((x52)*(x6));
x58=((x53)*(x7));
x59=((x37)+(x56));
x60=((((IkReal(-1.00000000000000))*(x21)*(x4)))+(((IkReal(-1.00000000000000))*(x26)*(x50)))+(x59));
x61=((((x30)*(x4)))+(((x33)*(x50)))+(x59));
x62=((IkReal(1.00000000000000))*(x60));
x63=((((IkReal(-8.99999996355000e-5))*(x34)))+(((IkReal(-8.99999996355000e-5))*(x55)))+(((IkReal(-0.999999995950000))*(x32)))+(((x30)*(x51))));
x64=((x60)*(x7));
x65=((x6)*(x60));
x66=((x61)*(x7));
x67=((x6)*(x61));
x68=((((x23)*(x40)))+(((x18)*(x40)))+(((x16)*(x42)))+(((x22)*(x44))));
x69=((((x23)*(x38)))+(((x18)*(x38)))+(((x16)*(x46)))+(((x22)*(x48))));
x70=((IkReal(-1.00000000000000))*(x69));
x71=((((x29)*(x40)))+(((IkReal(-0.999998175954991))*(x47)))+(((IkReal(-0.999998175954991))*(x1)*(x42)))+(((x31)*(x44))));
IkReal x74=((IkReal(1.00000000000000))*(x4));
x72=((((x8)*(((x58)+(x67)))))+(((x9)*(((((IkReal(-1.00000000000000))*(x26)*(x74)))+(((IkReal(-1.00000000000000))*(x19)*(x50)))+(((IkReal(-1.00000000000000))*(x17)*(x74)))+(((IkReal(-1.00000000000000))*(x21)*(x51))))))));
x73=((((x8)*(((x58)+(x65)))))+(((x63)*(x9))));
eerot[0]=((((x9)*(((((IkReal(-1.00000000000000))*(x28)*(x53)))+(((IkReal(-1.00000000000000))*(x6)*(x62)))))))+(((x63)*(x8))));
eerot[1]=((((IkReal(-1.00000000000000))*(x25)*(((((IkReal(-1.00000000000000))*(x57)))+(((IkReal(-1.00000000000000))*(x66)))))))+(((x20)*(((x57)+(x66)))))+(((IkReal(-1.00000000000000))*(x27)*(x72)))+(((x24)*(x72))));
eerot[2]=((((x27)*(((x57)+(x64)))))+(((x20)*(x73)))+(((x25)*(x73)))+(((x24)*(((((IkReal(-1.00000000000000))*(x28)*(x60)))+(((IkReal(-1.00000000000000))*(x57))))))));
eetrans[0]=((IkReal(-0.249520000000000))+(((x8)*(((((IkReal(0.0741000000000000))*(x58)))+(((IkReal(0.0741000000000000))*(x67)))))))+(((x9)*(((((IkReal(-0.0740999996998950))*(x54)))+(((IkReal(-6.66899997299055e-6))*(x55)))+(((IkReal(-0.0740999996998950))*(x32)))+(((IkReal(-6.66899997299055e-6))*(x34)))))))+(((IkReal(-0.224440599091016))*(x32)))+(((IkReal(-0.224440599091016))*(x54)))+(((IkReal(-2.01996539181914e-5))*(x55)))+(((IkReal(-2.01996539181914e-5))*(x34)))+(((IkReal(-0.317970000000000))*(x4))));
eerot[3]=((((x8)*(((((x26)*(x43)))+(((x17)*(x43)))+(((x19)*(x71)))+(((x21)*(x68)))))))+(((x9)*(((((x7)*(((((x29)*(x42)))+(((x23)*(x44)))+(((x16)*(x40)))+(((x31)*(x40)))))))+(((x6)*(((((x19)*(x43)))+(((x17)*(x68)))+(((IkReal(-1.00000000000000))*(x26)*(x71)))+(((IkReal(-1.00000000000000))*(x21)*(x43))))))))))));
eerot[4]=((((((((IkReal(0.999998175954991))*(((((((((IkReal(-9.99999990950000e-5))*(IKsin(j[0]))))+(((IkReal(0.999999990950000))*(IKcos(j[0]))))))*(IKcos(j[1]))*(IKsin(j[3]))))+(((((((IkReal(-8.99999991855000e-9))*(IKsin(j[0]))))+(((IkReal(8.99999991855000e-5))*(IKcos(j[0]))))))*(IKcos(j[1]))*(IKcos(j[3]))))+(((((((IkReal(-0.999999995950000))*(((((IkReal(-1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(-0.00190999650652405))*(IKsin(j[0]))))))*(IKsin(j[2]))))+(((IkReal(-0.999999995950000))*(((((IkReal(-9.99998170955000e-5))*(IKcos(j[0]))))+(((IkReal(-0.999998170955000))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((IkReal(-0.999999995950000))*(((((IkReal(-0.00190999650652405))*(IKcos(j[0]))))+(((IkReal(1.90999650652405e-7))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((IkReal(-0.999999995950000))*(((((IkReal(0.999998170955000))*(IKcos(j[0]))))+(((IkReal(-9.99998170955000e-5))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))))*(IKcos(j[3]))))+(((((((IkReal(-8.99999996355000e-5))*(((((IkReal(1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(0.00190999650652405))*(IKsin(j[0]))))))*(IKsin(j[2]))))+(((IkReal(-8.99999996355000e-5))*(((((IkReal(-1.90999650652405e-7))*(IKsin(j[0]))))+(((IkReal(0.00190999650652405))*(IKcos(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((IkReal(-8.99999996355000e-5))*(((((IkReal(0.999998170955000))*(IKsin(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKcos(j[0]))))))*(IKcos(j[2]))))+(((IkReal(-8.99999996355000e-5))*(((((IkReal(-0.999998170955000))*(IKcos(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))))*(IKsin(j[3]))))))*(IKcos(j[5]))))+(((IkReal(0.999998175954991))*(((((((((((((IkReal(8.99999991855000e-9))*(IKsin(j[0]))))+(((IkReal(-8.99999991855000e-5))*(IKcos(j[0]))))))*(IKcos(j[1]))*(IKsin(j[3]))))+(((((((IkReal(-9.99999990950000e-5))*(IKsin(j[0]))))+(((IkReal(0.999999990950000))*(IKcos(j[0]))))))*(IKcos(j[1]))*(IKcos(j[3]))))+(((((((IkReal(-0.999999995950000))*(((((IkReal(-1.90999650652405e-7))*(IKsin(j[0]))))+(((IkReal(0.00190999650652405))*(IKcos(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((IkReal(-0.999999995950000))*(((((IkReal(1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(0.00190999650652405))*(IKsin(j[0]))))))*(IKsin(j[2]))))+(((IkReal(-0.999999995950000))*(((((IkReal(0.999998170955000))*(IKsin(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKcos(j[0]))))))*(IKcos(j[2]))))+(((IkReal(-0.999999995950000))*(((((IkReal(-0.999998170955000))*(IKcos(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((((((IkReal(8.99999996355000e-5))*(((((IkReal(-0.00190999650652405))*(IKcos(j[0]))))+(((IkReal(1.90999650652405e-7))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((IkReal(8.99999996355000e-5))*(((((IkReal(0.999998170955000))*(IKcos(j[0]))))+(((IkReal(-9.99998170955000e-5))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))+(((IkReal(8.99999996355000e-5))*(((((IkReal(-9.99998170955000e-5))*(IKcos(j[0]))))+(((IkReal(-0.999998170955000))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((IkReal(8.99999996355000e-5))*(((((IkReal(-1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(-0.00190999650652405))*(IKsin(j[0]))))))*(IKsin(j[2]))))))*(IKcos(j[3]))))))*(IKcos(j[4]))))+(((((((((((IkReal(-9.99998170955000e-5))*(IKcos(j[0]))))+(((IkReal(-0.999998170955000))*(IKsin(j[0]))))))*(IKsin(j[2]))))+(((((((IkReal(-0.00190999650652405))*(IKcos(j[0]))))+(((IkReal(1.90999650652405e-7))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))+(((((((IkReal(1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(0.00190999650652405))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((((((IkReal(-0.999998170955000))*(IKcos(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))))*(IKsin(j[4]))))))*(IKsin(j[5]))))))*(IKcos(j[6]))))+(((((((IkReal(-0.00190999651607403))*(((((((((IkReal(-1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(-0.00190999650652405))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((((((IkReal(0.999998170955000))*(IKcos(j[0]))))+(((IkReal(-9.99998170955000e-5))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((((((IkReal(0.999998170955000))*(IKsin(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKcos(j[0]))))))*(IKsin(j[2]))))+(((((((IkReal(-1.90999650652405e-7))*(IKsin(j[0]))))+(((IkReal(0.00190999650652405))*(IKcos(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))))*(IKcos(j[4]))))+(((IkReal(-0.00190999651607403))*(((((((((IkReal(8.99999991855000e-9))*(IKsin(j[0]))))+(((IkReal(-8.99999991855000e-5))*(IKcos(j[0]))))))*(IKcos(j[1]))*(IKsin(j[3]))))+(((((((IkReal(-9.99999990950000e-5))*(IKsin(j[0]))))+(((IkReal(0.999999990950000))*(IKcos(j[0]))))))*(IKcos(j[1]))*(IKcos(j[3]))))+(((((((IkReal(-0.999999995950000))*(((((IkReal(-1.90999650652405e-7))*(IKsin(j[0]))))+(((IkReal(0.00190999650652405))*(IKcos(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((IkReal(-0.999999995950000))*(((((IkReal(1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(0.00190999650652405))*(IKsin(j[0]))))))*(IKsin(j[2]))))+(((IkReal(-0.999999995950000))*(((((IkReal(0.999998170955000))*(IKsin(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKcos(j[0]))))))*(IKcos(j[2]))))+(((IkReal(-0.999999995950000))*(((((IkReal(-0.999998170955000))*(IKcos(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((((((IkReal(8.99999996355000e-5))*(((((IkReal(-0.00190999650652405))*(IKcos(j[0]))))+(((IkReal(1.90999650652405e-7))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((IkReal(8.99999996355000e-5))*(((((IkReal(0.999998170955000))*(IKcos(j[0]))))+(((IkReal(-9.99998170955000e-5))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))+(((IkReal(8.99999996355000e-5))*(((((IkReal(-9.99998170955000e-5))*(IKcos(j[0]))))+(((IkReal(-0.999998170955000))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((IkReal(8.99999996355000e-5))*(((((IkReal(-1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(-0.00190999650652405))*(IKsin(j[0]))))))*(IKsin(j[2]))))))*(IKcos(j[3]))))))*(IKsin(j[4]))))))*(IKcos(j[6]))))+(((((((IkReal(-0.00190999651607403))*(((((((((((((IkReal(8.99999991855000e-9))*(IKsin(j[0]))))+(((IkReal(-8.99999991855000e-5))*(IKcos(j[0]))))))*(IKcos(j[1]))*(IKsin(j[3]))))+(((((((IkReal(-9.99999990950000e-5))*(IKsin(j[0]))))+(((IkReal(0.999999990950000))*(IKcos(j[0]))))))*(IKcos(j[1]))*(IKcos(j[3]))))+(((((((IkReal(-0.999999995950000))*(((((IkReal(-1.90999650652405e-7))*(IKsin(j[0]))))+(((IkReal(0.00190999650652405))*(IKcos(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((IkReal(-0.999999995950000))*(((((IkReal(1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(0.00190999650652405))*(IKsin(j[0]))))))*(IKsin(j[2]))))+(((IkReal(-0.999999995950000))*(((((IkReal(0.999998170955000))*(IKsin(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKcos(j[0]))))))*(IKcos(j[2]))))+(((IkReal(-0.999999995950000))*(((((IkReal(-0.999998170955000))*(IKcos(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((((((IkReal(8.99999996355000e-5))*(((((IkReal(-0.00190999650652405))*(IKcos(j[0]))))+(((IkReal(1.90999650652405e-7))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((IkReal(8.99999996355000e-5))*(((((IkReal(0.999998170955000))*(IKcos(j[0]))))+(((IkReal(-9.99998170955000e-5))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))+(((IkReal(8.99999996355000e-5))*(((((IkReal(-9.99998170955000e-5))*(IKcos(j[0]))))+(((IkReal(-0.999998170955000))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((IkReal(8.99999996355000e-5))*(((((IkReal(-1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(-0.00190999650652405))*(IKsin(j[0]))))))*(IKsin(j[2]))))))*(IKcos(j[3]))))))*(IKcos(j[4]))))+(((((((((((IkReal(-9.99998170955000e-5))*(IKcos(j[0]))))+(((IkReal(-0.999998170955000))*(IKsin(j[0]))))))*(IKsin(j[2]))))+(((((((IkReal(-0.00190999650652405))*(IKcos(j[0]))))+(((IkReal(1.90999650652405e-7))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))+(((((((IkReal(1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(0.00190999650652405))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((((((IkReal(-0.999998170955000))*(IKcos(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))))*(IKsin(j[4]))))))*(IKsin(j[5]))))+(((IkReal(-0.00190999651607403))*(((((((((IkReal(-9.99999990950000e-5))*(IKsin(j[0]))))+(((IkReal(0.999999990950000))*(IKcos(j[0]))))))*(IKcos(j[1]))*(IKsin(j[3]))))+(((((((IkReal(-8.99999991855000e-9))*(IKsin(j[0]))))+(((IkReal(8.99999991855000e-5))*(IKcos(j[0]))))))*(IKcos(j[1]))*(IKcos(j[3]))))+(((((((IkReal(-0.999999995950000))*(((((IkReal(-1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(-0.00190999650652405))*(IKsin(j[0]))))))*(IKsin(j[2]))))+(((IkReal(-0.999999995950000))*(((((IkReal(-9.99998170955000e-5))*(IKcos(j[0]))))+(((IkReal(-0.999998170955000))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((IkReal(-0.999999995950000))*(((((IkReal(-0.00190999650652405))*(IKcos(j[0]))))+(((IkReal(1.90999650652405e-7))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((IkReal(-0.999999995950000))*(((((IkReal(0.999998170955000))*(IKcos(j[0]))))+(((IkReal(-9.99998170955000e-5))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))))*(IKcos(j[3]))))+(((((((IkReal(-8.99999996355000e-5))*(((((IkReal(1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(0.00190999650652405))*(IKsin(j[0]))))))*(IKsin(j[2]))))+(((IkReal(-8.99999996355000e-5))*(((((IkReal(-1.90999650652405e-7))*(IKsin(j[0]))))+(((IkReal(0.00190999650652405))*(IKcos(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((IkReal(-8.99999996355000e-5))*(((((IkReal(0.999998170955000))*(IKsin(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKcos(j[0]))))))*(IKcos(j[2]))))+(((IkReal(-8.99999996355000e-5))*(((((IkReal(-0.999998170955000))*(IKcos(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))))*(IKsin(j[3]))))))*(IKcos(j[5]))))))*(IKsin(j[6]))))+(((((((IkReal(0.999998175954991))*(((((IkReal(-1.00000000000000))*(((((IkReal(-1.90999650652405e-7))*(IKsin(j[0]))))+(((IkReal(0.00190999650652405))*(IKcos(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))+(((IkReal(-1.00000000000000))*(((((IkReal(-1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(-0.00190999650652405))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((IkReal(-1.00000000000000))*(((((IkReal(0.999998170955000))*(IKsin(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKcos(j[0]))))))*(IKsin(j[2]))))+(((IkReal(-1.00000000000000))*(((((IkReal(0.999998170955000))*(IKcos(j[0]))))+(((IkReal(-9.99998170955000e-5))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))))*(IKcos(j[4]))))+(((IkReal(0.999998175954991))*(((((IkReal(-1.00000000000000))*(((((IkReal(-0.999999995950000))*(((((IkReal(-1.90999650652405e-7))*(IKsin(j[0]))))+(((IkReal(0.00190999650652405))*(IKcos(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((IkReal(-0.999999995950000))*(((((IkReal(1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(0.00190999650652405))*(IKsin(j[0]))))))*(IKsin(j[2]))))+(((IkReal(-0.999999995950000))*(((((IkReal(0.999998170955000))*(IKsin(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKcos(j[0]))))))*(IKcos(j[2]))))+(((IkReal(-0.999999995950000))*(((((IkReal(-0.999998170955000))*(IKcos(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((IkReal(-1.00000000000000))*(((((IkReal(-9.99999990950000e-5))*(IKsin(j[0]))))+(((IkReal(0.999999990950000))*(IKcos(j[0]))))))*(IKcos(j[1]))*(IKcos(j[3]))))+(((IkReal(-1.00000000000000))*(((((IkReal(8.99999996355000e-5))*(((((IkReal(-0.00190999650652405))*(IKcos(j[0]))))+(((IkReal(1.90999650652405e-7))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((IkReal(8.99999996355000e-5))*(((((IkReal(0.999998170955000))*(IKcos(j[0]))))+(((IkReal(-9.99998170955000e-5))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))+(((IkReal(8.99999996355000e-5))*(((((IkReal(-9.99998170955000e-5))*(IKcos(j[0]))))+(((IkReal(-0.999998170955000))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((IkReal(8.99999996355000e-5))*(((((IkReal(-1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(-0.00190999650652405))*(IKsin(j[0]))))))*(IKsin(j[2]))))))*(IKcos(j[3]))))+(((IkReal(-1.00000000000000))*(((((IkReal(8.99999991855000e-9))*(IKsin(j[0]))))+(((IkReal(-8.99999991855000e-5))*(IKcos(j[0]))))))*(IKcos(j[1]))*(IKsin(j[3]))))))*(IKsin(j[4]))))))*(IKsin(j[6])))));
eerot[5]=((((((((IkReal(-0.00190999651607403))*(((((IkReal(-1.00000000000000))*(((((IkReal(-0.999999995950000))*(((((IkReal(-1.90999650652405e-7))*(IKsin(j[0]))))+(((IkReal(0.00190999650652405))*(IKcos(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((IkReal(-0.999999995950000))*(((((IkReal(1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(0.00190999650652405))*(IKsin(j[0]))))))*(IKsin(j[2]))))+(((IkReal(-0.999999995950000))*(((((IkReal(0.999998170955000))*(IKsin(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKcos(j[0]))))))*(IKcos(j[2]))))+(((IkReal(-0.999999995950000))*(((((IkReal(-0.999998170955000))*(IKcos(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((IkReal(-1.00000000000000))*(((((IkReal(-9.99999990950000e-5))*(IKsin(j[0]))))+(((IkReal(0.999999990950000))*(IKcos(j[0]))))))*(IKcos(j[1]))*(IKcos(j[3]))))+(((IkReal(-1.00000000000000))*(((((IkReal(8.99999996355000e-5))*(((((IkReal(-0.00190999650652405))*(IKcos(j[0]))))+(((IkReal(1.90999650652405e-7))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((IkReal(8.99999996355000e-5))*(((((IkReal(0.999998170955000))*(IKcos(j[0]))))+(((IkReal(-9.99998170955000e-5))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))+(((IkReal(8.99999996355000e-5))*(((((IkReal(-9.99998170955000e-5))*(IKcos(j[0]))))+(((IkReal(-0.999998170955000))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((IkReal(8.99999996355000e-5))*(((((IkReal(-1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(-0.00190999650652405))*(IKsin(j[0]))))))*(IKsin(j[2]))))))*(IKcos(j[3]))))+(((IkReal(-1.00000000000000))*(((((IkReal(8.99999991855000e-9))*(IKsin(j[0]))))+(((IkReal(-8.99999991855000e-5))*(IKcos(j[0]))))))*(IKcos(j[1]))*(IKsin(j[3]))))))*(IKsin(j[4]))))+(((IkReal(-0.00190999651607403))*(((((IkReal(-1.00000000000000))*(((((IkReal(-1.90999650652405e-7))*(IKsin(j[0]))))+(((IkReal(0.00190999650652405))*(IKcos(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))+(((IkReal(-1.00000000000000))*(((((IkReal(-1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(-0.00190999650652405))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((IkReal(-1.00000000000000))*(((((IkReal(0.999998170955000))*(IKsin(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKcos(j[0]))))))*(IKsin(j[2]))))+(((IkReal(-1.00000000000000))*(((((IkReal(0.999998170955000))*(IKcos(j[0]))))+(((IkReal(-9.99998170955000e-5))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))))*(IKcos(j[4]))))))*(IKsin(j[6]))))+(((((((IkReal(-0.999998175954991))*(((((((((IkReal(-9.99999990950000e-5))*(IKsin(j[0]))))+(((IkReal(0.999999990950000))*(IKcos(j[0]))))))*(IKcos(j[1]))*(IKsin(j[3]))))+(((((((IkReal(-8.99999991855000e-9))*(IKsin(j[0]))))+(((IkReal(8.99999991855000e-5))*(IKcos(j[0]))))))*(IKcos(j[1]))*(IKcos(j[3]))))+(((((((IkReal(-0.999999995950000))*(((((IkReal(-1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(-0.00190999650652405))*(IKsin(j[0]))))))*(IKsin(j[2]))))+(((IkReal(-0.999999995950000))*(((((IkReal(-9.99998170955000e-5))*(IKcos(j[0]))))+(((IkReal(-0.999998170955000))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((IkReal(-0.999999995950000))*(((((IkReal(-0.00190999650652405))*(IKcos(j[0]))))+(((IkReal(1.90999650652405e-7))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((IkReal(-0.999999995950000))*(((((IkReal(0.999998170955000))*(IKcos(j[0]))))+(((IkReal(-9.99998170955000e-5))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))))*(IKcos(j[3]))))+(((((((IkReal(-8.99999996355000e-5))*(((((IkReal(1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(0.00190999650652405))*(IKsin(j[0]))))))*(IKsin(j[2]))))+(((IkReal(-8.99999996355000e-5))*(((((IkReal(-1.90999650652405e-7))*(IKsin(j[0]))))+(((IkReal(0.00190999650652405))*(IKcos(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((IkReal(-8.99999996355000e-5))*(((((IkReal(0.999998170955000))*(IKsin(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKcos(j[0]))))))*(IKcos(j[2]))))+(((IkReal(-8.99999996355000e-5))*(((((IkReal(-0.999998170955000))*(IKcos(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))))*(IKsin(j[3]))))))*(IKcos(j[5]))))+(((IkReal(-0.999998175954991))*(((((((((((((IkReal(8.99999991855000e-9))*(IKsin(j[0]))))+(((IkReal(-8.99999991855000e-5))*(IKcos(j[0]))))))*(IKcos(j[1]))*(IKsin(j[3]))))+(((((((IkReal(-9.99999990950000e-5))*(IKsin(j[0]))))+(((IkReal(0.999999990950000))*(IKcos(j[0]))))))*(IKcos(j[1]))*(IKcos(j[3]))))+(((((((IkReal(-0.999999995950000))*(((((IkReal(-1.90999650652405e-7))*(IKsin(j[0]))))+(((IkReal(0.00190999650652405))*(IKcos(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((IkReal(-0.999999995950000))*(((((IkReal(1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(0.00190999650652405))*(IKsin(j[0]))))))*(IKsin(j[2]))))+(((IkReal(-0.999999995950000))*(((((IkReal(0.999998170955000))*(IKsin(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKcos(j[0]))))))*(IKcos(j[2]))))+(((IkReal(-0.999999995950000))*(((((IkReal(-0.999998170955000))*(IKcos(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((((((IkReal(8.99999996355000e-5))*(((((IkReal(-0.00190999650652405))*(IKcos(j[0]))))+(((IkReal(1.90999650652405e-7))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((IkReal(8.99999996355000e-5))*(((((IkReal(0.999998170955000))*(IKcos(j[0]))))+(((IkReal(-9.99998170955000e-5))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))+(((IkReal(8.99999996355000e-5))*(((((IkReal(-9.99998170955000e-5))*(IKcos(j[0]))))+(((IkReal(-0.999998170955000))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((IkReal(8.99999996355000e-5))*(((((IkReal(-1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(-0.00190999650652405))*(IKsin(j[0]))))))*(IKsin(j[2]))))))*(IKcos(j[3]))))))*(IKcos(j[4]))))+(((((((((((IkReal(-9.99998170955000e-5))*(IKcos(j[0]))))+(((IkReal(-0.999998170955000))*(IKsin(j[0]))))))*(IKsin(j[2]))))+(((((((IkReal(-0.00190999650652405))*(IKcos(j[0]))))+(((IkReal(1.90999650652405e-7))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))+(((((((IkReal(1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(0.00190999650652405))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((((((IkReal(-0.999998170955000))*(IKcos(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))))*(IKsin(j[4]))))))*(IKsin(j[5]))))))*(IKsin(j[6]))))+(((((((IkReal(-0.00190999651607403))*(((((((((((((IkReal(8.99999991855000e-9))*(IKsin(j[0]))))+(((IkReal(-8.99999991855000e-5))*(IKcos(j[0]))))))*(IKcos(j[1]))*(IKsin(j[3]))))+(((((((IkReal(-9.99999990950000e-5))*(IKsin(j[0]))))+(((IkReal(0.999999990950000))*(IKcos(j[0]))))))*(IKcos(j[1]))*(IKcos(j[3]))))+(((((((IkReal(-0.999999995950000))*(((((IkReal(-1.90999650652405e-7))*(IKsin(j[0]))))+(((IkReal(0.00190999650652405))*(IKcos(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((IkReal(-0.999999995950000))*(((((IkReal(1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(0.00190999650652405))*(IKsin(j[0]))))))*(IKsin(j[2]))))+(((IkReal(-0.999999995950000))*(((((IkReal(0.999998170955000))*(IKsin(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKcos(j[0]))))))*(IKcos(j[2]))))+(((IkReal(-0.999999995950000))*(((((IkReal(-0.999998170955000))*(IKcos(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((((((IkReal(8.99999996355000e-5))*(((((IkReal(-0.00190999650652405))*(IKcos(j[0]))))+(((IkReal(1.90999650652405e-7))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((IkReal(8.99999996355000e-5))*(((((IkReal(0.999998170955000))*(IKcos(j[0]))))+(((IkReal(-9.99998170955000e-5))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))+(((IkReal(8.99999996355000e-5))*(((((IkReal(-9.99998170955000e-5))*(IKcos(j[0]))))+(((IkReal(-0.999998170955000))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((IkReal(8.99999996355000e-5))*(((((IkReal(-1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(-0.00190999650652405))*(IKsin(j[0]))))))*(IKsin(j[2]))))))*(IKcos(j[3]))))))*(IKcos(j[4]))))+(((((((((((IkReal(-9.99998170955000e-5))*(IKcos(j[0]))))+(((IkReal(-0.999998170955000))*(IKsin(j[0]))))))*(IKsin(j[2]))))+(((((((IkReal(-0.00190999650652405))*(IKcos(j[0]))))+(((IkReal(1.90999650652405e-7))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))+(((((((IkReal(1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(0.00190999650652405))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((((((IkReal(-0.999998170955000))*(IKcos(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))))*(IKsin(j[4]))))))*(IKsin(j[5]))))+(((IkReal(-0.00190999651607403))*(((((((((IkReal(-9.99999990950000e-5))*(IKsin(j[0]))))+(((IkReal(0.999999990950000))*(IKcos(j[0]))))))*(IKcos(j[1]))*(IKsin(j[3]))))+(((((((IkReal(-8.99999991855000e-9))*(IKsin(j[0]))))+(((IkReal(8.99999991855000e-5))*(IKcos(j[0]))))))*(IKcos(j[1]))*(IKcos(j[3]))))+(((((((IkReal(-0.999999995950000))*(((((IkReal(-1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(-0.00190999650652405))*(IKsin(j[0]))))))*(IKsin(j[2]))))+(((IkReal(-0.999999995950000))*(((((IkReal(-9.99998170955000e-5))*(IKcos(j[0]))))+(((IkReal(-0.999998170955000))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((IkReal(-0.999999995950000))*(((((IkReal(-0.00190999650652405))*(IKcos(j[0]))))+(((IkReal(1.90999650652405e-7))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((IkReal(-0.999999995950000))*(((((IkReal(0.999998170955000))*(IKcos(j[0]))))+(((IkReal(-9.99998170955000e-5))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))))*(IKcos(j[3]))))+(((((((IkReal(-8.99999996355000e-5))*(((((IkReal(1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(0.00190999650652405))*(IKsin(j[0]))))))*(IKsin(j[2]))))+(((IkReal(-8.99999996355000e-5))*(((((IkReal(-1.90999650652405e-7))*(IKsin(j[0]))))+(((IkReal(0.00190999650652405))*(IKcos(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((IkReal(-8.99999996355000e-5))*(((((IkReal(0.999998170955000))*(IKsin(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKcos(j[0]))))))*(IKcos(j[2]))))+(((IkReal(-8.99999996355000e-5))*(((((IkReal(-0.999998170955000))*(IKcos(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))))*(IKsin(j[3]))))))*(IKcos(j[5]))))))*(IKcos(j[6]))))+(((((((IkReal(-0.999998175954991))*(((((((((IkReal(8.99999991855000e-9))*(IKsin(j[0]))))+(((IkReal(-8.99999991855000e-5))*(IKcos(j[0]))))))*(IKcos(j[1]))*(IKsin(j[3]))))+(((((((IkReal(-9.99999990950000e-5))*(IKsin(j[0]))))+(((IkReal(0.999999990950000))*(IKcos(j[0]))))))*(IKcos(j[1]))*(IKcos(j[3]))))+(((((((IkReal(-0.999999995950000))*(((((IkReal(-1.90999650652405e-7))*(IKsin(j[0]))))+(((IkReal(0.00190999650652405))*(IKcos(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((IkReal(-0.999999995950000))*(((((IkReal(1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(0.00190999650652405))*(IKsin(j[0]))))))*(IKsin(j[2]))))+(((IkReal(-0.999999995950000))*(((((IkReal(0.999998170955000))*(IKsin(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKcos(j[0]))))))*(IKcos(j[2]))))+(((IkReal(-0.999999995950000))*(((((IkReal(-0.999998170955000))*(IKcos(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((((((IkReal(8.99999996355000e-5))*(((((IkReal(-0.00190999650652405))*(IKcos(j[0]))))+(((IkReal(1.90999650652405e-7))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((IkReal(8.99999996355000e-5))*(((((IkReal(0.999998170955000))*(IKcos(j[0]))))+(((IkReal(-9.99998170955000e-5))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))+(((IkReal(8.99999996355000e-5))*(((((IkReal(-9.99998170955000e-5))*(IKcos(j[0]))))+(((IkReal(-0.999998170955000))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((IkReal(8.99999996355000e-5))*(((((IkReal(-1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(-0.00190999650652405))*(IKsin(j[0]))))))*(IKsin(j[2]))))))*(IKcos(j[3]))))))*(IKsin(j[4]))))+(((IkReal(-0.999998175954991))*(((((((((IkReal(-1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(-0.00190999650652405))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((((((IkReal(0.999998170955000))*(IKcos(j[0]))))+(((IkReal(-9.99998170955000e-5))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((((((IkReal(0.999998170955000))*(IKsin(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKcos(j[0]))))))*(IKsin(j[2]))))+(((((((IkReal(-1.90999650652405e-7))*(IKsin(j[0]))))+(((IkReal(0.00190999650652405))*(IKcos(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))))*(IKcos(j[4]))))))*(IKcos(j[6])))));
eetrans[1]=((IkReal(0.363780000000000))+(((((((IkReal(-0.317969998410150))*(IKcos(j[0]))))+(((IkReal(3.17969998410150e-5))*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((((((IkReal(2.01996539181914e-5))*(((((IkReal(0.999998170955000))*(IKsin(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKcos(j[0]))))))*(IKcos(j[2]))))+(((IkReal(2.01996539181914e-5))*(((((IkReal(-0.999998170955000))*(IKcos(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))+(((IkReal(2.01996539181914e-5))*(((((IkReal(-1.90999650652405e-7))*(IKsin(j[0]))))+(((IkReal(0.00190999650652405))*(IKcos(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((IkReal(2.01996539181914e-5))*(((((IkReal(1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(0.00190999650652405))*(IKsin(j[0]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((((((IkReal(-2.01996538171931e-5))*(IKcos(j[0]))))+(((IkReal(2.01996538171931e-9))*(IKsin(j[0]))))))*(IKcos(j[1]))*(IKcos(j[3]))))+(((((((((((IkReal(0.0740999996998950))*(((((IkReal(-0.00190999650652405))*(IKcos(j[0]))))+(((IkReal(1.90999650652405e-7))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((IkReal(0.0740999996998950))*(((((IkReal(0.999998170955000))*(IKcos(j[0]))))+(((IkReal(-9.99998170955000e-5))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))+(((IkReal(0.0740999996998950))*(((((IkReal(-9.99998170955000e-5))*(IKcos(j[0]))))+(((IkReal(-0.999998170955000))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((IkReal(0.0740999996998950))*(((((IkReal(-1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(-0.00190999650652405))*(IKsin(j[0]))))))*(IKsin(j[2]))))))*(IKcos(j[3]))))+(((((((IkReal(-6.66899993964555e-6))*(IKcos(j[0]))))+(((IkReal(6.66899993964555e-10))*(IKsin(j[0]))))))*(IKcos(j[1]))*(IKcos(j[3]))))+(((((((IkReal(6.66899997299055e-6))*(((((IkReal(1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(0.00190999650652405))*(IKsin(j[0]))))))*(IKsin(j[2]))))+(((IkReal(6.66899997299055e-6))*(((((IkReal(0.999998170955000))*(IKsin(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKcos(j[0]))))))*(IKcos(j[2]))))+(((IkReal(6.66899997299055e-6))*(((((IkReal(-0.999998170955000))*(IKcos(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))+(((IkReal(6.66899997299055e-6))*(((((IkReal(-1.90999650652405e-7))*(IKsin(j[0]))))+(((IkReal(0.00190999650652405))*(IKcos(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))))*(IKsin(j[3]))))+(((((((IkReal(7.40999993293950e-6))*(IKsin(j[0]))))+(((IkReal(-0.0740999993293950))*(IKcos(j[0]))))))*(IKcos(j[1]))*(IKsin(j[3]))))))*(IKcos(j[5]))))+(((((((IkReal(-0.224440597968813))*(IKcos(j[0]))))+(((IkReal(2.24440597968813e-5))*(IKsin(j[0]))))))*(IKcos(j[1]))*(IKsin(j[3]))))+(((((((IkReal(0.224440599091016))*(((((IkReal(-9.99998170955000e-5))*(IKcos(j[0]))))+(((IkReal(-0.999998170955000))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((IkReal(0.224440599091016))*(((((IkReal(-0.00190999650652405))*(IKcos(j[0]))))+(((IkReal(1.90999650652405e-7))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((IkReal(0.224440599091016))*(((((IkReal(0.999998170955000))*(IKcos(j[0]))))+(((IkReal(-9.99998170955000e-5))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))+(((IkReal(0.224440599091016))*(((((IkReal(-1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(-0.00190999650652405))*(IKsin(j[0]))))))*(IKsin(j[2]))))))*(IKcos(j[3]))))+(((((((((((IkReal(-0.0741000000000000))*(((((IkReal(-0.999999995950000))*(((((IkReal(-1.90999650652405e-7))*(IKsin(j[0]))))+(((IkReal(0.00190999650652405))*(IKcos(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((IkReal(-0.999999995950000))*(((((IkReal(1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(0.00190999650652405))*(IKsin(j[0]))))))*(IKsin(j[2]))))+(((IkReal(-0.999999995950000))*(((((IkReal(0.999998170955000))*(IKsin(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKcos(j[0]))))))*(IKcos(j[2]))))+(((IkReal(-0.999999995950000))*(((((IkReal(-0.999998170955000))*(IKcos(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((IkReal(-0.0741000000000000))*(((((IkReal(8.99999996355000e-5))*(((((IkReal(-0.00190999650652405))*(IKcos(j[0]))))+(((IkReal(1.90999650652405e-7))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((IkReal(8.99999996355000e-5))*(((((IkReal(0.999998170955000))*(IKcos(j[0]))))+(((IkReal(-9.99998170955000e-5))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))+(((IkReal(8.99999996355000e-5))*(((((IkReal(-9.99998170955000e-5))*(IKcos(j[0]))))+(((IkReal(-0.999998170955000))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((IkReal(8.99999996355000e-5))*(((((IkReal(-1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(-0.00190999650652405))*(IKsin(j[0]))))))*(IKsin(j[2]))))))*(IKcos(j[3]))))+(((IkReal(-0.0741000000000000))*(((((IkReal(8.99999991855000e-9))*(IKsin(j[0]))))+(((IkReal(-8.99999991855000e-5))*(IKcos(j[0]))))))*(IKcos(j[1]))*(IKsin(j[3]))))+(((IkReal(-0.0741000000000000))*(((((IkReal(-9.99999990950000e-5))*(IKsin(j[0]))))+(((IkReal(0.999999990950000))*(IKcos(j[0]))))))*(IKcos(j[1]))*(IKcos(j[3]))))))*(IKcos(j[4]))))+(((((((IkReal(-0.0741000000000000))*(((((IkReal(-9.99998170955000e-5))*(IKcos(j[0]))))+(((IkReal(-0.999998170955000))*(IKsin(j[0]))))))*(IKsin(j[2]))))+(((IkReal(-0.0741000000000000))*(((((IkReal(1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(0.00190999650652405))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((IkReal(-0.0741000000000000))*(((((IkReal(-0.999998170955000))*(IKcos(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((IkReal(-0.0741000000000000))*(((((IkReal(-0.00190999650652405))*(IKcos(j[0]))))+(((IkReal(1.90999650652405e-7))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))))*(IKsin(j[4]))))))*(IKsin(j[5])))));
eerot[6]=((((x8)*(((((x26)*(x49)))+(((x17)*(x49)))+(((x19)*(x70)))+(((x21)*(x69)))))))+(((x9)*(((((x6)*(((((x19)*(x49)))+(((x17)*(x69)))+(((x30)*(x49)))+(((x33)*(x70)))))))+(((x7)*(((((x29)*(x46)))+(((x23)*(x48)))+(((x16)*(x38)))+(((x31)*(x38))))))))))));
eerot[7]=((((((((IkReal(0.999998175954991))*(((((IkReal(-1.00000000000000))*(((((IkReal(8.99999996355000e-5))*(((((IkReal(-0.00190999650652405))*(IKcos(j[0]))))+(((IkReal(1.90999650652405e-7))*(IKsin(j[0]))))))*(IKsin(j[2]))))+(((IkReal(8.99999996355000e-5))*(((((IkReal(-9.99998170955000e-5))*(IKcos(j[0]))))+(((IkReal(-0.999998170955000))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))+(((IkReal(8.99999996355000e-5))*(((((IkReal(-0.999998170955000))*(IKcos(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((IkReal(8.99999996355000e-5))*(((((IkReal(1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(0.00190999650652405))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))))*(IKcos(j[3]))))+(((IkReal(-1.00000000000000))*(((((IkReal(8.99999991855000e-5))*(IKsin(j[0]))))+(((IkReal(8.99999991855000e-9))*(IKcos(j[0]))))))*(IKcos(j[1]))*(IKsin(j[3]))))+(((IkReal(-1.00000000000000))*(((((IkReal(-0.999999990950000))*(IKsin(j[0]))))+(((IkReal(-9.99999990950000e-5))*(IKcos(j[0]))))))*(IKcos(j[1]))*(IKcos(j[3]))))+(((IkReal(-1.00000000000000))*(((((IkReal(-0.999999995950000))*(((((IkReal(0.999998170955000))*(IKsin(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKcos(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))+(((IkReal(-0.999999995950000))*(((((IkReal(0.999998170955000))*(IKcos(j[0]))))+(((IkReal(-9.99998170955000e-5))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((IkReal(-0.999999995950000))*(((((IkReal(-1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(-0.00190999650652405))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((IkReal(-0.999999995950000))*(((((IkReal(-1.90999650652405e-7))*(IKsin(j[0]))))+(((IkReal(0.00190999650652405))*(IKcos(j[0]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))))*(IKsin(j[4]))))+(((IkReal(0.999998175954991))*(((((IkReal(-1.00000000000000))*(((((IkReal(-1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(-0.00190999650652405))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))+(((IkReal(-1.00000000000000))*(((((IkReal(0.999998170955000))*(IKcos(j[0]))))+(((IkReal(-9.99998170955000e-5))*(IKsin(j[0]))))))*(IKsin(j[2]))))+(((IkReal(-1.00000000000000))*(((((IkReal(-9.99998170955000e-5))*(IKcos(j[0]))))+(((IkReal(-0.999998170955000))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((IkReal(-1.00000000000000))*(((((IkReal(-0.00190999650652405))*(IKcos(j[0]))))+(((IkReal(1.90999650652405e-7))*(IKsin(j[0]))))))*(IKcos(j[2]))))))*(IKcos(j[4]))))))*(IKsin(j[6]))))+(((((((IkReal(0.999998175954991))*(((((((((IkReal(-8.99999996355000e-5))*(((((IkReal(-1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(-0.00190999650652405))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((IkReal(-8.99999996355000e-5))*(((((IkReal(0.999998170955000))*(IKcos(j[0]))))+(((IkReal(-9.99998170955000e-5))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((IkReal(-8.99999996355000e-5))*(((((IkReal(0.999998170955000))*(IKsin(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKcos(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))+(((IkReal(-8.99999996355000e-5))*(((((IkReal(-1.90999650652405e-7))*(IKsin(j[0]))))+(((IkReal(0.00190999650652405))*(IKcos(j[0]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((((((IkReal(-0.999999990950000))*(IKsin(j[0]))))+(((IkReal(-9.99999990950000e-5))*(IKcos(j[0]))))))*(IKcos(j[1]))*(IKsin(j[3]))))+(((((((IkReal(-8.99999991855000e-9))*(IKcos(j[0]))))+(((IkReal(-8.99999991855000e-5))*(IKsin(j[0]))))))*(IKcos(j[1]))*(IKcos(j[3]))))+(((((((IkReal(-0.999999995950000))*(((((IkReal(-0.999998170955000))*(IKcos(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((IkReal(-0.999999995950000))*(((((IkReal(1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(0.00190999650652405))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((IkReal(-0.999999995950000))*(((((IkReal(-0.00190999650652405))*(IKcos(j[0]))))+(((IkReal(1.90999650652405e-7))*(IKsin(j[0]))))))*(IKsin(j[2]))))+(((IkReal(-0.999999995950000))*(((((IkReal(-9.99998170955000e-5))*(IKcos(j[0]))))+(((IkReal(-0.999998170955000))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))))*(IKcos(j[3]))))))*(IKcos(j[5]))))+(((IkReal(0.999998175954991))*(((((((((((((IkReal(-0.999999995950000))*(((((IkReal(0.999998170955000))*(IKsin(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKcos(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))+(((IkReal(-0.999999995950000))*(((((IkReal(0.999998170955000))*(IKcos(j[0]))))+(((IkReal(-9.99998170955000e-5))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((IkReal(-0.999999995950000))*(((((IkReal(-1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(-0.00190999650652405))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((IkReal(-0.999999995950000))*(((((IkReal(-1.90999650652405e-7))*(IKsin(j[0]))))+(((IkReal(0.00190999650652405))*(IKcos(j[0]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((((((IkReal(-0.999999990950000))*(IKsin(j[0]))))+(((IkReal(-9.99999990950000e-5))*(IKcos(j[0]))))))*(IKcos(j[1]))*(IKcos(j[3]))))+(((((((IkReal(8.99999991855000e-5))*(IKsin(j[0]))))+(((IkReal(8.99999991855000e-9))*(IKcos(j[0]))))))*(IKcos(j[1]))*(IKsin(j[3]))))+(((((((IkReal(8.99999996355000e-5))*(((((IkReal(-0.00190999650652405))*(IKcos(j[0]))))+(((IkReal(1.90999650652405e-7))*(IKsin(j[0]))))))*(IKsin(j[2]))))+(((IkReal(8.99999996355000e-5))*(((((IkReal(-9.99998170955000e-5))*(IKcos(j[0]))))+(((IkReal(-0.999998170955000))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))+(((IkReal(8.99999996355000e-5))*(((((IkReal(-0.999998170955000))*(IKcos(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((IkReal(8.99999996355000e-5))*(((((IkReal(1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(0.00190999650652405))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))))*(IKcos(j[3]))))))*(IKcos(j[4]))))+(((((((((((IkReal(-1.90999650652405e-7))*(IKsin(j[0]))))+(((IkReal(0.00190999650652405))*(IKcos(j[0]))))))*(IKcos(j[2]))))+(((((((IkReal(-0.999998170955000))*(IKcos(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKsin(j[0]))))))*(IKsin(j[2]))))+(((((((IkReal(1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(0.00190999650652405))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))+(((((((IkReal(0.999998170955000))*(IKsin(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKcos(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))))*(IKsin(j[4]))))))*(IKsin(j[5]))))))*(IKcos(j[6]))))+(((((((IkReal(-0.00190999651607403))*(((((((((IkReal(-0.999999995950000))*(((((IkReal(0.999998170955000))*(IKsin(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKcos(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))+(((IkReal(-0.999999995950000))*(((((IkReal(0.999998170955000))*(IKcos(j[0]))))+(((IkReal(-9.99998170955000e-5))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((IkReal(-0.999999995950000))*(((((IkReal(-1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(-0.00190999650652405))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((IkReal(-0.999999995950000))*(((((IkReal(-1.90999650652405e-7))*(IKsin(j[0]))))+(((IkReal(0.00190999650652405))*(IKcos(j[0]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((((((IkReal(-0.999999990950000))*(IKsin(j[0]))))+(((IkReal(-9.99999990950000e-5))*(IKcos(j[0]))))))*(IKcos(j[1]))*(IKcos(j[3]))))+(((((((IkReal(8.99999991855000e-5))*(IKsin(j[0]))))+(((IkReal(8.99999991855000e-9))*(IKcos(j[0]))))))*(IKcos(j[1]))*(IKsin(j[3]))))+(((((((IkReal(8.99999996355000e-5))*(((((IkReal(-0.00190999650652405))*(IKcos(j[0]))))+(((IkReal(1.90999650652405e-7))*(IKsin(j[0]))))))*(IKsin(j[2]))))+(((IkReal(8.99999996355000e-5))*(((((IkReal(-9.99998170955000e-5))*(IKcos(j[0]))))+(((IkReal(-0.999998170955000))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))+(((IkReal(8.99999996355000e-5))*(((((IkReal(-0.999998170955000))*(IKcos(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((IkReal(8.99999996355000e-5))*(((((IkReal(1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(0.00190999650652405))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))))*(IKcos(j[3]))))))*(IKsin(j[4]))))+(((IkReal(-0.00190999651607403))*(((((((((IkReal(0.999998170955000))*(IKcos(j[0]))))+(((IkReal(-9.99998170955000e-5))*(IKsin(j[0]))))))*(IKsin(j[2]))))+(((((((IkReal(-1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(-0.00190999650652405))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))+(((((((IkReal(-9.99998170955000e-5))*(IKcos(j[0]))))+(((IkReal(-0.999998170955000))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((((((IkReal(-0.00190999650652405))*(IKcos(j[0]))))+(((IkReal(1.90999650652405e-7))*(IKsin(j[0]))))))*(IKcos(j[2]))))))*(IKcos(j[4]))))))*(IKcos(j[6]))))+(((((((IkReal(-0.00190999651607403))*(((((((((IkReal(-8.99999996355000e-5))*(((((IkReal(-1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(-0.00190999650652405))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((IkReal(-8.99999996355000e-5))*(((((IkReal(0.999998170955000))*(IKcos(j[0]))))+(((IkReal(-9.99998170955000e-5))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((IkReal(-8.99999996355000e-5))*(((((IkReal(0.999998170955000))*(IKsin(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKcos(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))+(((IkReal(-8.99999996355000e-5))*(((((IkReal(-1.90999650652405e-7))*(IKsin(j[0]))))+(((IkReal(0.00190999650652405))*(IKcos(j[0]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((((((IkReal(-0.999999990950000))*(IKsin(j[0]))))+(((IkReal(-9.99999990950000e-5))*(IKcos(j[0]))))))*(IKcos(j[1]))*(IKsin(j[3]))))+(((((((IkReal(-8.99999991855000e-9))*(IKcos(j[0]))))+(((IkReal(-8.99999991855000e-5))*(IKsin(j[0]))))))*(IKcos(j[1]))*(IKcos(j[3]))))+(((((((IkReal(-0.999999995950000))*(((((IkReal(-0.999998170955000))*(IKcos(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((IkReal(-0.999999995950000))*(((((IkReal(1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(0.00190999650652405))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((IkReal(-0.999999995950000))*(((((IkReal(-0.00190999650652405))*(IKcos(j[0]))))+(((IkReal(1.90999650652405e-7))*(IKsin(j[0]))))))*(IKsin(j[2]))))+(((IkReal(-0.999999995950000))*(((((IkReal(-9.99998170955000e-5))*(IKcos(j[0]))))+(((IkReal(-0.999998170955000))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))))*(IKcos(j[3]))))))*(IKcos(j[5]))))+(((IkReal(-0.00190999651607403))*(((((((((((((IkReal(-0.999999995950000))*(((((IkReal(0.999998170955000))*(IKsin(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKcos(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))+(((IkReal(-0.999999995950000))*(((((IkReal(0.999998170955000))*(IKcos(j[0]))))+(((IkReal(-9.99998170955000e-5))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((IkReal(-0.999999995950000))*(((((IkReal(-1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(-0.00190999650652405))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((IkReal(-0.999999995950000))*(((((IkReal(-1.90999650652405e-7))*(IKsin(j[0]))))+(((IkReal(0.00190999650652405))*(IKcos(j[0]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((((((IkReal(-0.999999990950000))*(IKsin(j[0]))))+(((IkReal(-9.99999990950000e-5))*(IKcos(j[0]))))))*(IKcos(j[1]))*(IKcos(j[3]))))+(((((((IkReal(8.99999991855000e-5))*(IKsin(j[0]))))+(((IkReal(8.99999991855000e-9))*(IKcos(j[0]))))))*(IKcos(j[1]))*(IKsin(j[3]))))+(((((((IkReal(8.99999996355000e-5))*(((((IkReal(-0.00190999650652405))*(IKcos(j[0]))))+(((IkReal(1.90999650652405e-7))*(IKsin(j[0]))))))*(IKsin(j[2]))))+(((IkReal(8.99999996355000e-5))*(((((IkReal(-9.99998170955000e-5))*(IKcos(j[0]))))+(((IkReal(-0.999998170955000))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))+(((IkReal(8.99999996355000e-5))*(((((IkReal(-0.999998170955000))*(IKcos(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((IkReal(8.99999996355000e-5))*(((((IkReal(1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(0.00190999650652405))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))))*(IKcos(j[3]))))))*(IKcos(j[4]))))+(((((((((((IkReal(-1.90999650652405e-7))*(IKsin(j[0]))))+(((IkReal(0.00190999650652405))*(IKcos(j[0]))))))*(IKcos(j[2]))))+(((((((IkReal(-0.999998170955000))*(IKcos(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKsin(j[0]))))))*(IKsin(j[2]))))+(((((((IkReal(1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(0.00190999650652405))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))+(((((((IkReal(0.999998170955000))*(IKsin(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKcos(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))))*(IKsin(j[4]))))))*(IKsin(j[5]))))))*(IKsin(j[6])))));
eerot[8]=((((((((IkReal(-0.00190999651607403))*(((((((((IkReal(-8.99999996355000e-5))*(((((IkReal(-1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(-0.00190999650652405))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((IkReal(-8.99999996355000e-5))*(((((IkReal(0.999998170955000))*(IKcos(j[0]))))+(((IkReal(-9.99998170955000e-5))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((IkReal(-8.99999996355000e-5))*(((((IkReal(0.999998170955000))*(IKsin(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKcos(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))+(((IkReal(-8.99999996355000e-5))*(((((IkReal(-1.90999650652405e-7))*(IKsin(j[0]))))+(((IkReal(0.00190999650652405))*(IKcos(j[0]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((((((IkReal(-0.999999990950000))*(IKsin(j[0]))))+(((IkReal(-9.99999990950000e-5))*(IKcos(j[0]))))))*(IKcos(j[1]))*(IKsin(j[3]))))+(((((((IkReal(-8.99999991855000e-9))*(IKcos(j[0]))))+(((IkReal(-8.99999991855000e-5))*(IKsin(j[0]))))))*(IKcos(j[1]))*(IKcos(j[3]))))+(((((((IkReal(-0.999999995950000))*(((((IkReal(-0.999998170955000))*(IKcos(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((IkReal(-0.999999995950000))*(((((IkReal(1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(0.00190999650652405))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((IkReal(-0.999999995950000))*(((((IkReal(-0.00190999650652405))*(IKcos(j[0]))))+(((IkReal(1.90999650652405e-7))*(IKsin(j[0]))))))*(IKsin(j[2]))))+(((IkReal(-0.999999995950000))*(((((IkReal(-9.99998170955000e-5))*(IKcos(j[0]))))+(((IkReal(-0.999998170955000))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))))*(IKcos(j[3]))))))*(IKcos(j[5]))))+(((IkReal(-0.00190999651607403))*(((((((((((((IkReal(-0.999999995950000))*(((((IkReal(0.999998170955000))*(IKsin(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKcos(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))+(((IkReal(-0.999999995950000))*(((((IkReal(0.999998170955000))*(IKcos(j[0]))))+(((IkReal(-9.99998170955000e-5))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((IkReal(-0.999999995950000))*(((((IkReal(-1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(-0.00190999650652405))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((IkReal(-0.999999995950000))*(((((IkReal(-1.90999650652405e-7))*(IKsin(j[0]))))+(((IkReal(0.00190999650652405))*(IKcos(j[0]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((((((IkReal(-0.999999990950000))*(IKsin(j[0]))))+(((IkReal(-9.99999990950000e-5))*(IKcos(j[0]))))))*(IKcos(j[1]))*(IKcos(j[3]))))+(((((((IkReal(8.99999991855000e-5))*(IKsin(j[0]))))+(((IkReal(8.99999991855000e-9))*(IKcos(j[0]))))))*(IKcos(j[1]))*(IKsin(j[3]))))+(((((((IkReal(8.99999996355000e-5))*(((((IkReal(-0.00190999650652405))*(IKcos(j[0]))))+(((IkReal(1.90999650652405e-7))*(IKsin(j[0]))))))*(IKsin(j[2]))))+(((IkReal(8.99999996355000e-5))*(((((IkReal(-9.99998170955000e-5))*(IKcos(j[0]))))+(((IkReal(-0.999998170955000))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))+(((IkReal(8.99999996355000e-5))*(((((IkReal(-0.999998170955000))*(IKcos(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((IkReal(8.99999996355000e-5))*(((((IkReal(1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(0.00190999650652405))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))))*(IKcos(j[3]))))))*(IKcos(j[4]))))+(((((((((((IkReal(-1.90999650652405e-7))*(IKsin(j[0]))))+(((IkReal(0.00190999650652405))*(IKcos(j[0]))))))*(IKcos(j[2]))))+(((((((IkReal(-0.999998170955000))*(IKcos(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKsin(j[0]))))))*(IKsin(j[2]))))+(((((((IkReal(1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(0.00190999650652405))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))+(((((((IkReal(0.999998170955000))*(IKsin(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKcos(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))))*(IKsin(j[4]))))))*(IKsin(j[5]))))))*(IKcos(j[6]))))+(((((((IkReal(-0.999998175954991))*(((((((((IkReal(-8.99999996355000e-5))*(((((IkReal(-1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(-0.00190999650652405))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((IkReal(-8.99999996355000e-5))*(((((IkReal(0.999998170955000))*(IKcos(j[0]))))+(((IkReal(-9.99998170955000e-5))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((IkReal(-8.99999996355000e-5))*(((((IkReal(0.999998170955000))*(IKsin(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKcos(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))+(((IkReal(-8.99999996355000e-5))*(((((IkReal(-1.90999650652405e-7))*(IKsin(j[0]))))+(((IkReal(0.00190999650652405))*(IKcos(j[0]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((((((IkReal(-0.999999990950000))*(IKsin(j[0]))))+(((IkReal(-9.99999990950000e-5))*(IKcos(j[0]))))))*(IKcos(j[1]))*(IKsin(j[3]))))+(((((((IkReal(-8.99999991855000e-9))*(IKcos(j[0]))))+(((IkReal(-8.99999991855000e-5))*(IKsin(j[0]))))))*(IKcos(j[1]))*(IKcos(j[3]))))+(((((((IkReal(-0.999999995950000))*(((((IkReal(-0.999998170955000))*(IKcos(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((IkReal(-0.999999995950000))*(((((IkReal(1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(0.00190999650652405))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((IkReal(-0.999999995950000))*(((((IkReal(-0.00190999650652405))*(IKcos(j[0]))))+(((IkReal(1.90999650652405e-7))*(IKsin(j[0]))))))*(IKsin(j[2]))))+(((IkReal(-0.999999995950000))*(((((IkReal(-9.99998170955000e-5))*(IKcos(j[0]))))+(((IkReal(-0.999998170955000))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))))*(IKcos(j[3]))))))*(IKcos(j[5]))))+(((IkReal(-0.999998175954991))*(((((((((((((IkReal(-0.999999995950000))*(((((IkReal(0.999998170955000))*(IKsin(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKcos(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))+(((IkReal(-0.999999995950000))*(((((IkReal(0.999998170955000))*(IKcos(j[0]))))+(((IkReal(-9.99998170955000e-5))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((IkReal(-0.999999995950000))*(((((IkReal(-1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(-0.00190999650652405))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((IkReal(-0.999999995950000))*(((((IkReal(-1.90999650652405e-7))*(IKsin(j[0]))))+(((IkReal(0.00190999650652405))*(IKcos(j[0]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((((((IkReal(-0.999999990950000))*(IKsin(j[0]))))+(((IkReal(-9.99999990950000e-5))*(IKcos(j[0]))))))*(IKcos(j[1]))*(IKcos(j[3]))))+(((((((IkReal(8.99999991855000e-5))*(IKsin(j[0]))))+(((IkReal(8.99999991855000e-9))*(IKcos(j[0]))))))*(IKcos(j[1]))*(IKsin(j[3]))))+(((((((IkReal(8.99999996355000e-5))*(((((IkReal(-0.00190999650652405))*(IKcos(j[0]))))+(((IkReal(1.90999650652405e-7))*(IKsin(j[0]))))))*(IKsin(j[2]))))+(((IkReal(8.99999996355000e-5))*(((((IkReal(-9.99998170955000e-5))*(IKcos(j[0]))))+(((IkReal(-0.999998170955000))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))+(((IkReal(8.99999996355000e-5))*(((((IkReal(-0.999998170955000))*(IKcos(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((IkReal(8.99999996355000e-5))*(((((IkReal(1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(0.00190999650652405))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))))*(IKcos(j[3]))))))*(IKcos(j[4]))))+(((((((((((IkReal(-1.90999650652405e-7))*(IKsin(j[0]))))+(((IkReal(0.00190999650652405))*(IKcos(j[0]))))))*(IKcos(j[2]))))+(((((((IkReal(-0.999998170955000))*(IKcos(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKsin(j[0]))))))*(IKsin(j[2]))))+(((((((IkReal(1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(0.00190999650652405))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))+(((((((IkReal(0.999998170955000))*(IKsin(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKcos(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))))*(IKsin(j[4]))))))*(IKsin(j[5]))))))*(IKsin(j[6]))))+(((((((IkReal(-0.999998175954991))*(((((((((IkReal(-0.999999995950000))*(((((IkReal(0.999998170955000))*(IKsin(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKcos(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))+(((IkReal(-0.999999995950000))*(((((IkReal(0.999998170955000))*(IKcos(j[0]))))+(((IkReal(-9.99998170955000e-5))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((IkReal(-0.999999995950000))*(((((IkReal(-1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(-0.00190999650652405))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((IkReal(-0.999999995950000))*(((((IkReal(-1.90999650652405e-7))*(IKsin(j[0]))))+(((IkReal(0.00190999650652405))*(IKcos(j[0]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((((((IkReal(-0.999999990950000))*(IKsin(j[0]))))+(((IkReal(-9.99999990950000e-5))*(IKcos(j[0]))))))*(IKcos(j[1]))*(IKcos(j[3]))))+(((((((IkReal(8.99999991855000e-5))*(IKsin(j[0]))))+(((IkReal(8.99999991855000e-9))*(IKcos(j[0]))))))*(IKcos(j[1]))*(IKsin(j[3]))))+(((((((IkReal(8.99999996355000e-5))*(((((IkReal(-0.00190999650652405))*(IKcos(j[0]))))+(((IkReal(1.90999650652405e-7))*(IKsin(j[0]))))))*(IKsin(j[2]))))+(((IkReal(8.99999996355000e-5))*(((((IkReal(-9.99998170955000e-5))*(IKcos(j[0]))))+(((IkReal(-0.999998170955000))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))+(((IkReal(8.99999996355000e-5))*(((((IkReal(-0.999998170955000))*(IKcos(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((IkReal(8.99999996355000e-5))*(((((IkReal(1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(0.00190999650652405))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))))*(IKcos(j[3]))))))*(IKsin(j[4]))))+(((IkReal(-0.999998175954991))*(((((((((IkReal(0.999998170955000))*(IKcos(j[0]))))+(((IkReal(-9.99998170955000e-5))*(IKsin(j[0]))))))*(IKsin(j[2]))))+(((((((IkReal(-1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(-0.00190999650652405))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))+(((((((IkReal(-9.99998170955000e-5))*(IKcos(j[0]))))+(((IkReal(-0.999998170955000))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((((((IkReal(-0.00190999650652405))*(IKcos(j[0]))))+(((IkReal(1.90999650652405e-7))*(IKsin(j[0]))))))*(IKcos(j[2]))))))*(IKcos(j[4]))))))*(IKcos(j[6]))))+(((((((IkReal(-0.00190999651607403))*(((((IkReal(-1.00000000000000))*(((((IkReal(-1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(-0.00190999650652405))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))+(((IkReal(-1.00000000000000))*(((((IkReal(0.999998170955000))*(IKcos(j[0]))))+(((IkReal(-9.99998170955000e-5))*(IKsin(j[0]))))))*(IKsin(j[2]))))+(((IkReal(-1.00000000000000))*(((((IkReal(-9.99998170955000e-5))*(IKcos(j[0]))))+(((IkReal(-0.999998170955000))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((IkReal(-1.00000000000000))*(((((IkReal(-0.00190999650652405))*(IKcos(j[0]))))+(((IkReal(1.90999650652405e-7))*(IKsin(j[0]))))))*(IKcos(j[2]))))))*(IKcos(j[4]))))+(((IkReal(-0.00190999651607403))*(((((IkReal(-1.00000000000000))*(((((IkReal(8.99999996355000e-5))*(((((IkReal(-0.00190999650652405))*(IKcos(j[0]))))+(((IkReal(1.90999650652405e-7))*(IKsin(j[0]))))))*(IKsin(j[2]))))+(((IkReal(8.99999996355000e-5))*(((((IkReal(-9.99998170955000e-5))*(IKcos(j[0]))))+(((IkReal(-0.999998170955000))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))+(((IkReal(8.99999996355000e-5))*(((((IkReal(-0.999998170955000))*(IKcos(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((IkReal(8.99999996355000e-5))*(((((IkReal(1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(0.00190999650652405))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))))*(IKcos(j[3]))))+(((IkReal(-1.00000000000000))*(((((IkReal(8.99999991855000e-5))*(IKsin(j[0]))))+(((IkReal(8.99999991855000e-9))*(IKcos(j[0]))))))*(IKcos(j[1]))*(IKsin(j[3]))))+(((IkReal(-1.00000000000000))*(((((IkReal(-0.999999990950000))*(IKsin(j[0]))))+(((IkReal(-9.99999990950000e-5))*(IKcos(j[0]))))))*(IKcos(j[1]))*(IKcos(j[3]))))+(((IkReal(-1.00000000000000))*(((((IkReal(-0.999999995950000))*(((((IkReal(0.999998170955000))*(IKsin(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKcos(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))+(((IkReal(-0.999999995950000))*(((((IkReal(0.999998170955000))*(IKcos(j[0]))))+(((IkReal(-9.99998170955000e-5))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((IkReal(-0.999999995950000))*(((((IkReal(-1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(-0.00190999650652405))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((IkReal(-0.999999995950000))*(((((IkReal(-1.90999650652405e-7))*(IKsin(j[0]))))+(((IkReal(0.00190999650652405))*(IKcos(j[0]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))))*(IKsin(j[4]))))))*(IKsin(j[6])))));
eetrans[2]=((((((((IkReal(2.01996539181914e-5))*(((((IkReal(0.999998170955000))*(IKcos(j[0]))))+(((IkReal(-9.99998170955000e-5))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((IkReal(2.01996539181914e-5))*(((((IkReal(0.999998170955000))*(IKsin(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKcos(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))+(((IkReal(2.01996539181914e-5))*(((((IkReal(-1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(-0.00190999650652405))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((IkReal(2.01996539181914e-5))*(((((IkReal(-1.90999650652405e-7))*(IKsin(j[0]))))+(((IkReal(0.00190999650652405))*(IKcos(j[0]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((((((IkReal(0.317969998410150))*(IKsin(j[0]))))+(((IkReal(3.17969998410150e-5))*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((((((IkReal(2.01996538171931e-9))*(IKcos(j[0]))))+(((IkReal(2.01996538171931e-5))*(IKsin(j[0]))))))*(IKcos(j[1]))*(IKcos(j[3]))))+(((((((IkReal(0.224440599091016))*(((((IkReal(1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(0.00190999650652405))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((IkReal(0.224440599091016))*(((((IkReal(-9.99998170955000e-5))*(IKcos(j[0]))))+(((IkReal(-0.999998170955000))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))+(((IkReal(0.224440599091016))*(((((IkReal(-0.999998170955000))*(IKcos(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((IkReal(0.224440599091016))*(((((IkReal(-0.00190999650652405))*(IKcos(j[0]))))+(((IkReal(1.90999650652405e-7))*(IKsin(j[0]))))))*(IKsin(j[2]))))))*(IKcos(j[3]))))+(((((((((((IkReal(6.66899993964555e-6))*(IKsin(j[0]))))+(((IkReal(6.66899993964555e-10))*(IKcos(j[0]))))))*(IKcos(j[1]))*(IKcos(j[3]))))+(((((((IkReal(0.0740999993293950))*(IKsin(j[0]))))+(((IkReal(7.40999993293950e-6))*(IKcos(j[0]))))))*(IKcos(j[1]))*(IKsin(j[3]))))+(((((((IkReal(0.0740999996998950))*(((((IkReal(-0.00190999650652405))*(IKcos(j[0]))))+(((IkReal(1.90999650652405e-7))*(IKsin(j[0]))))))*(IKsin(j[2]))))+(((IkReal(0.0740999996998950))*(((((IkReal(-0.999998170955000))*(IKcos(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((IkReal(0.0740999996998950))*(((((IkReal(1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(0.00190999650652405))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((IkReal(0.0740999996998950))*(((((IkReal(-9.99998170955000e-5))*(IKcos(j[0]))))+(((IkReal(-0.999998170955000))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))))*(IKcos(j[3]))))+(((((((IkReal(6.66899997299055e-6))*(((((IkReal(0.999998170955000))*(IKcos(j[0]))))+(((IkReal(-9.99998170955000e-5))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((IkReal(6.66899997299055e-6))*(((((IkReal(-1.90999650652405e-7))*(IKsin(j[0]))))+(((IkReal(0.00190999650652405))*(IKcos(j[0]))))))*(IKsin(j[2]))))+(((IkReal(6.66899997299055e-6))*(((((IkReal(0.999998170955000))*(IKsin(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKcos(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))+(((IkReal(6.66899997299055e-6))*(((((IkReal(-1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(-0.00190999650652405))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))))*(IKsin(j[3]))))))*(IKcos(j[5]))))+(((((((((((IkReal(-0.0741000000000000))*(((((IkReal(-1.90999650652405e-7))*(IKsin(j[0]))))+(((IkReal(0.00190999650652405))*(IKcos(j[0]))))))*(IKcos(j[2]))))+(((IkReal(-0.0741000000000000))*(((((IkReal(0.999998170955000))*(IKsin(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKcos(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((IkReal(-0.0741000000000000))*(((((IkReal(-0.999998170955000))*(IKcos(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKsin(j[0]))))))*(IKsin(j[2]))))+(((IkReal(-0.0741000000000000))*(((((IkReal(1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(0.00190999650652405))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))))*(IKsin(j[4]))))+(((((((IkReal(-0.0741000000000000))*(((((IkReal(8.99999991855000e-5))*(IKsin(j[0]))))+(((IkReal(8.99999991855000e-9))*(IKcos(j[0]))))))*(IKcos(j[1]))*(IKsin(j[3]))))+(((IkReal(-0.0741000000000000))*(((((IkReal(-0.999999995950000))*(((((IkReal(0.999998170955000))*(IKsin(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKcos(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))+(((IkReal(-0.999999995950000))*(((((IkReal(0.999998170955000))*(IKcos(j[0]))))+(((IkReal(-9.99998170955000e-5))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((IkReal(-0.999999995950000))*(((((IkReal(-1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(-0.00190999650652405))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))+(((IkReal(-0.999999995950000))*(((((IkReal(-1.90999650652405e-7))*(IKsin(j[0]))))+(((IkReal(0.00190999650652405))*(IKcos(j[0]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((IkReal(-0.0741000000000000))*(((((IkReal(-0.999999990950000))*(IKsin(j[0]))))+(((IkReal(-9.99999990950000e-5))*(IKcos(j[0]))))))*(IKcos(j[1]))*(IKcos(j[3]))))+(((IkReal(-0.0741000000000000))*(((((IkReal(8.99999996355000e-5))*(((((IkReal(-0.00190999650652405))*(IKcos(j[0]))))+(((IkReal(1.90999650652405e-7))*(IKsin(j[0]))))))*(IKsin(j[2]))))+(((IkReal(8.99999996355000e-5))*(((((IkReal(-9.99998170955000e-5))*(IKcos(j[0]))))+(((IkReal(-0.999998170955000))*(IKsin(j[0]))))))*(IKsin(j[1]))*(IKsin(j[2]))))+(((IkReal(8.99999996355000e-5))*(((((IkReal(-0.999998170955000))*(IKcos(j[0]))))+(((IkReal(9.99998170955000e-5))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((IkReal(8.99999996355000e-5))*(((((IkReal(1.90999650652405e-7))*(IKcos(j[0]))))+(((IkReal(0.00190999650652405))*(IKsin(j[0]))))))*(IKcos(j[2]))*(IKsin(j[1]))))))*(IKcos(j[3]))))))*(IKcos(j[4]))))))*(IKsin(j[5]))))+(((((((IkReal(0.224440597968813))*(IKsin(j[0]))))+(((IkReal(2.24440597968813e-5))*(IKcos(j[0]))))))*(IKcos(j[1]))*(IKsin(j[3])))));
}

IKFAST_API int GetNumFreeParameters() { return 1; }
IKFAST_API int* GetFreeParameters() { static int freeparams[] = {3}; return freeparams; }
IKFAST_API int GetNumJoints() { return 7; }

IKFAST_API int GetIkRealSize() { return sizeof(IkReal); }

IKFAST_API int GetIkType() { return 0x67000001; }

class IKSolver {
public:
IkReal j3,cj3,sj3,htj3,j4,cj4,sj4,htj4,j5,cj5,sj5,htj5,j7,cj7,sj7,htj7,j8,cj8,sj8,htj8,j9,cj9,sj9,htj9,j6,cj6,sj6,htj6,new_r00,r00,rxp0_0,new_r01,r01,rxp0_1,new_r02,r02,rxp0_2,new_r10,r10,rxp1_0,new_r11,r11,rxp1_1,new_r12,r12,rxp1_2,new_r20,r20,rxp2_0,new_r21,r21,rxp2_1,new_r22,r22,rxp2_2,new_px,px,npx,new_py,py,npy,new_pz,pz,npz,pp;
unsigned char _ij3[2], _nj3,_ij4[2], _nj4,_ij5[2], _nj5,_ij7[2], _nj7,_ij8[2], _nj8,_ij9[2], _nj9,_ij6[2], _nj6;

bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
j3=numeric_limits<IkReal>::quiet_NaN(); _ij3[0] = -1; _ij3[1] = -1; _nj3 = -1; j4=numeric_limits<IkReal>::quiet_NaN(); _ij4[0] = -1; _ij4[1] = -1; _nj4 = -1; j5=numeric_limits<IkReal>::quiet_NaN(); _ij5[0] = -1; _ij5[1] = -1; _nj5 = -1; j7=numeric_limits<IkReal>::quiet_NaN(); _ij7[0] = -1; _ij7[1] = -1; _nj7 = -1; j8=numeric_limits<IkReal>::quiet_NaN(); _ij8[0] = -1; _ij8[1] = -1; _nj8 = -1; j9=numeric_limits<IkReal>::quiet_NaN(); _ij9[0] = -1; _ij9[1] = -1; _nj9 = -1;  _ij6[0] = -1; _ij6[1] = -1; _nj6 = 0; 
for(int dummyiter = 0; dummyiter < 1; ++dummyiter) {
    solutions.Clear();
j6=pfree[0]; cj6=cos(pfree[0]); sj6=sin(pfree[0]);
r00 = eerot[0*3+0];
r01 = eerot[0*3+1];
r02 = eerot[0*3+2];
r10 = eerot[1*3+0];
r11 = eerot[1*3+1];
r12 = eerot[1*3+2];
r20 = eerot[2*3+0];
r21 = eerot[2*3+1];
r22 = eerot[2*3+2];
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];

new_r00=((((IkReal(-0.00190999651607403))*(r21)))+(((IkReal(-0.999998175954991))*(r22))));
new_r01=((((IkReal(-0.00190999651607403))*(r22)))+(((IkReal(0.999998175954991))*(r21))));
new_r02=r20;
new_px=pz;
new_r10=((((IkReal(-0.00190999651607403))*(r11)))+(((IkReal(-0.999998175954991))*(r12))));
new_r11=((((IkReal(-0.00190999651607403))*(r12)))+(((IkReal(0.999998175954991))*(r11))));
new_r12=r10;
new_py=((IkReal(-0.363780000000000))+(py));
new_r20=((((IkReal(0.00190999651607403))*(r01)))+(((IkReal(0.999998175954991))*(r02))));
new_r21=((((IkReal(0.00190999651607403))*(r02)))+(((IkReal(-0.999998175954991))*(r01))));
new_r22=((IkReal(-1.00000000000000))*(r00));
new_pz=((IkReal(-0.249520000000000))+(((IkReal(-1.00000000000000))*(px))));
r00 = new_r00; r01 = new_r01; r02 = new_r02; r10 = new_r10; r11 = new_r11; r12 = new_r12; r20 = new_r20; r21 = new_r21; r22 = new_r22; px = new_px; py = new_py; pz = new_pz;
pp=(((px)*(px))+((py)*(py))+((pz)*(pz)));
npx=((((px)*(r00)))+(((py)*(r10)))+(((pz)*(r20))));
npy=((((px)*(r01)))+(((py)*(r11)))+(((pz)*(r21))));
npz=((((px)*(r02)))+(((py)*(r12)))+(((pz)*(r22))));
rxp0_0=((((IkReal(-1.00000000000000))*(py)*(r20)))+(((pz)*(r10))));
rxp0_1=((((px)*(r20)))+(((IkReal(-1.00000000000000))*(pz)*(r00))));
rxp0_2=((((IkReal(-1.00000000000000))*(px)*(r10)))+(((py)*(r00))));
rxp1_0=((((IkReal(-1.00000000000000))*(py)*(r21)))+(((pz)*(r11))));
rxp1_1=((((px)*(r21)))+(((IkReal(-1.00000000000000))*(pz)*(r01))));
rxp1_2=((((IkReal(-1.00000000000000))*(px)*(r11)))+(((py)*(r01))));
rxp2_0=((((IkReal(-1.00000000000000))*(py)*(r22)))+(((pz)*(r12))));
rxp2_1=((((px)*(r22)))+(((IkReal(-1.00000000000000))*(pz)*(r02))));
rxp2_2=((((IkReal(-1.00000000000000))*(px)*(r12)))+(((py)*(r02))));
{
IkReal dummyeval[1];
dummyeval[0]=(((npx)*(npx))+((npy)*(npy)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(((npx)*(npx))+((npy)*(npy)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j9array[2], cj9array[2], sj9array[2];
bool j9valid[2]={false};
_nj9 = 2;
if( IKabs(((IkReal(-0.148200000000000))*(npy))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.148200000000000))*(npx))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x75=((IkReal(1.00000000000000))*(IKatan2(((IkReal(-0.148200000000000))*(npy)), ((IkReal(-0.148200000000000))*(npx)))));
if( (((((IkReal(0.0219632400000000))*((npy)*(npy))))+(((IkReal(0.0219632400000000))*((npx)*(npx)))))) < (IkReal)-0.00001 )
    continue;
if( (((((IKabs(IKabs(IKsqrt(((((IkReal(0.0219632400000000))*((npy)*(npy))))+(((IkReal(0.0219632400000000))*((npx)*(npx)))))))) != 0)?((IkReal)1/(IKabs(IKsqrt(((((IkReal(0.0219632400000000))*((npy)*(npy))))+(((IkReal(0.0219632400000000))*((npx)*(npx))))))))):(IkReal)1.0e30))*(((IkReal(0.145987693009410))+(((IkReal(0.142730754585940))*(sj6)))+(((IkReal(-1.00000000000000))*(pp))))))) < -1-IKFAST_SINCOS_THRESH || (((((IKabs(IKabs(IKsqrt(((((IkReal(0.0219632400000000))*((npy)*(npy))))+(((IkReal(0.0219632400000000))*((npx)*(npx)))))))) != 0)?((IkReal)1/(IKabs(IKsqrt(((((IkReal(0.0219632400000000))*((npy)*(npy))))+(((IkReal(0.0219632400000000))*((npx)*(npx))))))))):(IkReal)1.0e30))*(((IkReal(0.145987693009410))+(((IkReal(0.142730754585940))*(sj6)))+(((IkReal(-1.00000000000000))*(pp))))))) > 1+IKFAST_SINCOS_THRESH )
    continue;
IkReal x76=IKasin(((((IKabs(IKabs(IKsqrt(((((IkReal(0.0219632400000000))*((npy)*(npy))))+(((IkReal(0.0219632400000000))*((npx)*(npx)))))))) != 0)?((IkReal)1/(IKabs(IKsqrt(((((IkReal(0.0219632400000000))*((npy)*(npy))))+(((IkReal(0.0219632400000000))*((npx)*(npx))))))))):(IkReal)1.0e30))*(((IkReal(0.145987693009410))+(((IkReal(0.142730754585940))*(sj6)))+(((IkReal(-1.00000000000000))*(pp)))))));
j9array[0]=((((IkReal(-1.00000000000000))*(x75)))+(((IkReal(-1.00000000000000))*(x76))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
j9array[1]=((IkReal(3.14159265358979))+(((IkReal(-1.00000000000000))*(x75)))+(x76));
sj9array[1]=IKsin(j9array[1]);
cj9array[1]=IKcos(j9array[1]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
if( j9array[1] > IKPI )
{
    j9array[1]-=IK2PI;
}
else if( j9array[1] < -IKPI )
{    j9array[1]+=IK2PI;
}
j9valid[1] = true;
for(int ij9 = 0; ij9 < 2; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 2; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];

{
IkReal dummyeval[1];
IkReal x77=((npx)*(sj9));
IkReal x78=((cj9)*(npy));
dummyeval[0]=((IkReal(1.00000000000000))+(((IkReal(364.244983891266))*(x77)*(x78)))+(((IkReal(182.122491945633))*((x78)*(x78))))+(((IkReal(26.9905533063428))*(x78)))+(((IkReal(26.9905533063428))*(x77)))+(((IkReal(182.122491945633))*((npz)*(npz))))+(((IkReal(182.122491945633))*((x77)*(x77)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal x79=((npx)*(sj9));
IkReal x80=((cj9)*(npy));
dummyeval[0]=((IkReal(1.00000000000000))+(((IkReal(26.9905533063428))*(x79)))+(((IkReal(182.122491945633))*((x79)*(x79))))+(((IkReal(182.122491945633))*((x80)*(x80))))+(((IkReal(364.244983891266))*(x79)*(x80)))+(((IkReal(26.9905533063428))*(x80)))+(((IkReal(182.122491945633))*((npz)*(npz)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj6;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j7array[2], cj7array[2], sj7array[2];
bool j7valid[2]={false};
_nj7 = 2;
sj7array[0]=((IkReal(-3.14495079425732))*(((IKabs(cj6) != 0)?((IkReal)1/(cj6)):(IkReal)1.0e30))*(((((cj9)*(npx)))+(((IkReal(-1.00000000000000))*(npy)*(sj9))))));
if( sj7array[0] >= -1-IKFAST_SINCOS_THRESH && sj7array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j7valid[0] = j7valid[1] = true;
    j7array[0] = IKasin(sj7array[0]);
    cj7array[0] = IKcos(j7array[0]);
    sj7array[1] = sj7array[0];
    j7array[1] = j7array[0] > 0 ? (IKPI-j7array[0]) : (-IKPI-j7array[0]);
    cj7array[1] = -cj7array[0];
}
else if( isnan(sj7array[0]) )
{
    // probably any value will work
    j7valid[0] = true;
    cj7array[0] = 1; sj7array[0] = 0; j7array[0] = 0;
}
for(int ij7 = 0; ij7 < 2; ++ij7)
{
if( !j7valid[ij7] )
{
    continue;
}
_ij7[0] = ij7; _ij7[1] = -1;
for(int iij7 = ij7+1; iij7 < 2; ++iij7)
{
if( j7valid[iij7] && IKabs(cj7array[ij7]-cj7array[iij7]) < IKFAST_SOLUTION_THRESH && IKabs(sj7array[ij7]-sj7array[iij7]) < IKFAST_SOLUTION_THRESH )
{
    j7valid[iij7]=false; _ij7[1] = iij7; break; 
}
}
j7 = j7array[ij7]; cj7 = cj7array[ij7]; sj7 = sj7array[ij7];

{
IkReal dummyeval[1];
IkReal gconst0;
IkReal x81=((cj9)*(npy));
IkReal x82=((npx)*(sj9));
gconst0=IKsign(((IkReal(54908100.4447556))+(((IkReal(20000000162.0000))*(x81)*(x82)))+(((IkReal(1482000012.00420))*(x82)))+(((IkReal(1482000012.00420))*(x81)))+(((IkReal(10000000081.0000))*((npz)*(npz))))+(((IkReal(10000000081.0000))*((x81)*(x81))))+(((IkReal(10000000081.0000))*((x82)*(x82))))));
IkReal x83=((npx)*(sj9));
IkReal x84=((cj9)*(npy));
dummyeval[0]=((IkReal(1.00000000000000))+(((IkReal(364.244983891266))*(x83)*(x84)))+(((IkReal(182.122491945633))*((x84)*(x84))))+(((IkReal(182.122491945633))*((x83)*(x83))))+(((IkReal(26.9905533063428))*(x83)))+(((IkReal(26.9905533063428))*(x84)))+(((IkReal(182.122491945633))*((npz)*(npz)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
IkReal x85=(npz)*(npz);
IkReal x86=(cj6)*(cj6);
IkReal x87=(cj7)*(cj7);
IkReal x88=((npx)*(sj9));
IkReal x89=((cj6)*(cj7));
IkReal x90=((x86)*(x87));
IkReal x91=((cj9)*(npy)*(x90));
dummyeval[0]=((((IkReal(-182.122491945633))*(cj9)*(npy)*(x91)))+(((IkReal(-26.9905533063428))*(x91)))+(((IkReal(182.122491945633))*(x85)*((sj6)*(sj6))))+(((IkReal(257.104013154194))*(sj6)*(x85)))+(((IkReal(-182.122491945633))*(x90)*((x88)*(x88))))+(((IkReal(-364.244983891266))*(x88)*(x91)))+(((IkReal(-26.9905533063428))*(x88)*(x90)))+(((IkReal(-1.00000000000000))*(x90)))+(((IkReal(90.7390307394388))*(x85))));
dummyeval[1]=((((IkReal(-13.4952766531714))*(npz)*(sj6)))+(((IkReal(-9.52570368736288))*(npz)))+(((IkReal(-1.00000000000000))*(x89)))+(((IkReal(-13.4952766531714))*(x88)*(x89)))+(((IkReal(-13.4952766531714))*(cj9)*(npy)*(x89))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
IkReal x92=((IkReal(1.41672228069352))*(sj6));
IkReal x93=((cj9)*(npy));
IkReal x94=((IkReal(19.1190591186710))*(sj6));
IkReal x95=((npx)*(sj9));
dummyeval[0]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x92))));
dummyeval[1]=((IkReal(1.00000000000000))+(((IkReal(13.4952766531714))*(x93)))+(((IkReal(13.4952766531714))*(x95)))+(x92)+(((IkReal(-19.1190591186710))*(cj6)*(cj7)*(npz)))+(((x93)*(x94)))+(((x94)*(x95))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[3];
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.92522159066969))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((((cj9)*(npx)))+(((IkReal(0.225236181506420))*(sj7)))+(((IkReal(-1.00000000000000))*(npy)*(sj9))));
evalcond[2]=((IkReal(0.0452405276142228))+(((IkReal(-0.148200000000000))*(npx)*(sj9)))+(((IkReal(-1.00000000000000))*(pp)))+(((IkReal(-0.148200000000000))*(cj9)*(npy))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst1;
gconst1=IKsign((cj7)*(cj7));
dummyeval[0]=(cj7)*(cj7);
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
IkReal x96=(cj7)*(cj7);
IkReal x97=((IkReal(13.4952766531714))*(cj7));
IkReal x98=((cj9)*(npy));
IkReal x99=((npx)*(sj9));
IkReal x100=((IkReal(182.122491945633))*(x96));
IkReal x101=((IkReal(26.9905533063428))*(x96));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x100)*((x99)*(x99))))+(((IkReal(-1.00000000000000))*(x101)*(x98)))+(((IkReal(-1.00000000000000))*(x101)*(x99)))+(((IkReal(-1.00000000000000))*(x96)))+(((IkReal(-1.00000000000000))*(x100)*((x98)*(x98))))+(((IkReal(-364.244983891266))*(x96)*(x98)*(x99))));
dummyeval[1]=((((IkReal(-6.16048136947711e-8))*(npz)))+(((IkReal(-1.00000000000000))*(x97)*(x98)))+(((IkReal(-1.00000000000000))*(x97)*(x99)))+(((IkReal(-1.00000000000000))*(cj7))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
IkReal x102=((cj9)*(npy));
IkReal x103=((npx)*(sj9));
dummyeval[0]=((IkReal(-1.11022302462516e-16))+(((IkReal(-91.7079657937178))*((cj7)*(cj7))*((npz)*(npz))))+(((IkReal(2.84217094304040e-14))*((x102)*(x102))))+(((IkReal(5.68434188608080e-14))*(x102)*(x103)))+(((IkReal(2.84217094304040e-14))*((x103)*(x103)))));
dummyeval[1]=((IkReal(4.58109816747765e-9))+(((IkReal(-13.5431138379503))*(cj7)*(npz)))+(((IkReal(6.18231901228228e-8))*(x103)))+(((IkReal(6.18231901228228e-8))*(x102))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[3];
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j7)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.225236181506420))+(((cj9)*(npx)))+(((IkReal(-1.00000000000000))*(npy)*(sj9))));
evalcond[2]=((IkReal(0.0452405276142228))+(((IkReal(-0.148200000000000))*(npx)*(sj9)))+(((IkReal(-1.00000000000000))*(pp)))+(((IkReal(-0.148200000000000))*(cj9)*(npy))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=IkReal(-4.58109820017133e-9);
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=IkReal(-4.58109820017133e-9);
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=IkReal(-4.58109820017133e-9);
dummyeval[1]=((IkReal(4.58109816747765e-9))+(((IkReal(6.18231901228228e-8))*(cj9)*(npy)))+(((IkReal(6.18231901228228e-8))*(npx)*(sj9))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
if( IKabs(((IkReal(972588162.845684))*(npz))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(((IkReal(7.61884652589195e-11))+(((IkReal(1.02818442648811e-9))*(npx)*(sj9)))+(((IkReal(1.02818442648811e-9))*(cj9)*(npy))))) != 0)?((IkReal)1/(((IkReal(7.61884652589195e-11))+(((IkReal(1.02818442648811e-9))*(npx)*(sj9)))+(((IkReal(1.02818442648811e-9))*(cj9)*(npy)))))):(IkReal)1.0e30))*(((IkReal(1.11130722679764e-18))+((npz)*(npz)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(972588162.845684))*(npz)))+IKsqr(((((IKabs(((IkReal(7.61884652589195e-11))+(((IkReal(1.02818442648811e-9))*(npx)*(sj9)))+(((IkReal(1.02818442648811e-9))*(cj9)*(npy))))) != 0)?((IkReal)1/(((IkReal(7.61884652589195e-11))+(((IkReal(1.02818442648811e-9))*(npx)*(sj9)))+(((IkReal(1.02818442648811e-9))*(cj9)*(npy)))))):(IkReal)1.0e30))*(((IkReal(1.11130722679764e-18))+((npz)*(npz))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((IkReal(972588162.845684))*(npz)), ((((IKabs(((IkReal(7.61884652589195e-11))+(((IkReal(1.02818442648811e-9))*(npx)*(sj9)))+(((IkReal(1.02818442648811e-9))*(cj9)*(npy))))) != 0)?((IkReal)1/(((IkReal(7.61884652589195e-11))+(((IkReal(1.02818442648811e-9))*(npx)*(sj9)))+(((IkReal(1.02818442648811e-9))*(cj9)*(npy)))))):(IkReal)1.0e30))*(((IkReal(1.11130722679764e-18))+((npz)*(npz))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x104=IKsin(j8);
IkReal x105=IKcos(j8);
IkReal x106=((cj9)*(npy));
IkReal x107=((npx)*(sj9));
IkReal x108=((IkReal(1.00000000000000))*(x105));
IkReal x109=((IkReal(1.00000000000000))*(x104));
evalcond[0]=((npz)+(((IkReal(-1.02818442648811e-9))*(x104))));
evalcond[1]=((IkReal(-1.02818441412821e-9))+(((IkReal(-1.00000000000000))*(x107)*(x108)))+(((IkReal(-1.00000000000000))*(x106)*(x108)))+(((IkReal(-0.0741000000000000))*(x105)))+(((npz)*(x104))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x107)*(x109)))+(((IkReal(-1.00000000000000))*(npz)*(x108)))+(((IkReal(-1.00000000000000))*(x106)*(x109)))+(((IkReal(-0.0741000000000000))*(x104))));
evalcond[3]=((IkReal(-0.0741000000000000))+(((IkReal(-1.02818442648811e-9))*(x105)))+(((IkReal(-1.00000000000000))*(x106)))+(((IkReal(-1.00000000000000))*(x107))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
if( IKabs(((IkReal(972588162.845684))*(npz))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-72068782.8668652))+(((IkReal(-972588162.845684))*(npx)*(sj9)))+(((IkReal(-972588162.845684))*(cj9)*(npy))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(972588162.845684))*(npz)))+IKsqr(((IkReal(-72068782.8668652))+(((IkReal(-972588162.845684))*(npx)*(sj9)))+(((IkReal(-972588162.845684))*(cj9)*(npy)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((IkReal(972588162.845684))*(npz)), ((IkReal(-72068782.8668652))+(((IkReal(-972588162.845684))*(npx)*(sj9)))+(((IkReal(-972588162.845684))*(cj9)*(npy)))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x384=IKsin(j8);
IkReal x385=IKcos(j8);
IkReal x386=((cj9)*(npy));
IkReal x387=((npx)*(sj9));
IkReal x388=((IkReal(1.00000000000000))*(x385));
IkReal x389=((IkReal(1.00000000000000))*(x384));
evalcond[0]=((npz)+(((IkReal(-1.02818442648811e-9))*(x384))));
evalcond[1]=((IkReal(-1.02818441412821e-9))+(((IkReal(-1.00000000000000))*(x387)*(x388)))+(((npz)*(x384)))+(((IkReal(-1.00000000000000))*(x386)*(x388)))+(((IkReal(-0.0741000000000000))*(x385))));
evalcond[2]=((((IkReal(-1.00000000000000))*(npz)*(x388)))+(((IkReal(-1.00000000000000))*(x387)*(x389)))+(((IkReal(-1.00000000000000))*(x386)*(x389)))+(((IkReal(-0.0741000000000000))*(x384))));
evalcond[3]=((IkReal(-0.0741000000000000))+(((IkReal(-1.00000000000000))*(x386)))+(((IkReal(-1.00000000000000))*(x387)))+(((IkReal(-1.02818442648811e-9))*(x385))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
if( IKabs(((IkReal(972588162.845684))*(npz))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-72068782.8668652))+(((IkReal(-972588162.845684))*(npx)*(sj9)))+(((IkReal(-972588162.845684))*(cj9)*(npy))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(972588162.845684))*(npz)))+IKsqr(((IkReal(-72068782.8668652))+(((IkReal(-972588162.845684))*(npx)*(sj9)))+(((IkReal(-972588162.845684))*(cj9)*(npy)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((IkReal(972588162.845684))*(npz)), ((IkReal(-72068782.8668652))+(((IkReal(-972588162.845684))*(npx)*(sj9)))+(((IkReal(-972588162.845684))*(cj9)*(npy)))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x390=IKsin(j8);
IkReal x391=IKcos(j8);
IkReal x392=((cj9)*(npy));
IkReal x393=((npx)*(sj9));
IkReal x394=((IkReal(1.00000000000000))*(x391));
IkReal x395=((IkReal(1.00000000000000))*(x390));
evalcond[0]=((((IkReal(-1.02818442648811e-9))*(x390)))+(npz));
evalcond[1]=((IkReal(-1.02818441412821e-9))+(((npz)*(x390)))+(((IkReal(-0.0741000000000000))*(x391)))+(((IkReal(-1.00000000000000))*(x393)*(x394)))+(((IkReal(-1.00000000000000))*(x392)*(x394))));
evalcond[2]=((((IkReal(-0.0741000000000000))*(x390)))+(((IkReal(-1.00000000000000))*(npz)*(x394)))+(((IkReal(-1.00000000000000))*(x393)*(x395)))+(((IkReal(-1.00000000000000))*(x392)*(x395))));
evalcond[3]=((IkReal(-0.0741000000000000))+(((IkReal(-1.00000000000000))*(x393)))+(((IkReal(-1.00000000000000))*(x392)))+(((IkReal(-1.02818442648811e-9))*(x391))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j7)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.225236181506420))+(((cj9)*(npx)))+(((IkReal(-1.00000000000000))*(npy)*(sj9))));
evalcond[2]=((IkReal(0.0452405276142228))+(((IkReal(-0.148200000000000))*(npx)*(sj9)))+(((IkReal(-1.00000000000000))*(pp)))+(((IkReal(-0.148200000000000))*(cj9)*(npy))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=IkReal(-4.58109820017133e-9);
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=IkReal(-4.58109820017133e-9);
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=IkReal(-4.58109820017133e-9);
dummyeval[1]=((IkReal(4.58109816747765e-9))+(((IkReal(6.18231901228228e-8))*(cj9)*(npy)))+(((IkReal(6.18231901228228e-8))*(npx)*(sj9))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
if( IKabs(((IkReal(972588162.845684))*(npz))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(((IkReal(7.61884652589195e-11))+(((IkReal(1.02818442648811e-9))*(npx)*(sj9)))+(((IkReal(1.02818442648811e-9))*(cj9)*(npy))))) != 0)?((IkReal)1/(((IkReal(7.61884652589195e-11))+(((IkReal(1.02818442648811e-9))*(npx)*(sj9)))+(((IkReal(1.02818442648811e-9))*(cj9)*(npy)))))):(IkReal)1.0e30))*(((IkReal(1.11130722679764e-18))+((npz)*(npz)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(972588162.845684))*(npz)))+IKsqr(((((IKabs(((IkReal(7.61884652589195e-11))+(((IkReal(1.02818442648811e-9))*(npx)*(sj9)))+(((IkReal(1.02818442648811e-9))*(cj9)*(npy))))) != 0)?((IkReal)1/(((IkReal(7.61884652589195e-11))+(((IkReal(1.02818442648811e-9))*(npx)*(sj9)))+(((IkReal(1.02818442648811e-9))*(cj9)*(npy)))))):(IkReal)1.0e30))*(((IkReal(1.11130722679764e-18))+((npz)*(npz))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((IkReal(972588162.845684))*(npz)), ((((IKabs(((IkReal(7.61884652589195e-11))+(((IkReal(1.02818442648811e-9))*(npx)*(sj9)))+(((IkReal(1.02818442648811e-9))*(cj9)*(npy))))) != 0)?((IkReal)1/(((IkReal(7.61884652589195e-11))+(((IkReal(1.02818442648811e-9))*(npx)*(sj9)))+(((IkReal(1.02818442648811e-9))*(cj9)*(npy)))))):(IkReal)1.0e30))*(((IkReal(1.11130722679764e-18))+((npz)*(npz))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x396=IKsin(j8);
IkReal x397=IKcos(j8);
IkReal x398=((cj9)*(npy));
IkReal x399=((npx)*(sj9));
IkReal x400=((IkReal(1.00000000000000))*(x397));
IkReal x401=((IkReal(1.00000000000000))*(x396));
evalcond[0]=((((IkReal(-1.02818442648811e-9))*(x396)))+(npz));
evalcond[1]=((IkReal(-1.02818441412821e-9))+(((npz)*(x396)))+(((IkReal(-0.0741000000000000))*(x397)))+(((IkReal(-1.00000000000000))*(x398)*(x400)))+(((IkReal(-1.00000000000000))*(x399)*(x400))));
evalcond[2]=((((IkReal(-1.00000000000000))*(npz)*(x400)))+(((IkReal(-0.0741000000000000))*(x396)))+(((IkReal(-1.00000000000000))*(x398)*(x401)))+(((IkReal(-1.00000000000000))*(x399)*(x401))));
evalcond[3]=((IkReal(-0.0741000000000000))+(((IkReal(-1.00000000000000))*(x399)))+(((IkReal(-1.00000000000000))*(x398)))+(((IkReal(-1.02818442648811e-9))*(x397))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
if( IKabs(((IkReal(972588162.845684))*(npz))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-72068782.8668652))+(((IkReal(-972588162.845684))*(npx)*(sj9)))+(((IkReal(-972588162.845684))*(cj9)*(npy))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(972588162.845684))*(npz)))+IKsqr(((IkReal(-72068782.8668652))+(((IkReal(-972588162.845684))*(npx)*(sj9)))+(((IkReal(-972588162.845684))*(cj9)*(npy)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((IkReal(972588162.845684))*(npz)), ((IkReal(-72068782.8668652))+(((IkReal(-972588162.845684))*(npx)*(sj9)))+(((IkReal(-972588162.845684))*(cj9)*(npy)))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x402=IKsin(j8);
IkReal x403=IKcos(j8);
IkReal x404=((cj9)*(npy));
IkReal x405=((npx)*(sj9));
IkReal x406=((IkReal(1.00000000000000))*(x403));
IkReal x407=((IkReal(1.00000000000000))*(x402));
evalcond[0]=((((IkReal(-1.02818442648811e-9))*(x402)))+(npz));
evalcond[1]=((IkReal(-1.02818441412821e-9))+(((IkReal(-0.0741000000000000))*(x403)))+(((npz)*(x402)))+(((IkReal(-1.00000000000000))*(x404)*(x406)))+(((IkReal(-1.00000000000000))*(x405)*(x406))));
evalcond[2]=((((IkReal(-0.0741000000000000))*(x402)))+(((IkReal(-1.00000000000000))*(npz)*(x406)))+(((IkReal(-1.00000000000000))*(x404)*(x407)))+(((IkReal(-1.00000000000000))*(x405)*(x407))));
evalcond[3]=((IkReal(-0.0741000000000000))+(((IkReal(-1.02818442648811e-9))*(x403)))+(((IkReal(-1.00000000000000))*(x405)))+(((IkReal(-1.00000000000000))*(x404))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
if( IKabs(((IkReal(972588162.845684))*(npz))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-72068782.8668652))+(((IkReal(-972588162.845684))*(npx)*(sj9)))+(((IkReal(-972588162.845684))*(cj9)*(npy))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(972588162.845684))*(npz)))+IKsqr(((IkReal(-72068782.8668652))+(((IkReal(-972588162.845684))*(npx)*(sj9)))+(((IkReal(-972588162.845684))*(cj9)*(npy)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((IkReal(972588162.845684))*(npz)), ((IkReal(-72068782.8668652))+(((IkReal(-972588162.845684))*(npx)*(sj9)))+(((IkReal(-972588162.845684))*(cj9)*(npy)))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x408=IKsin(j8);
IkReal x409=IKcos(j8);
IkReal x410=((cj9)*(npy));
IkReal x411=((npx)*(sj9));
IkReal x412=((IkReal(1.00000000000000))*(x409));
IkReal x413=((IkReal(1.00000000000000))*(x408));
evalcond[0]=((((IkReal(-1.02818442648811e-9))*(x408)))+(npz));
evalcond[1]=((IkReal(-1.02818441412821e-9))+(((IkReal(-0.0741000000000000))*(x409)))+(((npz)*(x408)))+(((IkReal(-1.00000000000000))*(x411)*(x412)))+(((IkReal(-1.00000000000000))*(x410)*(x412))));
evalcond[2]=((((IkReal(-0.0741000000000000))*(x408)))+(((IkReal(-1.00000000000000))*(npz)*(x412)))+(((IkReal(-1.00000000000000))*(x411)*(x413)))+(((IkReal(-1.00000000000000))*(x410)*(x413))));
evalcond[3]=((IkReal(-0.0741000000000000))+(((IkReal(-1.02818442648811e-9))*(x409)))+(((IkReal(-1.00000000000000))*(x410)))+(((IkReal(-1.00000000000000))*(x411))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x414=(npz)*(npz);
IkReal x415=((npx)*(sj9));
IkReal x416=((cj9)*(npy));
IkReal x417=((IkReal(1.28069887262522e+26))*(npz));
IkReal x418=((IkReal(5.76460752303423e+17))*(cj7));
IkReal x419=((IkReal(1.89799570109929e+25))*(npz));
IkReal x420=((cj7)*(x414));
if( IKabs(((IkReal(-1.58251445409123e-34))*(((IKabs(cj7) != 0)?((IkReal)1/((cj7)*(cj7))):(IkReal)1.0e30))*(((IKabs(x414) != 0)?((IkReal)1/(x414)):(IkReal)1.0e30))*(((((x416)*(x419)))+(((x417)*((x415)*(x415))))+(((x415)*(x419)))+(((IkReal(7.03207394085159e+23))*(npz)))+(((IkReal(2.56139774525044e+26))*(npz)*(x415)*(x416)))+(((IkReal(2.07889409942577e+33))*(x420)))+(((IkReal(-6.49715655323886e+24))*(npz)*((cj7)*(cj7))))+(((IkReal(2.80552510043963e+34))*(x415)*(x420)))+(((IkReal(-1.00000000000000))*(x416)*(x418)))+(((x417)*((x416)*(x416))))+(((IkReal(-1.00000000000000))*(x415)*(x418)))+(((IkReal(3.60287970189640e+16))*(cj7)))+(((IkReal(2.80552510043963e+34))*(x416)*(x420))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(3.52929532858729e+17))*(x414)*(((IKabs(((IkReal(26889160.0000000))+(((IkReal(362876640.000000))*(x415)))+(((IkReal(362876640.000000))*(x416)))+(((IkReal(-7.94925003219446e+16))*(cj7)*(npz))))) != 0)?((IkReal)1/(((IkReal(26889160.0000000))+(((IkReal(362876640.000000))*(x415)))+(((IkReal(362876640.000000))*(x416)))+(((IkReal(-7.94925003219446e+16))*(cj7)*(npz)))))):(IkReal)1.0e30)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(-1.58251445409123e-34))*(((IKabs(cj7) != 0)?((IkReal)1/((cj7)*(cj7))):(IkReal)1.0e30))*(((IKabs(x414) != 0)?((IkReal)1/(x414)):(IkReal)1.0e30))*(((((x416)*(x419)))+(((x417)*((x415)*(x415))))+(((x415)*(x419)))+(((IkReal(7.03207394085159e+23))*(npz)))+(((IkReal(2.56139774525044e+26))*(npz)*(x415)*(x416)))+(((IkReal(2.07889409942577e+33))*(x420)))+(((IkReal(-6.49715655323886e+24))*(npz)*((cj7)*(cj7))))+(((IkReal(2.80552510043963e+34))*(x415)*(x420)))+(((IkReal(-1.00000000000000))*(x416)*(x418)))+(((x417)*((x416)*(x416))))+(((IkReal(-1.00000000000000))*(x415)*(x418)))+(((IkReal(3.60287970189640e+16))*(cj7)))+(((IkReal(2.80552510043963e+34))*(x416)*(x420)))))))+IKsqr(((IkReal(3.52929532858729e+17))*(x414)*(((IKabs(((IkReal(26889160.0000000))+(((IkReal(362876640.000000))*(x415)))+(((IkReal(362876640.000000))*(x416)))+(((IkReal(-7.94925003219446e+16))*(cj7)*(npz))))) != 0)?((IkReal)1/(((IkReal(26889160.0000000))+(((IkReal(362876640.000000))*(x415)))+(((IkReal(362876640.000000))*(x416)))+(((IkReal(-7.94925003219446e+16))*(cj7)*(npz)))))):(IkReal)1.0e30))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((IkReal(-1.58251445409123e-34))*(((IKabs(cj7) != 0)?((IkReal)1/((cj7)*(cj7))):(IkReal)1.0e30))*(((IKabs(x414) != 0)?((IkReal)1/(x414)):(IkReal)1.0e30))*(((((x416)*(x419)))+(((x417)*((x415)*(x415))))+(((x415)*(x419)))+(((IkReal(7.03207394085159e+23))*(npz)))+(((IkReal(2.56139774525044e+26))*(npz)*(x415)*(x416)))+(((IkReal(2.07889409942577e+33))*(x420)))+(((IkReal(-6.49715655323886e+24))*(npz)*((cj7)*(cj7))))+(((IkReal(2.80552510043963e+34))*(x415)*(x420)))+(((IkReal(-1.00000000000000))*(x416)*(x418)))+(((x417)*((x416)*(x416))))+(((IkReal(-1.00000000000000))*(x415)*(x418)))+(((IkReal(3.60287970189640e+16))*(cj7)))+(((IkReal(2.80552510043963e+34))*(x416)*(x420)))))), ((IkReal(3.52929532858729e+17))*(x414)*(((IKabs(((IkReal(26889160.0000000))+(((IkReal(362876640.000000))*(x415)))+(((IkReal(362876640.000000))*(x416)))+(((IkReal(-7.94925003219446e+16))*(cj7)*(npz))))) != 0)?((IkReal)1/(((IkReal(26889160.0000000))+(((IkReal(362876640.000000))*(x415)))+(((IkReal(362876640.000000))*(x416)))+(((IkReal(-7.94925003219446e+16))*(cj7)*(npz)))))):(IkReal)1.0e30))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x421=IKsin(j8);
IkReal x422=IKcos(j8);
IkReal x423=((cj9)*(npy));
IkReal x424=((IkReal(0.225236181506420))*(cj7));
IkReal x425=((npx)*(sj9));
IkReal x426=((IkReal(1.00000000000000))*(x422));
IkReal x427=((IkReal(1.00000000000000))*(x421));
evalcond[0]=((((IkReal(-1.02818442648811e-9))*(x421)))+(npz)+(((x422)*(x424))));
evalcond[1]=((IkReal(-1.02818441412821e-9))+(((IkReal(-0.0741000000000000))*(x422)))+(((npz)*(x421)))+(((IkReal(-1.00000000000000))*(x425)*(x426)))+(((IkReal(-1.00000000000000))*(x423)*(x426))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x424)))+(((IkReal(-0.0741000000000000))*(x421)))+(((IkReal(-1.00000000000000))*(npz)*(x426)))+(((IkReal(-1.00000000000000))*(x425)*(x427)))+(((IkReal(-1.00000000000000))*(x423)*(x427))));
evalcond[3]=((IkReal(-0.0741000000000000))+(((IkReal(-1.02818442648811e-9))*(x422)))+(((IkReal(-1.00000000000000))*(x423)))+(((IkReal(-1.00000000000000))*(x425)))+(((IkReal(-1.00000000000000))*(x421)*(x424))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x428=(cj7)*(cj7)*(cj7);
IkReal x429=(npz)*(npz);
IkReal x430=(cj7)*(cj7);
IkReal x431=((cj9)*(npy));
IkReal x432=((npx)*(sj9));
IkReal x433=((IkReal(3.52929532858729e+17))*(npz));
IkReal x434=((IkReal(7.94925003219446e+16))*(cj7));
IkReal x435=((IkReal(7.87097096168706e+48))*(x430));
IkReal x436=((cj7)*(x429));
IkReal x437=((IkReal(1.77282744415831e+48))*(x428));
IkReal x438=((IkReal(1.16647789652202e+48))*(x430));
if( IKabs(((((IKabs(((((IkReal(-1.57419419233741e+49))*(x430)*(x431)*(x432)))+(((IkReal(-1.00000000000000))*(x431)*(x438)))+(((IkReal(-1.00000000000000))*(x435)*((x431)*(x431))))+(((IkReal(-1.00000000000000))*(x432)*(x438)))+(((IkReal(-1.00000000000000))*(x435)*((x432)*(x432))))+(((IkReal(-4.32180060661409e+46))*(x430))))) != 0)?((IkReal)1/(((((IkReal(-1.57419419233741e+49))*(x430)*(x431)*(x432)))+(((IkReal(-1.00000000000000))*(x431)*(x438)))+(((IkReal(-1.00000000000000))*(x435)*((x431)*(x431))))+(((IkReal(-1.00000000000000))*(x432)*(x438)))+(((IkReal(-1.00000000000000))*(x435)*((x432)*(x432))))+(((IkReal(-4.32180060661409e+46))*(x430)))))):(IkReal)1.0e30))*(((((IkReal(1.31366513612130e+47))*(x428)))+(((IkReal(-3.49454111193176e+49))*(x431)*(x436)))+(((IkReal(-3.49454111193176e+49))*(x432)*(x436)))+(((x431)*(x437)))+(((IkReal(-8.09280961668571e+39))*(npz)*(x430)))+(((IkReal(1.59522894846391e+41))*((npz)*(npz)*(npz))))+(((IkReal(-2.58945496394143e+48))*(x436)))+(((x432)*(x437))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(((((IkReal(-362876640.000000))*(npz)))+(((IkReal(-1.00000000000000))*(x431)*(x434)))+(((IkReal(-1.00000000000000))*(x432)*(x434)))+(((IkReal(-5.89039427385610e+15))*(cj7))))) != 0)?((IkReal)1/(((((IkReal(-362876640.000000))*(npz)))+(((IkReal(-1.00000000000000))*(x431)*(x434)))+(((IkReal(-1.00000000000000))*(x432)*(x434)))+(((IkReal(-5.89039427385610e+15))*(cj7)))))):(IkReal)1.0e30))*(((((IkReal(81732950.0000000))*(cj7)))+(((IkReal(2.61520783848318e+16))*(npz)))+(((x431)*(x433)))+(((x432)*(x433))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((((IkReal(-1.57419419233741e+49))*(x430)*(x431)*(x432)))+(((IkReal(-1.00000000000000))*(x431)*(x438)))+(((IkReal(-1.00000000000000))*(x435)*((x431)*(x431))))+(((IkReal(-1.00000000000000))*(x432)*(x438)))+(((IkReal(-1.00000000000000))*(x435)*((x432)*(x432))))+(((IkReal(-4.32180060661409e+46))*(x430))))) != 0)?((IkReal)1/(((((IkReal(-1.57419419233741e+49))*(x430)*(x431)*(x432)))+(((IkReal(-1.00000000000000))*(x431)*(x438)))+(((IkReal(-1.00000000000000))*(x435)*((x431)*(x431))))+(((IkReal(-1.00000000000000))*(x432)*(x438)))+(((IkReal(-1.00000000000000))*(x435)*((x432)*(x432))))+(((IkReal(-4.32180060661409e+46))*(x430)))))):(IkReal)1.0e30))*(((((IkReal(1.31366513612130e+47))*(x428)))+(((IkReal(-3.49454111193176e+49))*(x431)*(x436)))+(((IkReal(-3.49454111193176e+49))*(x432)*(x436)))+(((x431)*(x437)))+(((IkReal(-8.09280961668571e+39))*(npz)*(x430)))+(((IkReal(1.59522894846391e+41))*((npz)*(npz)*(npz))))+(((IkReal(-2.58945496394143e+48))*(x436)))+(((x432)*(x437)))))))+IKsqr(((((IKabs(((((IkReal(-362876640.000000))*(npz)))+(((IkReal(-1.00000000000000))*(x431)*(x434)))+(((IkReal(-1.00000000000000))*(x432)*(x434)))+(((IkReal(-5.89039427385610e+15))*(cj7))))) != 0)?((IkReal)1/(((((IkReal(-362876640.000000))*(npz)))+(((IkReal(-1.00000000000000))*(x431)*(x434)))+(((IkReal(-1.00000000000000))*(x432)*(x434)))+(((IkReal(-5.89039427385610e+15))*(cj7)))))):(IkReal)1.0e30))*(((((IkReal(81732950.0000000))*(cj7)))+(((IkReal(2.61520783848318e+16))*(npz)))+(((x431)*(x433)))+(((x432)*(x433)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((((IKabs(((((IkReal(-1.57419419233741e+49))*(x430)*(x431)*(x432)))+(((IkReal(-1.00000000000000))*(x431)*(x438)))+(((IkReal(-1.00000000000000))*(x435)*((x431)*(x431))))+(((IkReal(-1.00000000000000))*(x432)*(x438)))+(((IkReal(-1.00000000000000))*(x435)*((x432)*(x432))))+(((IkReal(-4.32180060661409e+46))*(x430))))) != 0)?((IkReal)1/(((((IkReal(-1.57419419233741e+49))*(x430)*(x431)*(x432)))+(((IkReal(-1.00000000000000))*(x431)*(x438)))+(((IkReal(-1.00000000000000))*(x435)*((x431)*(x431))))+(((IkReal(-1.00000000000000))*(x432)*(x438)))+(((IkReal(-1.00000000000000))*(x435)*((x432)*(x432))))+(((IkReal(-4.32180060661409e+46))*(x430)))))):(IkReal)1.0e30))*(((((IkReal(1.31366513612130e+47))*(x428)))+(((IkReal(-3.49454111193176e+49))*(x431)*(x436)))+(((IkReal(-3.49454111193176e+49))*(x432)*(x436)))+(((x431)*(x437)))+(((IkReal(-8.09280961668571e+39))*(npz)*(x430)))+(((IkReal(1.59522894846391e+41))*((npz)*(npz)*(npz))))+(((IkReal(-2.58945496394143e+48))*(x436)))+(((x432)*(x437)))))), ((((IKabs(((((IkReal(-362876640.000000))*(npz)))+(((IkReal(-1.00000000000000))*(x431)*(x434)))+(((IkReal(-1.00000000000000))*(x432)*(x434)))+(((IkReal(-5.89039427385610e+15))*(cj7))))) != 0)?((IkReal)1/(((((IkReal(-362876640.000000))*(npz)))+(((IkReal(-1.00000000000000))*(x431)*(x434)))+(((IkReal(-1.00000000000000))*(x432)*(x434)))+(((IkReal(-5.89039427385610e+15))*(cj7)))))):(IkReal)1.0e30))*(((((IkReal(81732950.0000000))*(cj7)))+(((IkReal(2.61520783848318e+16))*(npz)))+(((x431)*(x433)))+(((x432)*(x433)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x439=IKsin(j8);
IkReal x440=IKcos(j8);
IkReal x441=((cj9)*(npy));
IkReal x442=((IkReal(0.225236181506420))*(cj7));
IkReal x443=((npx)*(sj9));
IkReal x444=((IkReal(1.00000000000000))*(x440));
IkReal x445=((IkReal(1.00000000000000))*(x439));
evalcond[0]=((npz)+(((x440)*(x442)))+(((IkReal(-1.02818442648811e-9))*(x439))));
evalcond[1]=((IkReal(-1.02818441412821e-9))+(((IkReal(-0.0741000000000000))*(x440)))+(((npz)*(x439)))+(((IkReal(-1.00000000000000))*(x443)*(x444)))+(((IkReal(-1.00000000000000))*(x441)*(x444))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x442)))+(((IkReal(-0.0741000000000000))*(x439)))+(((IkReal(-1.00000000000000))*(npz)*(x444)))+(((IkReal(-1.00000000000000))*(x443)*(x445)))+(((IkReal(-1.00000000000000))*(x441)*(x445))));
evalcond[3]=((IkReal(-0.0741000000000000))+(((IkReal(-1.00000000000000))*(x443)))+(((IkReal(-1.00000000000000))*(x441)))+(((IkReal(-1.00000000000000))*(x439)*(x442)))+(((IkReal(-1.02818442648811e-9))*(x440))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x446=((IkReal(2.80552507771488e+24))*(cj7));
IkReal x447=((npx)*(sj9));
IkReal x448=((cj9)*(npy));
if( IKabs(((gconst1)*(((((IkReal(1.28069884968960e+16))*(npz)))+(((IkReal(-2.07889408258672e+23))*(cj7)))+(((IkReal(-1.00000000000000))*(x446)*(x448)))+(((IkReal(-1.00000000000000))*(x446)*(x447))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((IkReal(-948997830443008.))+(((IkReal(-1.00000000000000))*(npz)*(x446)))+(((IkReal(-1.28069884968960e+16))*(x447)))+(((IkReal(-1.28069884968960e+16))*(x448))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j8array[0]=IKatan2(((gconst1)*(((((IkReal(1.28069884968960e+16))*(npz)))+(((IkReal(-2.07889408258672e+23))*(cj7)))+(((IkReal(-1.00000000000000))*(x446)*(x448)))+(((IkReal(-1.00000000000000))*(x446)*(x447)))))), ((gconst1)*(((IkReal(-948997830443008.))+(((IkReal(-1.00000000000000))*(npz)*(x446)))+(((IkReal(-1.28069884968960e+16))*(x447)))+(((IkReal(-1.28069884968960e+16))*(x448)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x449=IKsin(j8);
IkReal x450=IKcos(j8);
IkReal x451=((cj9)*(npy));
IkReal x452=((IkReal(0.225236181506420))*(cj7));
IkReal x453=((npx)*(sj9));
IkReal x454=((IkReal(1.00000000000000))*(x450));
IkReal x455=((IkReal(1.00000000000000))*(x449));
evalcond[0]=((npz)+(((x450)*(x452)))+(((IkReal(-1.02818442648811e-9))*(x449))));
evalcond[1]=((IkReal(-1.02818441412821e-9))+(((IkReal(-0.0741000000000000))*(x450)))+(((npz)*(x449)))+(((IkReal(-1.00000000000000))*(x453)*(x454)))+(((IkReal(-1.00000000000000))*(x451)*(x454))));
evalcond[2]=((((IkReal(-1.00000000000000))*(npz)*(x454)))+(((IkReal(-0.0741000000000000))*(x449)))+(((IkReal(-1.00000000000000))*(x452)))+(((IkReal(-1.00000000000000))*(x453)*(x455)))+(((IkReal(-1.00000000000000))*(x451)*(x455))));
evalcond[3]=((IkReal(-0.0741000000000000))+(((IkReal(-1.00000000000000))*(x453)))+(((IkReal(-1.00000000000000))*(x451)))+(((IkReal(-1.02818442648811e-9))*(x450)))+(((IkReal(-1.00000000000000))*(x449)*(x452))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(-0.783628937079892))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((((cj9)*(npx)))+(((IkReal(-0.225236181506420))*(sj7)))+(((IkReal(-1.00000000000000))*(npy)*(sj9))));
evalcond[2]=((IkReal(0.0452405276142228))+(((IkReal(-0.148200000000000))*(npx)*(sj9)))+(((IkReal(-1.00000000000000))*(pp)))+(((IkReal(-0.148200000000000))*(cj9)*(npy))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst2;
gconst2=IKsign(((IkReal(-55836672.0000000))+(((IkReal(-6.31905755625000e+23))*((cj7)*(cj7))))));
dummyeval[0]=((IkReal(-1.00000000000000))*((cj7)*(cj7)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
IkReal x456=(cj7)*(cj7);
IkReal x457=((IkReal(13.4952766531714))*(cj7));
IkReal x458=((cj9)*(npy));
IkReal x459=((npx)*(sj9));
IkReal x460=((IkReal(182.122491945633))*(x456));
IkReal x461=((IkReal(26.9905533063428))*(x456));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x460)*((x458)*(x458))))+(((IkReal(-1.00000000000000))*(x456)))+(((IkReal(-1.00000000000000))*(x459)*(x461)))+(((IkReal(-1.00000000000000))*(x458)*(x461)))+(((IkReal(-364.244983891266))*(x456)*(x458)*(x459)))+(((IkReal(-1.00000000000000))*(x460)*((x459)*(x459)))));
dummyeval[1]=((((IkReal(6.16048136947711e-8))*(npz)))+(((IkReal(-1.00000000000000))*(x457)*(x459)))+(((IkReal(-1.00000000000000))*(x457)*(x458)))+(((IkReal(-1.00000000000000))*(cj7))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=IkReal(-4.58109820017133e-9);
dummyeval[1]=((IkReal(4.58109816747765e-9))+(((IkReal(6.18231901228228e-8))*(cj9)*(npy)))+(((IkReal(13.5431138379503))*(cj7)*(npz)))+(((IkReal(6.18231901228228e-8))*(npx)*(sj9))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[3];
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j7)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.225236181506420))+(((cj9)*(npx)))+(((IkReal(-1.00000000000000))*(npy)*(sj9))));
evalcond[2]=((IkReal(0.0452405276142228))+(((IkReal(-0.148200000000000))*(npx)*(sj9)))+(((IkReal(-1.00000000000000))*(pp)))+(((IkReal(-0.148200000000000))*(cj9)*(npy))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=IkReal(-4.58109820017133e-9);
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=IkReal(-4.58109820017133e-9);
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=IkReal(-4.58109820017133e-9);
dummyeval[1]=((IkReal(4.58109816747765e-9))+(((IkReal(6.18231901228228e-8))*(cj9)*(npy)))+(((IkReal(6.18231901228228e-8))*(npx)*(sj9))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
if( IKabs(((IkReal(972588162.845684))*(npz))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(((IkReal(7.61884652589195e-11))+(((IkReal(1.02818442648811e-9))*(npx)*(sj9)))+(((IkReal(1.02818442648811e-9))*(cj9)*(npy))))) != 0)?((IkReal)1/(((IkReal(7.61884652589195e-11))+(((IkReal(1.02818442648811e-9))*(npx)*(sj9)))+(((IkReal(1.02818442648811e-9))*(cj9)*(npy)))))):(IkReal)1.0e30))*(((IkReal(1.11130722679764e-18))+((npz)*(npz)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(972588162.845684))*(npz)))+IKsqr(((((IKabs(((IkReal(7.61884652589195e-11))+(((IkReal(1.02818442648811e-9))*(npx)*(sj9)))+(((IkReal(1.02818442648811e-9))*(cj9)*(npy))))) != 0)?((IkReal)1/(((IkReal(7.61884652589195e-11))+(((IkReal(1.02818442648811e-9))*(npx)*(sj9)))+(((IkReal(1.02818442648811e-9))*(cj9)*(npy)))))):(IkReal)1.0e30))*(((IkReal(1.11130722679764e-18))+((npz)*(npz))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((IkReal(972588162.845684))*(npz)), ((((IKabs(((IkReal(7.61884652589195e-11))+(((IkReal(1.02818442648811e-9))*(npx)*(sj9)))+(((IkReal(1.02818442648811e-9))*(cj9)*(npy))))) != 0)?((IkReal)1/(((IkReal(7.61884652589195e-11))+(((IkReal(1.02818442648811e-9))*(npx)*(sj9)))+(((IkReal(1.02818442648811e-9))*(cj9)*(npy)))))):(IkReal)1.0e30))*(((IkReal(1.11130722679764e-18))+((npz)*(npz))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x462=IKsin(j8);
IkReal x463=IKcos(j8);
IkReal x464=((cj9)*(npy));
IkReal x465=((npx)*(sj9));
IkReal x466=((IkReal(1.00000000000000))*(x463));
IkReal x467=((IkReal(1.00000000000000))*(x462));
evalcond[0]=((npz)+(((IkReal(-1.02818442648811e-9))*(x462))));
evalcond[1]=((IkReal(-1.02818441412821e-9))+(((IkReal(-1.00000000000000))*(x465)*(x466)))+(((IkReal(-0.0741000000000000))*(x463)))+(((npz)*(x462)))+(((IkReal(-1.00000000000000))*(x464)*(x466))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x465)*(x467)))+(((IkReal(-0.0741000000000000))*(x462)))+(((IkReal(-1.00000000000000))*(npz)*(x466)))+(((IkReal(-1.00000000000000))*(x464)*(x467))));
evalcond[3]=((IkReal(-0.0741000000000000))+(((IkReal(-1.00000000000000))*(x464)))+(((IkReal(-1.00000000000000))*(x465)))+(((IkReal(-1.02818442648811e-9))*(x463))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
if( IKabs(((IkReal(972588162.845684))*(npz))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-72068782.8668652))+(((IkReal(-972588162.845684))*(npx)*(sj9)))+(((IkReal(-972588162.845684))*(cj9)*(npy))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(972588162.845684))*(npz)))+IKsqr(((IkReal(-72068782.8668652))+(((IkReal(-972588162.845684))*(npx)*(sj9)))+(((IkReal(-972588162.845684))*(cj9)*(npy)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((IkReal(972588162.845684))*(npz)), ((IkReal(-72068782.8668652))+(((IkReal(-972588162.845684))*(npx)*(sj9)))+(((IkReal(-972588162.845684))*(cj9)*(npy)))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x468=IKsin(j8);
IkReal x469=IKcos(j8);
IkReal x470=((cj9)*(npy));
IkReal x471=((npx)*(sj9));
IkReal x472=((IkReal(1.00000000000000))*(x469));
IkReal x473=((IkReal(1.00000000000000))*(x468));
evalcond[0]=((npz)+(((IkReal(-1.02818442648811e-9))*(x468))));
evalcond[1]=((IkReal(-1.02818441412821e-9))+(((IkReal(-0.0741000000000000))*(x469)))+(((npz)*(x468)))+(((IkReal(-1.00000000000000))*(x471)*(x472)))+(((IkReal(-1.00000000000000))*(x470)*(x472))));
evalcond[2]=((((IkReal(-0.0741000000000000))*(x468)))+(((IkReal(-1.00000000000000))*(x471)*(x473)))+(((IkReal(-1.00000000000000))*(x470)*(x473)))+(((IkReal(-1.00000000000000))*(npz)*(x472))));
evalcond[3]=((IkReal(-0.0741000000000000))+(((IkReal(-1.00000000000000))*(x470)))+(((IkReal(-1.00000000000000))*(x471)))+(((IkReal(-1.02818442648811e-9))*(x469))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
if( IKabs(((IkReal(972588162.845684))*(npz))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-72068782.8668652))+(((IkReal(-972588162.845684))*(npx)*(sj9)))+(((IkReal(-972588162.845684))*(cj9)*(npy))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(972588162.845684))*(npz)))+IKsqr(((IkReal(-72068782.8668652))+(((IkReal(-972588162.845684))*(npx)*(sj9)))+(((IkReal(-972588162.845684))*(cj9)*(npy)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((IkReal(972588162.845684))*(npz)), ((IkReal(-72068782.8668652))+(((IkReal(-972588162.845684))*(npx)*(sj9)))+(((IkReal(-972588162.845684))*(cj9)*(npy)))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x474=IKsin(j8);
IkReal x475=IKcos(j8);
IkReal x476=((cj9)*(npy));
IkReal x477=((npx)*(sj9));
IkReal x478=((IkReal(1.00000000000000))*(x475));
IkReal x479=((IkReal(1.00000000000000))*(x474));
evalcond[0]=((npz)+(((IkReal(-1.02818442648811e-9))*(x474))));
evalcond[1]=((IkReal(-1.02818441412821e-9))+(((npz)*(x474)))+(((IkReal(-1.00000000000000))*(x477)*(x478)))+(((IkReal(-1.00000000000000))*(x476)*(x478)))+(((IkReal(-0.0741000000000000))*(x475))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x477)*(x479)))+(((IkReal(-1.00000000000000))*(x476)*(x479)))+(((IkReal(-0.0741000000000000))*(x474)))+(((IkReal(-1.00000000000000))*(npz)*(x478))));
evalcond[3]=((IkReal(-0.0741000000000000))+(((IkReal(-1.00000000000000))*(x476)))+(((IkReal(-1.00000000000000))*(x477)))+(((IkReal(-1.02818442648811e-9))*(x475))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j7)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.225236181506420))+(((cj9)*(npx)))+(((IkReal(-1.00000000000000))*(npy)*(sj9))));
evalcond[2]=((IkReal(0.0452405276142228))+(((IkReal(-0.148200000000000))*(npx)*(sj9)))+(((IkReal(-1.00000000000000))*(pp)))+(((IkReal(-0.148200000000000))*(cj9)*(npy))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=IkReal(-4.58109820017133e-9);
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=IkReal(-4.58109820017133e-9);
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=IkReal(-4.58109820017133e-9);
dummyeval[1]=((IkReal(4.58109816747765e-9))+(((IkReal(6.18231901228228e-8))*(cj9)*(npy)))+(((IkReal(6.18231901228228e-8))*(npx)*(sj9))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
if( IKabs(((IkReal(972588162.845684))*(npz))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(((IkReal(7.61884652589195e-11))+(((IkReal(1.02818442648811e-9))*(npx)*(sj9)))+(((IkReal(1.02818442648811e-9))*(cj9)*(npy))))) != 0)?((IkReal)1/(((IkReal(7.61884652589195e-11))+(((IkReal(1.02818442648811e-9))*(npx)*(sj9)))+(((IkReal(1.02818442648811e-9))*(cj9)*(npy)))))):(IkReal)1.0e30))*(((IkReal(1.11130722679764e-18))+((npz)*(npz)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(972588162.845684))*(npz)))+IKsqr(((((IKabs(((IkReal(7.61884652589195e-11))+(((IkReal(1.02818442648811e-9))*(npx)*(sj9)))+(((IkReal(1.02818442648811e-9))*(cj9)*(npy))))) != 0)?((IkReal)1/(((IkReal(7.61884652589195e-11))+(((IkReal(1.02818442648811e-9))*(npx)*(sj9)))+(((IkReal(1.02818442648811e-9))*(cj9)*(npy)))))):(IkReal)1.0e30))*(((IkReal(1.11130722679764e-18))+((npz)*(npz))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((IkReal(972588162.845684))*(npz)), ((((IKabs(((IkReal(7.61884652589195e-11))+(((IkReal(1.02818442648811e-9))*(npx)*(sj9)))+(((IkReal(1.02818442648811e-9))*(cj9)*(npy))))) != 0)?((IkReal)1/(((IkReal(7.61884652589195e-11))+(((IkReal(1.02818442648811e-9))*(npx)*(sj9)))+(((IkReal(1.02818442648811e-9))*(cj9)*(npy)))))):(IkReal)1.0e30))*(((IkReal(1.11130722679764e-18))+((npz)*(npz))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x480=IKsin(j8);
IkReal x481=IKcos(j8);
IkReal x482=((cj9)*(npy));
IkReal x483=((npx)*(sj9));
IkReal x484=((IkReal(1.00000000000000))*(x481));
IkReal x485=((IkReal(1.00000000000000))*(x480));
evalcond[0]=((npz)+(((IkReal(-1.02818442648811e-9))*(x480))));
evalcond[1]=((IkReal(-1.02818441412821e-9))+(((IkReal(-1.00000000000000))*(x483)*(x484)))+(((IkReal(-0.0741000000000000))*(x481)))+(((IkReal(-1.00000000000000))*(x482)*(x484)))+(((npz)*(x480))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x483)*(x485)))+(((IkReal(-0.0741000000000000))*(x480)))+(((IkReal(-1.00000000000000))*(x482)*(x485)))+(((IkReal(-1.00000000000000))*(npz)*(x484))));
evalcond[3]=((IkReal(-0.0741000000000000))+(((IkReal(-1.00000000000000))*(x482)))+(((IkReal(-1.00000000000000))*(x483)))+(((IkReal(-1.02818442648811e-9))*(x481))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
if( IKabs(((IkReal(972588162.845684))*(npz))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-72068782.8668652))+(((IkReal(-972588162.845684))*(npx)*(sj9)))+(((IkReal(-972588162.845684))*(cj9)*(npy))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(972588162.845684))*(npz)))+IKsqr(((IkReal(-72068782.8668652))+(((IkReal(-972588162.845684))*(npx)*(sj9)))+(((IkReal(-972588162.845684))*(cj9)*(npy)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((IkReal(972588162.845684))*(npz)), ((IkReal(-72068782.8668652))+(((IkReal(-972588162.845684))*(npx)*(sj9)))+(((IkReal(-972588162.845684))*(cj9)*(npy)))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x486=IKsin(j8);
IkReal x487=IKcos(j8);
IkReal x488=((cj9)*(npy));
IkReal x489=((npx)*(sj9));
IkReal x490=((IkReal(1.00000000000000))*(x487));
IkReal x491=((IkReal(1.00000000000000))*(x486));
evalcond[0]=((npz)+(((IkReal(-1.02818442648811e-9))*(x486))));
evalcond[1]=((IkReal(-1.02818441412821e-9))+(((IkReal(-1.00000000000000))*(x488)*(x490)))+(((IkReal(-1.00000000000000))*(x489)*(x490)))+(((IkReal(-0.0741000000000000))*(x487)))+(((npz)*(x486))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x488)*(x491)))+(((IkReal(-1.00000000000000))*(x489)*(x491)))+(((IkReal(-0.0741000000000000))*(x486)))+(((IkReal(-1.00000000000000))*(npz)*(x490))));
evalcond[3]=((IkReal(-0.0741000000000000))+(((IkReal(-1.00000000000000))*(x489)))+(((IkReal(-1.00000000000000))*(x488)))+(((IkReal(-1.02818442648811e-9))*(x487))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
if( IKabs(((IkReal(972588162.845684))*(npz))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-72068782.8668652))+(((IkReal(-972588162.845684))*(npx)*(sj9)))+(((IkReal(-972588162.845684))*(cj9)*(npy))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(972588162.845684))*(npz)))+IKsqr(((IkReal(-72068782.8668652))+(((IkReal(-972588162.845684))*(npx)*(sj9)))+(((IkReal(-972588162.845684))*(cj9)*(npy)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((IkReal(972588162.845684))*(npz)), ((IkReal(-72068782.8668652))+(((IkReal(-972588162.845684))*(npx)*(sj9)))+(((IkReal(-972588162.845684))*(cj9)*(npy)))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x492=IKsin(j8);
IkReal x493=IKcos(j8);
IkReal x494=((cj9)*(npy));
IkReal x495=((npx)*(sj9));
IkReal x496=((IkReal(1.00000000000000))*(x493));
IkReal x497=((IkReal(1.00000000000000))*(x492));
evalcond[0]=((npz)+(((IkReal(-1.02818442648811e-9))*(x492))));
evalcond[1]=((IkReal(-1.02818441412821e-9))+(((IkReal(-0.0741000000000000))*(x493)))+(((IkReal(-1.00000000000000))*(x494)*(x496)))+(((IkReal(-1.00000000000000))*(x495)*(x496)))+(((npz)*(x492))));
evalcond[2]=((((IkReal(-0.0741000000000000))*(x492)))+(((IkReal(-1.00000000000000))*(x494)*(x497)))+(((IkReal(-1.00000000000000))*(x495)*(x497)))+(((IkReal(-1.00000000000000))*(npz)*(x496))));
evalcond[3]=((IkReal(-0.0741000000000000))+(((IkReal(-1.00000000000000))*(x494)))+(((IkReal(-1.00000000000000))*(x495)))+(((IkReal(-1.02818442648811e-9))*(x493))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x498=(npz)*(npz);
IkReal x499=((IKabs(((IkReal(26889160.0000000))+(((IkReal(7.94925003219446e+16))*(cj7)*(npz)))+(((IkReal(362876640.000000))*(npx)*(sj9)))+(((IkReal(362876640.000000))*(cj9)*(npy))))) != 0)?((IkReal)1/(((IkReal(26889160.0000000))+(((IkReal(7.94925003219446e+16))*(cj7)*(npz)))+(((IkReal(362876640.000000))*(npx)*(sj9)))+(((IkReal(362876640.000000))*(cj9)*(npy)))))):(IkReal)1.0e30);
IkReal x500=((x498)*(x499));
if( IKabs(((((IkReal(-7.73134648481301e+25))*(cj7)*(x500)))+(((IkReal(1073741824.00000))*(cj7)*(x499)))+(((IkReal(972588162.845684))*(npz))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(3.52929532858729e+17))*(x500))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-7.73134648481301e+25))*(cj7)*(x500)))+(((IkReal(1073741824.00000))*(cj7)*(x499)))+(((IkReal(972588162.845684))*(npz)))))+IKsqr(((IkReal(3.52929532858729e+17))*(x500)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((((IkReal(-7.73134648481301e+25))*(cj7)*(x500)))+(((IkReal(1073741824.00000))*(cj7)*(x499)))+(((IkReal(972588162.845684))*(npz)))), ((IkReal(3.52929532858729e+17))*(x500)));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x501=IKsin(j8);
IkReal x502=IKcos(j8);
IkReal x503=((cj9)*(npy));
IkReal x504=((IkReal(0.225236181506420))*(cj7));
IkReal x505=((npx)*(sj9));
IkReal x506=((IkReal(1.00000000000000))*(x502));
IkReal x507=((IkReal(1.00000000000000))*(x501));
evalcond[0]=((npz)+(((IkReal(-1.00000000000000))*(x502)*(x504)))+(((IkReal(-1.02818442648811e-9))*(x501))));
evalcond[1]=((IkReal(-1.02818441412821e-9))+(((IkReal(-1.00000000000000))*(x505)*(x506)))+(((IkReal(-0.0741000000000000))*(x502)))+(((IkReal(-1.00000000000000))*(x503)*(x506)))+(((npz)*(x501))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x505)*(x507)))+(((IkReal(-0.0741000000000000))*(x501)))+(((IkReal(-1.00000000000000))*(x503)*(x507)))+(((IkReal(-1.00000000000000))*(npz)*(x506)))+(x504));
evalcond[3]=((IkReal(-0.0741000000000000))+(((x501)*(x504)))+(((IkReal(-1.02818442648811e-9))*(x502)))+(((IkReal(-1.00000000000000))*(x505)))+(((IkReal(-1.00000000000000))*(x503))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x508=(npz)*(npz);
IkReal x509=(cj7)*(cj7)*(cj7);
IkReal x510=(cj7)*(cj7);
IkReal x511=((npx)*(sj9));
IkReal x512=((IkReal(3.52929532858729e+17))*(npz));
IkReal x513=((cj9)*(npy));
IkReal x514=((IkReal(7.94925003219446e+16))*(cj7));
IkReal x515=((IkReal(1.16647789652202e+48))*(x510));
IkReal x516=((IkReal(7.87097096168706e+48))*(x510));
IkReal x517=((cj7)*(x508));
IkReal x518=((IkReal(1.77282744415831e+48))*(x509));
if( IKabs(((((IKabs(((((IkReal(-1.00000000000000))*(x511)*(x515)))+(((IkReal(-1.00000000000000))*(x516)*((x511)*(x511))))+(((IkReal(-1.00000000000000))*(x513)*(x515)))+(((IkReal(-1.00000000000000))*(x516)*((x513)*(x513))))+(((IkReal(-4.32180060661409e+46))*(x510)))+(((IkReal(-1.57419419233741e+49))*(x510)*(x511)*(x513))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*(x511)*(x515)))+(((IkReal(-1.00000000000000))*(x516)*((x511)*(x511))))+(((IkReal(-1.00000000000000))*(x513)*(x515)))+(((IkReal(-1.00000000000000))*(x516)*((x513)*(x513))))+(((IkReal(-4.32180060661409e+46))*(x510)))+(((IkReal(-1.57419419233741e+49))*(x510)*(x511)*(x513)))))):(IkReal)1.0e30))*(((((IkReal(3.49454111193176e+49))*(x511)*(x517)))+(((IkReal(-1.00000000000000))*(x511)*(x518)))+(((IkReal(3.49454111193176e+49))*(x513)*(x517)))+(((IkReal(-8.09280961668571e+39))*(npz)*(x510)))+(((IkReal(-1.00000000000000))*(x513)*(x518)))+(((IkReal(2.58945496394143e+48))*(x517)))+(((IkReal(1.59522894846391e+41))*((npz)*(npz)*(npz))))+(((IkReal(-1.31366513612130e+47))*(x509))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(((((IkReal(-1.00000000000000))*(x511)*(x514)))+(((IkReal(-5.89039427385610e+15))*(cj7)))+(((IkReal(-1.00000000000000))*(x513)*(x514)))+(((IkReal(362876640.000000))*(npz))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*(x511)*(x514)))+(((IkReal(-5.89039427385610e+15))*(cj7)))+(((IkReal(-1.00000000000000))*(x513)*(x514)))+(((IkReal(362876640.000000))*(npz)))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x511)*(x512)))+(((IkReal(-2.61520783848318e+16))*(npz)))+(((IkReal(81732950.0000000))*(cj7)))+(((IkReal(-1.00000000000000))*(x512)*(x513))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((((IkReal(-1.00000000000000))*(x511)*(x515)))+(((IkReal(-1.00000000000000))*(x516)*((x511)*(x511))))+(((IkReal(-1.00000000000000))*(x513)*(x515)))+(((IkReal(-1.00000000000000))*(x516)*((x513)*(x513))))+(((IkReal(-4.32180060661409e+46))*(x510)))+(((IkReal(-1.57419419233741e+49))*(x510)*(x511)*(x513))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*(x511)*(x515)))+(((IkReal(-1.00000000000000))*(x516)*((x511)*(x511))))+(((IkReal(-1.00000000000000))*(x513)*(x515)))+(((IkReal(-1.00000000000000))*(x516)*((x513)*(x513))))+(((IkReal(-4.32180060661409e+46))*(x510)))+(((IkReal(-1.57419419233741e+49))*(x510)*(x511)*(x513)))))):(IkReal)1.0e30))*(((((IkReal(3.49454111193176e+49))*(x511)*(x517)))+(((IkReal(-1.00000000000000))*(x511)*(x518)))+(((IkReal(3.49454111193176e+49))*(x513)*(x517)))+(((IkReal(-8.09280961668571e+39))*(npz)*(x510)))+(((IkReal(-1.00000000000000))*(x513)*(x518)))+(((IkReal(2.58945496394143e+48))*(x517)))+(((IkReal(1.59522894846391e+41))*((npz)*(npz)*(npz))))+(((IkReal(-1.31366513612130e+47))*(x509)))))))+IKsqr(((((IKabs(((((IkReal(-1.00000000000000))*(x511)*(x514)))+(((IkReal(-5.89039427385610e+15))*(cj7)))+(((IkReal(-1.00000000000000))*(x513)*(x514)))+(((IkReal(362876640.000000))*(npz))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*(x511)*(x514)))+(((IkReal(-5.89039427385610e+15))*(cj7)))+(((IkReal(-1.00000000000000))*(x513)*(x514)))+(((IkReal(362876640.000000))*(npz)))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x511)*(x512)))+(((IkReal(-2.61520783848318e+16))*(npz)))+(((IkReal(81732950.0000000))*(cj7)))+(((IkReal(-1.00000000000000))*(x512)*(x513)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((((IKabs(((((IkReal(-1.00000000000000))*(x511)*(x515)))+(((IkReal(-1.00000000000000))*(x516)*((x511)*(x511))))+(((IkReal(-1.00000000000000))*(x513)*(x515)))+(((IkReal(-1.00000000000000))*(x516)*((x513)*(x513))))+(((IkReal(-4.32180060661409e+46))*(x510)))+(((IkReal(-1.57419419233741e+49))*(x510)*(x511)*(x513))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*(x511)*(x515)))+(((IkReal(-1.00000000000000))*(x516)*((x511)*(x511))))+(((IkReal(-1.00000000000000))*(x513)*(x515)))+(((IkReal(-1.00000000000000))*(x516)*((x513)*(x513))))+(((IkReal(-4.32180060661409e+46))*(x510)))+(((IkReal(-1.57419419233741e+49))*(x510)*(x511)*(x513)))))):(IkReal)1.0e30))*(((((IkReal(3.49454111193176e+49))*(x511)*(x517)))+(((IkReal(-1.00000000000000))*(x511)*(x518)))+(((IkReal(3.49454111193176e+49))*(x513)*(x517)))+(((IkReal(-8.09280961668571e+39))*(npz)*(x510)))+(((IkReal(-1.00000000000000))*(x513)*(x518)))+(((IkReal(2.58945496394143e+48))*(x517)))+(((IkReal(1.59522894846391e+41))*((npz)*(npz)*(npz))))+(((IkReal(-1.31366513612130e+47))*(x509)))))), ((((IKabs(((((IkReal(-1.00000000000000))*(x511)*(x514)))+(((IkReal(-5.89039427385610e+15))*(cj7)))+(((IkReal(-1.00000000000000))*(x513)*(x514)))+(((IkReal(362876640.000000))*(npz))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*(x511)*(x514)))+(((IkReal(-5.89039427385610e+15))*(cj7)))+(((IkReal(-1.00000000000000))*(x513)*(x514)))+(((IkReal(362876640.000000))*(npz)))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x511)*(x512)))+(((IkReal(-2.61520783848318e+16))*(npz)))+(((IkReal(81732950.0000000))*(cj7)))+(((IkReal(-1.00000000000000))*(x512)*(x513)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x519=IKsin(j8);
IkReal x520=IKcos(j8);
IkReal x521=((cj9)*(npy));
IkReal x522=((IkReal(0.225236181506420))*(cj7));
IkReal x523=((npx)*(sj9));
IkReal x524=((IkReal(1.00000000000000))*(x520));
IkReal x525=((IkReal(1.00000000000000))*(x519));
evalcond[0]=((((IkReal(-1.00000000000000))*(x520)*(x522)))+(((IkReal(-1.02818442648811e-9))*(x519)))+(npz));
evalcond[1]=((IkReal(-1.02818441412821e-9))+(((IkReal(-1.00000000000000))*(x523)*(x524)))+(((IkReal(-1.00000000000000))*(x521)*(x524)))+(((npz)*(x519)))+(((IkReal(-0.0741000000000000))*(x520))));
evalcond[2]=((((IkReal(-1.00000000000000))*(npz)*(x524)))+(((IkReal(-1.00000000000000))*(x523)*(x525)))+(((IkReal(-1.00000000000000))*(x521)*(x525)))+(x522)+(((IkReal(-0.0741000000000000))*(x519))));
evalcond[3]=((IkReal(-0.0741000000000000))+(((x519)*(x522)))+(((IkReal(-1.00000000000000))*(x523)))+(((IkReal(-1.00000000000000))*(x521)))+(((IkReal(-1.02818442648811e-9))*(x520))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x526=((IkReal(2.80552507771488e+24))*(cj7));
IkReal x527=((npx)*(sj9));
IkReal x528=((cj9)*(npy));
if( IKabs(((gconst2)*(((((IkReal(-1.00000000000000))*(x526)*(x527)))+(((IkReal(-1.00000000000000))*(x526)*(x528)))+(((IkReal(-1.28069884968960e+16))*(npz)))+(((IkReal(-2.07889408258672e+23))*(cj7))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((IkReal(948997830443008.))+(((IkReal(1.28069884968960e+16))*(x528)))+(((IkReal(1.28069884968960e+16))*(x527)))+(((IkReal(-1.00000000000000))*(npz)*(x526))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j8array[0]=IKatan2(((gconst2)*(((((IkReal(-1.00000000000000))*(x526)*(x527)))+(((IkReal(-1.00000000000000))*(x526)*(x528)))+(((IkReal(-1.28069884968960e+16))*(npz)))+(((IkReal(-2.07889408258672e+23))*(cj7)))))), ((gconst2)*(((IkReal(948997830443008.))+(((IkReal(1.28069884968960e+16))*(x528)))+(((IkReal(1.28069884968960e+16))*(x527)))+(((IkReal(-1.00000000000000))*(npz)*(x526)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x529=IKsin(j8);
IkReal x530=IKcos(j8);
IkReal x531=((cj9)*(npy));
IkReal x532=((IkReal(0.225236181506420))*(cj7));
IkReal x533=((npx)*(sj9));
IkReal x534=((IkReal(1.00000000000000))*(x530));
IkReal x535=((IkReal(1.00000000000000))*(x529));
evalcond[0]=((((IkReal(-1.00000000000000))*(x530)*(x532)))+(((IkReal(-1.02818442648811e-9))*(x529)))+(npz));
evalcond[1]=((IkReal(-1.02818441412821e-9))+(((IkReal(-1.00000000000000))*(x533)*(x534)))+(((IkReal(-1.00000000000000))*(x531)*(x534)))+(((npz)*(x529)))+(((IkReal(-0.0741000000000000))*(x530))));
evalcond[2]=((((IkReal(-1.00000000000000))*(npz)*(x534)))+(((IkReal(-1.00000000000000))*(x533)*(x535)))+(((IkReal(-1.00000000000000))*(x531)*(x535)))+(x532)+(((IkReal(-0.0741000000000000))*(x529))));
evalcond[3]=((IkReal(-0.0741000000000000))+(((IkReal(-1.00000000000000))*(x533)))+(((IkReal(-1.00000000000000))*(x531)))+(((IkReal(-1.02818442648811e-9))*(x530)))+(((x529)*(x532))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x536=(npz)*(npz);
IkReal x537=(sj6)*(sj6);
IkReal x538=((cj6)*(cj7));
IkReal x539=((cj9)*(npy));
IkReal x540=((IkReal(3179700012.87778))*(sj6));
IkReal x541=((npx)*(sj9));
IkReal x542=((IKabs(((IkReal(-0.224440600000000))+(((IkReal(-0.317969998712222))*(sj6))))) != 0)?((IkReal)1/(((IkReal(-0.224440600000000))+(((IkReal(-0.317969998712222))*(sj6)))))):(IkReal)1.0e30);
IkReal x543=((IKabs(((IkReal(166310485.947115))+(((x539)*(x540)))+(((IkReal(235615770.954244))*(sj6)))+(((x540)*(x541)))+(((IkReal(2244406018.17969))*(x541)))+(((IkReal(2244406018.17969))*(x539)))+(((IkReal(-3179700012.87778))*(npz)*(x538))))) != 0)?((IkReal)1/(((IkReal(166310485.947115))+(((x539)*(x540)))+(((IkReal(235615770.954244))*(sj6)))+(((x540)*(x541)))+(((IkReal(2244406018.17969))*(x541)))+(((IkReal(2244406018.17969))*(x539)))+(((IkReal(-3179700012.87778))*(npz)*(x538)))))):(IkReal)1.0e30);
IkReal x544=((x542)*(x543));
if( IKabs(((((IkReal(160172882.286006))*(x538)*(x542)*(((IKabs(((IkReal(166310485.947115))+(((x539)*(x540)))+(((IkReal(-3179700012.87778))*(cj6)*(cj7)*(npz)))+(((IkReal(235615770.954244))*(sj6)))+(((x540)*(x541)))+(((IkReal(2244406018.17969))*(x541)))+(((IkReal(2244406018.17969))*(x539))))) != 0)?((IkReal)1/(((IkReal(166310485.947115))+(((x539)*(x540)))+(((IkReal(-3179700012.87778))*(cj6)*(cj7)*(npz)))+(((IkReal(235615770.954244))*(sj6)))+(((x540)*(x541)))+(((IkReal(2244406018.17969))*(x541)))+(((IkReal(2244406018.17969))*(x539)))))):(IkReal)1.0e30))))+(((IkReal(453840982.194971))*(sj6)*(x538)*(x542)*(((IKabs(((IkReal(166310485.947115))+(((x539)*(x540)))+(((IkReal(-3179700012.87778))*(cj6)*(cj7)*(npz)))+(((IkReal(235615770.954244))*(sj6)))+(((x540)*(x541)))+(((IkReal(2244406018.17969))*(x541)))+(((IkReal(2244406018.17969))*(x539))))) != 0)?((IkReal)1/(((IkReal(166310485.947115))+(((x539)*(x540)))+(((IkReal(-3179700012.87778))*(cj6)*(cj7)*(npz)))+(((IkReal(235615770.954244))*(sj6)))+(((x540)*(x541)))+(((IkReal(2244406018.17969))*(x541)))+(((IkReal(2244406018.17969))*(x539)))))):(IkReal)1.0e30))))+(((IkReal(-3179700012.87778))*(x536)*(x538)*(x542)*(((IKabs(((IkReal(166310485.947115))+(((x539)*(x540)))+(((IkReal(-3179700012.87778))*(cj6)*(cj7)*(npz)))+(((IkReal(235615770.954244))*(sj6)))+(((x540)*(x541)))+(((IkReal(2244406018.17969))*(x541)))+(((IkReal(2244406018.17969))*(x539))))) != 0)?((IkReal)1/(((IkReal(166310485.947115))+(((x539)*(x540)))+(((IkReal(-3179700012.87778))*(cj6)*(cj7)*(npz)))+(((IkReal(235615770.954244))*(sj6)))+(((x540)*(x541)))+(((IkReal(2244406018.17969))*(x541)))+(((IkReal(2244406018.17969))*(x539)))))):(IkReal)1.0e30))))+(((IkReal(321483315.683723))*(x537)*(x538)*(x542)*(((IKabs(((IkReal(166310485.947115))+(((x539)*(x540)))+(((IkReal(-3179700012.87778))*(cj6)*(cj7)*(npz)))+(((IkReal(235615770.954244))*(sj6)))+(((x540)*(x541)))+(((IkReal(2244406018.17969))*(x541)))+(((IkReal(2244406018.17969))*(x539))))) != 0)?((IkReal)1/(((IkReal(166310485.947115))+(((x539)*(x540)))+(((IkReal(-3179700012.87778))*(cj6)*(cj7)*(npz)))+(((IkReal(235615770.954244))*(sj6)))+(((x540)*(x541)))+(((IkReal(2244406018.17969))*(x541)))+(((IkReal(2244406018.17969))*(x539)))))):(IkReal)1.0e30))))+(((IkReal(-1.00000000000000))*(npz)*(x542))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x543)*(((IkReal(-503735833.363860))+(((IkReal(-1427307557.42060))*(sj6)))+(((IkReal(10000000081.0000))*(x536)))+(((IkReal(-1011049209.00000))*(x537))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(160172882.286006))*(x538)*(x542)*(((IKabs(((IkReal(166310485.947115))+(((x539)*(x540)))+(((IkReal(-3179700012.87778))*(cj6)*(cj7)*(npz)))+(((IkReal(235615770.954244))*(sj6)))+(((x540)*(x541)))+(((IkReal(2244406018.17969))*(x541)))+(((IkReal(2244406018.17969))*(x539))))) != 0)?((IkReal)1/(((IkReal(166310485.947115))+(((x539)*(x540)))+(((IkReal(-3179700012.87778))*(cj6)*(cj7)*(npz)))+(((IkReal(235615770.954244))*(sj6)))+(((x540)*(x541)))+(((IkReal(2244406018.17969))*(x541)))+(((IkReal(2244406018.17969))*(x539)))))):(IkReal)1.0e30))))+(((IkReal(453840982.194971))*(sj6)*(x538)*(x542)*(((IKabs(((IkReal(166310485.947115))+(((x539)*(x540)))+(((IkReal(-3179700012.87778))*(cj6)*(cj7)*(npz)))+(((IkReal(235615770.954244))*(sj6)))+(((x540)*(x541)))+(((IkReal(2244406018.17969))*(x541)))+(((IkReal(2244406018.17969))*(x539))))) != 0)?((IkReal)1/(((IkReal(166310485.947115))+(((x539)*(x540)))+(((IkReal(-3179700012.87778))*(cj6)*(cj7)*(npz)))+(((IkReal(235615770.954244))*(sj6)))+(((x540)*(x541)))+(((IkReal(2244406018.17969))*(x541)))+(((IkReal(2244406018.17969))*(x539)))))):(IkReal)1.0e30))))+(((IkReal(-3179700012.87778))*(x536)*(x538)*(x542)*(((IKabs(((IkReal(166310485.947115))+(((x539)*(x540)))+(((IkReal(-3179700012.87778))*(cj6)*(cj7)*(npz)))+(((IkReal(235615770.954244))*(sj6)))+(((x540)*(x541)))+(((IkReal(2244406018.17969))*(x541)))+(((IkReal(2244406018.17969))*(x539))))) != 0)?((IkReal)1/(((IkReal(166310485.947115))+(((x539)*(x540)))+(((IkReal(-3179700012.87778))*(cj6)*(cj7)*(npz)))+(((IkReal(235615770.954244))*(sj6)))+(((x540)*(x541)))+(((IkReal(2244406018.17969))*(x541)))+(((IkReal(2244406018.17969))*(x539)))))):(IkReal)1.0e30))))+(((IkReal(321483315.683723))*(x537)*(x538)*(x542)*(((IKabs(((IkReal(166310485.947115))+(((x539)*(x540)))+(((IkReal(-3179700012.87778))*(cj6)*(cj7)*(npz)))+(((IkReal(235615770.954244))*(sj6)))+(((x540)*(x541)))+(((IkReal(2244406018.17969))*(x541)))+(((IkReal(2244406018.17969))*(x539))))) != 0)?((IkReal)1/(((IkReal(166310485.947115))+(((x539)*(x540)))+(((IkReal(-3179700012.87778))*(cj6)*(cj7)*(npz)))+(((IkReal(235615770.954244))*(sj6)))+(((x540)*(x541)))+(((IkReal(2244406018.17969))*(x541)))+(((IkReal(2244406018.17969))*(x539)))))):(IkReal)1.0e30))))+(((IkReal(-1.00000000000000))*(npz)*(x542)))))+IKsqr(((x543)*(((IkReal(-503735833.363860))+(((IkReal(-1427307557.42060))*(sj6)))+(((IkReal(10000000081.0000))*(x536)))+(((IkReal(-1011049209.00000))*(x537)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((((IkReal(160172882.286006))*(x538)*(x542)*(((IKabs(((IkReal(166310485.947115))+(((x539)*(x540)))+(((IkReal(-3179700012.87778))*(cj6)*(cj7)*(npz)))+(((IkReal(235615770.954244))*(sj6)))+(((x540)*(x541)))+(((IkReal(2244406018.17969))*(x541)))+(((IkReal(2244406018.17969))*(x539))))) != 0)?((IkReal)1/(((IkReal(166310485.947115))+(((x539)*(x540)))+(((IkReal(-3179700012.87778))*(cj6)*(cj7)*(npz)))+(((IkReal(235615770.954244))*(sj6)))+(((x540)*(x541)))+(((IkReal(2244406018.17969))*(x541)))+(((IkReal(2244406018.17969))*(x539)))))):(IkReal)1.0e30))))+(((IkReal(453840982.194971))*(sj6)*(x538)*(x542)*(((IKabs(((IkReal(166310485.947115))+(((x539)*(x540)))+(((IkReal(-3179700012.87778))*(cj6)*(cj7)*(npz)))+(((IkReal(235615770.954244))*(sj6)))+(((x540)*(x541)))+(((IkReal(2244406018.17969))*(x541)))+(((IkReal(2244406018.17969))*(x539))))) != 0)?((IkReal)1/(((IkReal(166310485.947115))+(((x539)*(x540)))+(((IkReal(-3179700012.87778))*(cj6)*(cj7)*(npz)))+(((IkReal(235615770.954244))*(sj6)))+(((x540)*(x541)))+(((IkReal(2244406018.17969))*(x541)))+(((IkReal(2244406018.17969))*(x539)))))):(IkReal)1.0e30))))+(((IkReal(-3179700012.87778))*(x536)*(x538)*(x542)*(((IKabs(((IkReal(166310485.947115))+(((x539)*(x540)))+(((IkReal(-3179700012.87778))*(cj6)*(cj7)*(npz)))+(((IkReal(235615770.954244))*(sj6)))+(((x540)*(x541)))+(((IkReal(2244406018.17969))*(x541)))+(((IkReal(2244406018.17969))*(x539))))) != 0)?((IkReal)1/(((IkReal(166310485.947115))+(((x539)*(x540)))+(((IkReal(-3179700012.87778))*(cj6)*(cj7)*(npz)))+(((IkReal(235615770.954244))*(sj6)))+(((x540)*(x541)))+(((IkReal(2244406018.17969))*(x541)))+(((IkReal(2244406018.17969))*(x539)))))):(IkReal)1.0e30))))+(((IkReal(321483315.683723))*(x537)*(x538)*(x542)*(((IKabs(((IkReal(166310485.947115))+(((x539)*(x540)))+(((IkReal(-3179700012.87778))*(cj6)*(cj7)*(npz)))+(((IkReal(235615770.954244))*(sj6)))+(((x540)*(x541)))+(((IkReal(2244406018.17969))*(x541)))+(((IkReal(2244406018.17969))*(x539))))) != 0)?((IkReal)1/(((IkReal(166310485.947115))+(((x539)*(x540)))+(((IkReal(-3179700012.87778))*(cj6)*(cj7)*(npz)))+(((IkReal(235615770.954244))*(sj6)))+(((x540)*(x541)))+(((IkReal(2244406018.17969))*(x541)))+(((IkReal(2244406018.17969))*(x539)))))):(IkReal)1.0e30))))+(((IkReal(-1.00000000000000))*(npz)*(x542)))), ((x543)*(((IkReal(-503735833.363860))+(((IkReal(-1427307557.42060))*(sj6)))+(((IkReal(10000000081.0000))*(x536)))+(((IkReal(-1011049209.00000))*(x537)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x545=IKsin(j8);
IkReal x546=IKcos(j8);
IkReal x547=((cj6)*(cj7));
IkReal x548=((IkReal(1.00000000000000))*(x546));
IkReal x549=((IkReal(1.00000000000000))*(cj9)*(npy));
IkReal x550=((IkReal(0.317969998712222))*(x545));
IkReal x551=((IkReal(1.00000000000000))*(npx)*(sj9));
IkReal x552=((IkReal(0.317969998712222))*(x546));
evalcond[0]=((npz)+(((x547)*(x552)))+(((IkReal(-1.00000000000000))*(sj6)*(x550)))+(((IkReal(-0.224440600000000))*(x545))));
evalcond[1]=((IkReal(-0.224440600000000))+(((npz)*(x545)))+(((IkReal(-0.317969998712222))*(sj6)))+(((IkReal(-1.00000000000000))*(npx)*(sj9)*(x548)))+(((IkReal(-1.00000000000000))*(cj9)*(npy)*(x548)))+(((IkReal(-0.0741000000000000))*(x546))));
evalcond[2]=((((IkReal(-1.00000000000000))*(npz)*(x548)))+(((IkReal(-1.00000000000000))*(x545)*(x549)))+(((IkReal(-1.00000000000000))*(x545)*(x551)))+(((IkReal(-0.317969998712222))*(x547)))+(((IkReal(-0.0741000000000000))*(x545))));
evalcond[3]=((IkReal(-0.0741000000000000))+(((IkReal(-1.00000000000000))*(x547)*(x550)))+(((IkReal(-1.00000000000000))*(x549)))+(((IkReal(-1.00000000000000))*(sj6)*(x552)))+(((IkReal(-1.00000000000000))*(x551)))+(((IkReal(-0.224440600000000))*(x546))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x553=(cj6)*(cj6)*(cj6);
IkReal x554=(cj7)*(cj7)*(cj7);
IkReal x555=(npz)*(npz)*(npz);
IkReal x556=(npz)*(npz);
IkReal x557=(cj6)*(cj6);
IkReal x558=(cj7)*(cj7);
IkReal x559=((npz)*(sj6));
IkReal x560=((npx)*(sj9));
IkReal x561=((cj9)*(npy));
IkReal x562=((cj6)*(cj7));
IkReal x563=((IkReal(10000000081.0000))*(npz));
IkReal x564=((IkReal(3.17970003863336e+19))*(x556));
IkReal x565=((x557)*(x558));
IkReal x566=((IkReal(3.21483318287737e+18))*(x553)*(x554));
if( IKabs(((((IKabs(((((IkReal(1.01104921718950e+19))*(x556)*((sj6)*(sj6))))+(((IkReal(5.03735837444120e+18))*(x556)))+(((IkReal(-1.01104921718950e+19))*(x565)*((x560)*(x560))))+(((IkReal(1.42730756898179e+19))*(sj6)*(x556)))+(((IkReal(-2.02209843437900e+19))*(x560)*(x561)*(x565)))+(((IkReal(-1.49837493987484e+18))*(x561)*(x565)))+(((IkReal(-1.49837493987484e+18))*(x560)*(x565)))+(((IkReal(-1.01104921718950e+19))*(x565)*((x561)*(x561))))+(((IkReal(-5.55147915223627e+16))*(x565))))) != 0)?((IkReal)1/(((((IkReal(1.01104921718950e+19))*(x556)*((sj6)*(sj6))))+(((IkReal(5.03735837444120e+18))*(x556)))+(((IkReal(-1.01104921718950e+19))*(x565)*((x560)*(x560))))+(((IkReal(1.42730756898179e+19))*(sj6)*(x556)))+(((IkReal(-2.02209843437900e+19))*(x560)*(x561)*(x565)))+(((IkReal(-1.49837493987484e+18))*(x561)*(x565)))+(((IkReal(-1.49837493987484e+18))*(x560)*(x565)))+(((IkReal(-1.01104921718950e+19))*(x565)*((x561)*(x561))))+(((IkReal(-5.55147915223627e+16))*(x565)))))):(IkReal)1.0e30))*(((((IkReal(2.24440603635938e+19))*(x555)))+(((IkReal(-2.26920492935541e+18))*(npz)*(x565)))+(((IkReal(2.38219138851213e+17))*(x553)*(x554)))+(((IkReal(3.17970003863336e+19))*(sj6)*(x555)))+(((IkReal(-1.00000000000000))*(x561)*(x562)*(x564)))+(((IkReal(-1.00000000000000))*(x560)*(x562)*(x564)))+(((x561)*(x566)))+(((x560)*(x566)))+(((IkReal(-2.35615772862732e+18))*(x556)*(x562)))+(((IkReal(-3.21483318287737e+18))*(x559)*(x565))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(((((IkReal(-2244406018.17969))*(npz)))+(((IkReal(-235615770.954244))*(x562)))+(((IkReal(-3179700012.87778))*(x561)*(x562)))+(((IkReal(-3179700012.87778))*(x559)))+(((IkReal(-3179700012.87778))*(x560)*(x562))))) != 0)?((IkReal)1/(((((IkReal(-2244406018.17969))*(npz)))+(((IkReal(-235615770.954244))*(x562)))+(((IkReal(-3179700012.87778))*(x561)*(x562)))+(((IkReal(-3179700012.87778))*(x559)))+(((IkReal(-3179700012.87778))*(x560)*(x562)))))):(IkReal)1.0e30))*(((((IkReal(1011049209.00000))*(sj6)*(x562)))+(((IkReal(713653778.710298))*(x562)))+(((x561)*(x563)))+(((x560)*(x563)))+(((IkReal(741000006.002100))*(npz))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((((IkReal(1.01104921718950e+19))*(x556)*((sj6)*(sj6))))+(((IkReal(5.03735837444120e+18))*(x556)))+(((IkReal(-1.01104921718950e+19))*(x565)*((x560)*(x560))))+(((IkReal(1.42730756898179e+19))*(sj6)*(x556)))+(((IkReal(-2.02209843437900e+19))*(x560)*(x561)*(x565)))+(((IkReal(-1.49837493987484e+18))*(x561)*(x565)))+(((IkReal(-1.49837493987484e+18))*(x560)*(x565)))+(((IkReal(-1.01104921718950e+19))*(x565)*((x561)*(x561))))+(((IkReal(-5.55147915223627e+16))*(x565))))) != 0)?((IkReal)1/(((((IkReal(1.01104921718950e+19))*(x556)*((sj6)*(sj6))))+(((IkReal(5.03735837444120e+18))*(x556)))+(((IkReal(-1.01104921718950e+19))*(x565)*((x560)*(x560))))+(((IkReal(1.42730756898179e+19))*(sj6)*(x556)))+(((IkReal(-2.02209843437900e+19))*(x560)*(x561)*(x565)))+(((IkReal(-1.49837493987484e+18))*(x561)*(x565)))+(((IkReal(-1.49837493987484e+18))*(x560)*(x565)))+(((IkReal(-1.01104921718950e+19))*(x565)*((x561)*(x561))))+(((IkReal(-5.55147915223627e+16))*(x565)))))):(IkReal)1.0e30))*(((((IkReal(2.24440603635938e+19))*(x555)))+(((IkReal(-2.26920492935541e+18))*(npz)*(x565)))+(((IkReal(2.38219138851213e+17))*(x553)*(x554)))+(((IkReal(3.17970003863336e+19))*(sj6)*(x555)))+(((IkReal(-1.00000000000000))*(x561)*(x562)*(x564)))+(((IkReal(-1.00000000000000))*(x560)*(x562)*(x564)))+(((x561)*(x566)))+(((x560)*(x566)))+(((IkReal(-2.35615772862732e+18))*(x556)*(x562)))+(((IkReal(-3.21483318287737e+18))*(x559)*(x565)))))))+IKsqr(((((IKabs(((((IkReal(-2244406018.17969))*(npz)))+(((IkReal(-235615770.954244))*(x562)))+(((IkReal(-3179700012.87778))*(x561)*(x562)))+(((IkReal(-3179700012.87778))*(x559)))+(((IkReal(-3179700012.87778))*(x560)*(x562))))) != 0)?((IkReal)1/(((((IkReal(-2244406018.17969))*(npz)))+(((IkReal(-235615770.954244))*(x562)))+(((IkReal(-3179700012.87778))*(x561)*(x562)))+(((IkReal(-3179700012.87778))*(x559)))+(((IkReal(-3179700012.87778))*(x560)*(x562)))))):(IkReal)1.0e30))*(((((IkReal(1011049209.00000))*(sj6)*(x562)))+(((IkReal(713653778.710298))*(x562)))+(((x561)*(x563)))+(((x560)*(x563)))+(((IkReal(741000006.002100))*(npz)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((((IKabs(((((IkReal(1.01104921718950e+19))*(x556)*((sj6)*(sj6))))+(((IkReal(5.03735837444120e+18))*(x556)))+(((IkReal(-1.01104921718950e+19))*(x565)*((x560)*(x560))))+(((IkReal(1.42730756898179e+19))*(sj6)*(x556)))+(((IkReal(-2.02209843437900e+19))*(x560)*(x561)*(x565)))+(((IkReal(-1.49837493987484e+18))*(x561)*(x565)))+(((IkReal(-1.49837493987484e+18))*(x560)*(x565)))+(((IkReal(-1.01104921718950e+19))*(x565)*((x561)*(x561))))+(((IkReal(-5.55147915223627e+16))*(x565))))) != 0)?((IkReal)1/(((((IkReal(1.01104921718950e+19))*(x556)*((sj6)*(sj6))))+(((IkReal(5.03735837444120e+18))*(x556)))+(((IkReal(-1.01104921718950e+19))*(x565)*((x560)*(x560))))+(((IkReal(1.42730756898179e+19))*(sj6)*(x556)))+(((IkReal(-2.02209843437900e+19))*(x560)*(x561)*(x565)))+(((IkReal(-1.49837493987484e+18))*(x561)*(x565)))+(((IkReal(-1.49837493987484e+18))*(x560)*(x565)))+(((IkReal(-1.01104921718950e+19))*(x565)*((x561)*(x561))))+(((IkReal(-5.55147915223627e+16))*(x565)))))):(IkReal)1.0e30))*(((((IkReal(2.24440603635938e+19))*(x555)))+(((IkReal(-2.26920492935541e+18))*(npz)*(x565)))+(((IkReal(2.38219138851213e+17))*(x553)*(x554)))+(((IkReal(3.17970003863336e+19))*(sj6)*(x555)))+(((IkReal(-1.00000000000000))*(x561)*(x562)*(x564)))+(((IkReal(-1.00000000000000))*(x560)*(x562)*(x564)))+(((x561)*(x566)))+(((x560)*(x566)))+(((IkReal(-2.35615772862732e+18))*(x556)*(x562)))+(((IkReal(-3.21483318287737e+18))*(x559)*(x565)))))), ((((IKabs(((((IkReal(-2244406018.17969))*(npz)))+(((IkReal(-235615770.954244))*(x562)))+(((IkReal(-3179700012.87778))*(x561)*(x562)))+(((IkReal(-3179700012.87778))*(x559)))+(((IkReal(-3179700012.87778))*(x560)*(x562))))) != 0)?((IkReal)1/(((((IkReal(-2244406018.17969))*(npz)))+(((IkReal(-235615770.954244))*(x562)))+(((IkReal(-3179700012.87778))*(x561)*(x562)))+(((IkReal(-3179700012.87778))*(x559)))+(((IkReal(-3179700012.87778))*(x560)*(x562)))))):(IkReal)1.0e30))*(((((IkReal(1011049209.00000))*(sj6)*(x562)))+(((IkReal(713653778.710298))*(x562)))+(((x561)*(x563)))+(((x560)*(x563)))+(((IkReal(741000006.002100))*(npz)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x567=IKsin(j8);
IkReal x568=IKcos(j8);
IkReal x569=((cj6)*(cj7));
IkReal x570=((IkReal(1.00000000000000))*(x568));
IkReal x571=((IkReal(1.00000000000000))*(cj9)*(npy));
IkReal x572=((IkReal(0.317969998712222))*(x567));
IkReal x573=((IkReal(1.00000000000000))*(npx)*(sj9));
IkReal x574=((IkReal(0.317969998712222))*(x568));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj6)*(x572)))+(npz)+(((IkReal(-0.224440600000000))*(x567)))+(((x569)*(x574))));
evalcond[1]=((IkReal(-0.224440600000000))+(((IkReal(-1.00000000000000))*(cj9)*(npy)*(x570)))+(((npz)*(x567)))+(((IkReal(-1.00000000000000))*(npx)*(sj9)*(x570)))+(((IkReal(-0.317969998712222))*(sj6)))+(((IkReal(-0.0741000000000000))*(x568))));
evalcond[2]=((((IkReal(-0.317969998712222))*(x569)))+(((IkReal(-0.0741000000000000))*(x567)))+(((IkReal(-1.00000000000000))*(x567)*(x571)))+(((IkReal(-1.00000000000000))*(x567)*(x573)))+(((IkReal(-1.00000000000000))*(npz)*(x570))));
evalcond[3]=((IkReal(-0.0741000000000000))+(((IkReal(-1.00000000000000))*(x569)*(x572)))+(((IkReal(-1.00000000000000))*(sj6)*(x574)))+(((IkReal(-0.224440600000000))*(x568)))+(((IkReal(-1.00000000000000))*(x573)))+(((IkReal(-1.00000000000000))*(x571))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x575=((IkReal(3179700012.87778))*(sj6));
IkReal x576=((cj9)*(npy));
IkReal x577=((npx)*(sj9));
IkReal x578=((cj6)*(cj7));
if( IKabs(((gconst0)*(((((npz)*(x575)))+(((IkReal(-235615770.954244))*(x578)))+(((IkReal(-3179700012.87778))*(x576)*(x578)))+(((IkReal(-3179700012.87778))*(x577)*(x578)))+(((IkReal(2244406018.17969))*(npz))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((IkReal(-166310485.947115))+(((IkReal(-1.00000000000000))*(x575)*(x577)))+(((IkReal(-1.00000000000000))*(x575)*(x576)))+(((IkReal(-235615770.954244))*(sj6)))+(((IkReal(-3179700012.87778))*(npz)*(x578)))+(((IkReal(-2244406018.17969))*(x576)))+(((IkReal(-2244406018.17969))*(x577))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j8array[0]=IKatan2(((gconst0)*(((((npz)*(x575)))+(((IkReal(-235615770.954244))*(x578)))+(((IkReal(-3179700012.87778))*(x576)*(x578)))+(((IkReal(-3179700012.87778))*(x577)*(x578)))+(((IkReal(2244406018.17969))*(npz)))))), ((gconst0)*(((IkReal(-166310485.947115))+(((IkReal(-1.00000000000000))*(x575)*(x577)))+(((IkReal(-1.00000000000000))*(x575)*(x576)))+(((IkReal(-235615770.954244))*(sj6)))+(((IkReal(-3179700012.87778))*(npz)*(x578)))+(((IkReal(-2244406018.17969))*(x576)))+(((IkReal(-2244406018.17969))*(x577)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x579=IKsin(j8);
IkReal x580=IKcos(j8);
IkReal x581=((cj6)*(cj7));
IkReal x582=((IkReal(1.00000000000000))*(x580));
IkReal x583=((IkReal(1.00000000000000))*(cj9)*(npy));
IkReal x584=((IkReal(0.317969998712222))*(x579));
IkReal x585=((IkReal(1.00000000000000))*(npx)*(sj9));
IkReal x586=((IkReal(0.317969998712222))*(x580));
evalcond[0]=((((x581)*(x586)))+(((IkReal(-1.00000000000000))*(sj6)*(x584)))+(npz)+(((IkReal(-0.224440600000000))*(x579))));
evalcond[1]=((IkReal(-0.224440600000000))+(((npz)*(x579)))+(((IkReal(-1.00000000000000))*(npx)*(sj9)*(x582)))+(((IkReal(-0.0741000000000000))*(x580)))+(((IkReal(-0.317969998712222))*(sj6)))+(((IkReal(-1.00000000000000))*(cj9)*(npy)*(x582))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x579)*(x585)))+(((IkReal(-1.00000000000000))*(x579)*(x583)))+(((IkReal(-1.00000000000000))*(npz)*(x582)))+(((IkReal(-0.0741000000000000))*(x579)))+(((IkReal(-0.317969998712222))*(x581))));
evalcond[3]=((IkReal(-0.0741000000000000))+(((IkReal(-1.00000000000000))*(sj6)*(x586)))+(((IkReal(-0.224440600000000))*(x580)))+(((IkReal(-1.00000000000000))*(x585)))+(((IkReal(-1.00000000000000))*(x583)))+(((IkReal(-1.00000000000000))*(x581)*(x584))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}
}
}

}

}

} else
{
{
IkReal j8array[2], cj8array[2], sj8array[2];
bool j8valid[2]={false};
_nj8 = 2;
IkReal x587=((IkReal(-0.0741000000000000))+(((IkReal(-1.00000000000000))*(npx)*(sj9)))+(((IkReal(-1.00000000000000))*(cj9)*(npy))));
if( IKabs(x587) < IKFAST_ATAN2_MAGTHRESH && IKabs(npz) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x588=((IkReal(1.00000000000000))*(IKatan2(x587, npz)));
if( ((((x587)*(x587))+((npz)*(npz)))) < (IkReal)-0.00001 )
    continue;
if( (((IkReal(-1.00000000000000))*(((IKabs(IKabs(IKsqrt((((x587)*(x587))+((npz)*(npz)))))) != 0)?((IkReal)1/(IKabs(IKsqrt((((x587)*(x587))+((npz)*(npz))))))):(IkReal)1.0e30))*(((IkReal(-0.224440600000000))+(((IkReal(-0.317969998712222))*(sj6))))))) < -1-IKFAST_SINCOS_THRESH || (((IkReal(-1.00000000000000))*(((IKabs(IKabs(IKsqrt((((x587)*(x587))+((npz)*(npz)))))) != 0)?((IkReal)1/(IKabs(IKsqrt((((x587)*(x587))+((npz)*(npz))))))):(IkReal)1.0e30))*(((IkReal(-0.224440600000000))+(((IkReal(-0.317969998712222))*(sj6))))))) > 1+IKFAST_SINCOS_THRESH )
    continue;
IkReal x589=((IkReal(-1.00000000000000))*(IKasin(((IkReal(-1.00000000000000))*(((IKabs(IKabs(IKsqrt((((x587)*(x587))+((npz)*(npz)))))) != 0)?((IkReal)1/(IKabs(IKsqrt((((x587)*(x587))+((npz)*(npz))))))):(IkReal)1.0e30))*(((IkReal(-0.224440600000000))+(((IkReal(-0.317969998712222))*(sj6)))))))));
j8array[0]=((((IkReal(-1.00000000000000))*(x589)))+(((IkReal(-1.00000000000000))*(x588))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
j8array[1]=((IkReal(3.14159265358979))+(((IkReal(1.00000000000000))*(x589)))+(((IkReal(-1.00000000000000))*(x588))));
sj8array[1]=IKsin(j8array[1]);
cj8array[1]=IKcos(j8array[1]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
if( j8array[1] > IKPI )
{
    j8array[1]-=IK2PI;
}
else if( j8array[1] < -IKPI )
{    j8array[1]+=IK2PI;
}
j8valid[1] = true;
for(int ij8 = 0; ij8 < 2; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 2; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];

{
IkReal dummyeval[1];
IkReal gconst3;
gconst3=IKsign(cj6);
dummyeval[0]=cj6;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=cj6;
dummyeval[1]=cj8;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[4];
IkReal x590=((IkReal(-0.224440600000000))+(npz)+(((IkReal(-0.317969998712222))*(sj6))));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j8)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.145987693009410))+(((IkReal(0.142730754585940))*(sj6)))+(((IkReal(-0.148200000000000))*(npx)*(sj9)))+(((IkReal(-1.00000000000000))*(pp)))+(((IkReal(-0.148200000000000))*(cj9)*(npy))));
evalcond[2]=x590;
evalcond[3]=x590;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign(cj6);
dummyeval[0]=cj6;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j7array[1], cj7array[1], sj7array[1];
bool j7valid[1]={false};
_nj7 = 1;
IkReal x591=((IkReal(100000.000405000))*(npx));
IkReal x592=((IkReal(100000.000405000))*(npy));
if( IKabs(((gconst4)*(((((sj9)*(x592)))+(((IkReal(-1.00000000000000))*(cj9)*(x591))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((IkReal(-7410.00003001050))+(((IkReal(-1.00000000000000))*(cj9)*(x592)))+(((IkReal(-1.00000000000000))*(sj9)*(x591))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j7array[0]=IKatan2(((gconst4)*(((((sj9)*(x592)))+(((IkReal(-1.00000000000000))*(cj9)*(x591)))))), ((gconst4)*(((IkReal(-7410.00003001050))+(((IkReal(-1.00000000000000))*(cj9)*(x592)))+(((IkReal(-1.00000000000000))*(sj9)*(x591)))))));
sj7array[0]=IKsin(j7array[0]);
cj7array[0]=IKcos(j7array[0]);
if( j7array[0] > IKPI )
{
    j7array[0]-=IK2PI;
}
else if( j7array[0] < -IKPI )
{    j7array[0]+=IK2PI;
}
j7valid[0] = true;
for(int ij7 = 0; ij7 < 1; ++ij7)
{
if( !j7valid[ij7] )
{
    continue;
}
_ij7[0] = ij7; _ij7[1] = -1;
for(int iij7 = ij7+1; iij7 < 1; ++iij7)
{
if( j7valid[iij7] && IKabs(cj7array[ij7]-cj7array[iij7]) < IKFAST_SOLUTION_THRESH && IKabs(sj7array[ij7]-sj7array[iij7]) < IKFAST_SOLUTION_THRESH )
{
    j7valid[iij7]=false; _ij7[1] = iij7; break; 
}
}
j7 = j7array[ij7]; cj7 = cj7array[ij7]; sj7 = sj7array[ij7];
{
IkReal evalcond[2];
IkReal x593=((IkReal(0.317969998712222))*(cj6));
IkReal x594=((IkReal(1.00000000000000))*(npy));
evalcond[0]=((((cj9)*(npx)))+(((IkReal(-1.00000000000000))*(sj9)*(x594)))+(((x593)*(IKsin(j7)))));
evalcond[1]=((IkReal(-0.0741000000000000))+(((IkReal(-1.00000000000000))*(x593)*(IKcos(j7))))+(((IkReal(-1.00000000000000))*(cj9)*(x594)))+(((IkReal(-1.00000000000000))*(npx)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x595=((IkReal(0.317969998712222))*(sj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j8)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.145987693009410))+(((IkReal(0.142730754585940))*(sj6)))+(((IkReal(-0.148200000000000))*(npx)*(sj9)))+(((IkReal(-1.00000000000000))*(pp)))+(((IkReal(-0.148200000000000))*(cj9)*(npy))));
evalcond[2]=((IkReal(0.224440600000000))+(npz)+(x595));
evalcond[3]=((IkReal(-0.224440600000000))+(((IkReal(-1.00000000000000))*(npz)))+(((IkReal(-1.00000000000000))*(x595))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst5;
gconst5=IKsign(cj6);
dummyeval[0]=cj6;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j7array[1], cj7array[1], sj7array[1];
bool j7valid[1]={false};
_nj7 = 1;
IkReal x596=((IkReal(100000.000405000))*(npy));
IkReal x597=((IkReal(100000.000405000))*(npx));
if( IKabs(((gconst5)*(((((sj9)*(x596)))+(((IkReal(-1.00000000000000))*(cj9)*(x597))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((IkReal(7410.00003001050))+(((sj9)*(x597)))+(((cj9)*(x596))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j7array[0]=IKatan2(((gconst5)*(((((sj9)*(x596)))+(((IkReal(-1.00000000000000))*(cj9)*(x597)))))), ((gconst5)*(((IkReal(7410.00003001050))+(((sj9)*(x597)))+(((cj9)*(x596)))))));
sj7array[0]=IKsin(j7array[0]);
cj7array[0]=IKcos(j7array[0]);
if( j7array[0] > IKPI )
{
    j7array[0]-=IK2PI;
}
else if( j7array[0] < -IKPI )
{    j7array[0]+=IK2PI;
}
j7valid[0] = true;
for(int ij7 = 0; ij7 < 1; ++ij7)
{
if( !j7valid[ij7] )
{
    continue;
}
_ij7[0] = ij7; _ij7[1] = -1;
for(int iij7 = ij7+1; iij7 < 1; ++iij7)
{
if( j7valid[iij7] && IKabs(cj7array[ij7]-cj7array[iij7]) < IKFAST_SOLUTION_THRESH && IKabs(sj7array[ij7]-sj7array[iij7]) < IKFAST_SOLUTION_THRESH )
{
    j7valid[iij7]=false; _ij7[1] = iij7; break; 
}
}
j7 = j7array[ij7]; cj7 = cj7array[ij7]; sj7 = sj7array[ij7];
{
IkReal evalcond[2];
IkReal x598=((IkReal(0.317969998712222))*(cj6));
evalcond[0]=((((cj9)*(npx)))+(((x598)*(IKsin(j7))))+(((IkReal(-1.00000000000000))*(npy)*(sj9))));
evalcond[1]=((IkReal(0.0741000000000000))+(((npx)*(sj9)))+(((IkReal(-1.00000000000000))*(x598)*(IKcos(j7))))+(((cj9)*(npy))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j7array[1], cj7array[1], sj7array[1];
bool j7valid[1]={false};
_nj7 = 1;
IkReal x599=((IKabs(cj6) != 0)?((IkReal)1/(cj6)):(IkReal)1.0e30);
IkReal x600=((IkReal(3.14495078152027e-5))*(x599));
if( IKabs(((x600)*(((((IkReal(100000.000405000))*(npy)*(sj9)))+(((IkReal(-100000.000405000))*(cj9)*(npx))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x600)*(((IKabs(cj8) != 0)?((IkReal)1/(cj8)):(IkReal)1.0e30))*(((((IkReal(31797.0000000000))*(sj6)*(sj8)))+(((IkReal(-100000.000405000))*(npz)))+(((IkReal(22444.0600908984))*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x600)*(((((IkReal(100000.000405000))*(npy)*(sj9)))+(((IkReal(-100000.000405000))*(cj9)*(npx)))))))+IKsqr(((x600)*(((IKabs(cj8) != 0)?((IkReal)1/(cj8)):(IkReal)1.0e30))*(((((IkReal(31797.0000000000))*(sj6)*(sj8)))+(((IkReal(-100000.000405000))*(npz)))+(((IkReal(22444.0600908984))*(sj8)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j7array[0]=IKatan2(((x600)*(((((IkReal(100000.000405000))*(npy)*(sj9)))+(((IkReal(-100000.000405000))*(cj9)*(npx)))))), ((x600)*(((IKabs(cj8) != 0)?((IkReal)1/(cj8)):(IkReal)1.0e30))*(((((IkReal(31797.0000000000))*(sj6)*(sj8)))+(((IkReal(-100000.000405000))*(npz)))+(((IkReal(22444.0600908984))*(sj8)))))));
sj7array[0]=IKsin(j7array[0]);
cj7array[0]=IKcos(j7array[0]);
if( j7array[0] > IKPI )
{
    j7array[0]-=IK2PI;
}
else if( j7array[0] < -IKPI )
{    j7array[0]+=IK2PI;
}
j7valid[0] = true;
for(int ij7 = 0; ij7 < 1; ++ij7)
{
if( !j7valid[ij7] )
{
    continue;
}
_ij7[0] = ij7; _ij7[1] = -1;
for(int iij7 = ij7+1; iij7 < 1; ++iij7)
{
if( j7valid[iij7] && IKabs(cj7array[ij7]-cj7array[iij7]) < IKFAST_SOLUTION_THRESH && IKabs(sj7array[ij7]-sj7array[iij7]) < IKFAST_SOLUTION_THRESH )
{
    j7valid[iij7]=false; _ij7[1] = iij7; break; 
}
}
j7 = j7array[ij7]; cj7 = cj7array[ij7]; sj7 = sj7array[ij7];
{
IkReal evalcond[4];
IkReal x601=IKcos(j7);
IkReal x602=((IkReal(0.317969998712222))*(sj8));
IkReal x603=((IkReal(0.317969998712222))*(cj6));
IkReal x604=((IkReal(1.00000000000000))*(npx)*(sj9));
IkReal x605=((IkReal(1.00000000000000))*(cj9)*(npy));
evalcond[0]=((((cj9)*(npx)))+(((x603)*(IKsin(j7))))+(((IkReal(-1.00000000000000))*(npy)*(sj9))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj6)*(x602)))+(npz)+(((cj8)*(x601)*(x603)))+(((IkReal(-0.224440600000000))*(sj8))));
evalcond[2]=((((IkReal(-0.0741000000000000))*(sj8)))+(((IkReal(-1.00000000000000))*(sj8)*(x604)))+(((IkReal(-1.00000000000000))*(sj8)*(x605)))+(((IkReal(-1.00000000000000))*(cj8)*(npz)))+(((IkReal(-1.00000000000000))*(x601)*(x603))));
evalcond[3]=((IkReal(-0.0741000000000000))+(((IkReal(-1.00000000000000))*(cj6)*(x601)*(x602)))+(((IkReal(-0.317969998712222))*(cj8)*(sj6)))+(((IkReal(-1.00000000000000))*(x604)))+(((IkReal(-1.00000000000000))*(x605)))+(((IkReal(-0.224440600000000))*(cj8))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j7array[1], cj7array[1], sj7array[1];
bool j7valid[1]={false};
_nj7 = 1;
IkReal x606=((IkReal(100000.000405000))*(cj9));
IkReal x607=((IkReal(100000.000405000))*(sj9));
if( IKabs(((gconst3)*(((((IkReal(-1.00000000000000))*(npx)*(x606)))+(((npy)*(x607))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((IkReal(-7410.00003001050))*(sj8)))+(((IkReal(-1.00000000000000))*(npy)*(sj8)*(x606)))+(((IkReal(-1.00000000000000))*(npx)*(sj8)*(x607)))+(((IkReal(-100000.000405000))*(cj8)*(npz))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j7array[0]=IKatan2(((gconst3)*(((((IkReal(-1.00000000000000))*(npx)*(x606)))+(((npy)*(x607)))))), ((gconst3)*(((((IkReal(-7410.00003001050))*(sj8)))+(((IkReal(-1.00000000000000))*(npy)*(sj8)*(x606)))+(((IkReal(-1.00000000000000))*(npx)*(sj8)*(x607)))+(((IkReal(-100000.000405000))*(cj8)*(npz)))))));
sj7array[0]=IKsin(j7array[0]);
cj7array[0]=IKcos(j7array[0]);
if( j7array[0] > IKPI )
{
    j7array[0]-=IK2PI;
}
else if( j7array[0] < -IKPI )
{    j7array[0]+=IK2PI;
}
j7valid[0] = true;
for(int ij7 = 0; ij7 < 1; ++ij7)
{
if( !j7valid[ij7] )
{
    continue;
}
_ij7[0] = ij7; _ij7[1] = -1;
for(int iij7 = ij7+1; iij7 < 1; ++iij7)
{
if( j7valid[iij7] && IKabs(cj7array[ij7]-cj7array[iij7]) < IKFAST_SOLUTION_THRESH && IKabs(sj7array[ij7]-sj7array[iij7]) < IKFAST_SOLUTION_THRESH )
{
    j7valid[iij7]=false; _ij7[1] = iij7; break; 
}
}
j7 = j7array[ij7]; cj7 = cj7array[ij7]; sj7 = sj7array[ij7];
{
IkReal evalcond[4];
IkReal x608=IKcos(j7);
IkReal x609=((IkReal(0.317969998712222))*(sj8));
IkReal x610=((IkReal(0.317969998712222))*(cj6));
IkReal x611=((IkReal(1.00000000000000))*(npx)*(sj9));
IkReal x612=((IkReal(1.00000000000000))*(cj9)*(npy));
evalcond[0]=((((x610)*(IKsin(j7))))+(((cj9)*(npx)))+(((IkReal(-1.00000000000000))*(npy)*(sj9))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj6)*(x609)))+(npz)+(((cj8)*(x608)*(x610)))+(((IkReal(-0.224440600000000))*(sj8))));
evalcond[2]=((((IkReal(-0.0741000000000000))*(sj8)))+(((IkReal(-1.00000000000000))*(sj8)*(x612)))+(((IkReal(-1.00000000000000))*(sj8)*(x611)))+(((IkReal(-1.00000000000000))*(cj8)*(npz)))+(((IkReal(-1.00000000000000))*(x608)*(x610))));
evalcond[3]=((IkReal(-0.0741000000000000))+(((IkReal(-0.317969998712222))*(cj8)*(sj6)))+(((IkReal(-1.00000000000000))*(x612)))+(((IkReal(-1.00000000000000))*(x611)))+(((IkReal(-0.224440600000000))*(cj8)))+(((IkReal(-1.00000000000000))*(cj6)*(x608)*(x609))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}
}
}

}

}

} else
{
{
IkReal j8array[2], cj8array[2], sj8array[2];
bool j8valid[2]={false};
_nj8 = 2;
IkReal x613=((IkReal(-0.0741000000000000))+(((IkReal(-1.00000000000000))*(npx)*(sj9)))+(((IkReal(-1.00000000000000))*(cj9)*(npy))));
if( IKabs(x613) < IKFAST_ATAN2_MAGTHRESH && IKabs(npz) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x614=((IkReal(1.00000000000000))*(IKatan2(x613, npz)));
if( ((((x613)*(x613))+((npz)*(npz)))) < (IkReal)-0.00001 )
    continue;
if( (((IkReal(-1.00000000000000))*(((IKabs(IKabs(IKsqrt((((x613)*(x613))+((npz)*(npz)))))) != 0)?((IkReal)1/(IKabs(IKsqrt((((x613)*(x613))+((npz)*(npz))))))):(IkReal)1.0e30))*(((IkReal(-0.224440600000000))+(((IkReal(-0.317969998712222))*(sj6))))))) < -1-IKFAST_SINCOS_THRESH || (((IkReal(-1.00000000000000))*(((IKabs(IKabs(IKsqrt((((x613)*(x613))+((npz)*(npz)))))) != 0)?((IkReal)1/(IKabs(IKsqrt((((x613)*(x613))+((npz)*(npz))))))):(IkReal)1.0e30))*(((IkReal(-0.224440600000000))+(((IkReal(-0.317969998712222))*(sj6))))))) > 1+IKFAST_SINCOS_THRESH )
    continue;
IkReal x615=((IkReal(-1.00000000000000))*(IKasin(((IkReal(-1.00000000000000))*(((IKabs(IKabs(IKsqrt((((x613)*(x613))+((npz)*(npz)))))) != 0)?((IkReal)1/(IKabs(IKsqrt((((x613)*(x613))+((npz)*(npz))))))):(IkReal)1.0e30))*(((IkReal(-0.224440600000000))+(((IkReal(-0.317969998712222))*(sj6)))))))));
j8array[0]=((((IkReal(-1.00000000000000))*(x615)))+(((IkReal(-1.00000000000000))*(x614))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
j8array[1]=((IkReal(3.14159265358979))+(((IkReal(1.00000000000000))*(x615)))+(((IkReal(-1.00000000000000))*(x614))));
sj8array[1]=IKsin(j8array[1]);
cj8array[1]=IKcos(j8array[1]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
if( j8array[1] > IKPI )
{
    j8array[1]-=IK2PI;
}
else if( j8array[1] < -IKPI )
{    j8array[1]+=IK2PI;
}
j8valid[1] = true;
for(int ij8 = 0; ij8 < 2; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 2; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];

{
IkReal dummyeval[1];
IkReal gconst3;
gconst3=IKsign(cj6);
dummyeval[0]=cj6;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=cj6;
dummyeval[1]=cj8;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[4];
IkReal x616=((IkReal(-0.224440600000000))+(npz)+(((IkReal(-0.317969998712222))*(sj6))));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j8)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.145987693009410))+(((IkReal(0.142730754585940))*(sj6)))+(((IkReal(-0.148200000000000))*(npx)*(sj9)))+(((IkReal(-1.00000000000000))*(pp)))+(((IkReal(-0.148200000000000))*(cj9)*(npy))));
evalcond[2]=x616;
evalcond[3]=x616;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign(cj6);
dummyeval[0]=cj6;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j7array[1], cj7array[1], sj7array[1];
bool j7valid[1]={false};
_nj7 = 1;
IkReal x617=((IkReal(100000.000405000))*(npx));
IkReal x618=((IkReal(100000.000405000))*(npy));
if( IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(cj9)*(x617)))+(((sj9)*(x618))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((IkReal(-7410.00003001050))+(((IkReal(-1.00000000000000))*(cj9)*(x618)))+(((IkReal(-1.00000000000000))*(sj9)*(x617))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j7array[0]=IKatan2(((gconst4)*(((((IkReal(-1.00000000000000))*(cj9)*(x617)))+(((sj9)*(x618)))))), ((gconst4)*(((IkReal(-7410.00003001050))+(((IkReal(-1.00000000000000))*(cj9)*(x618)))+(((IkReal(-1.00000000000000))*(sj9)*(x617)))))));
sj7array[0]=IKsin(j7array[0]);
cj7array[0]=IKcos(j7array[0]);
if( j7array[0] > IKPI )
{
    j7array[0]-=IK2PI;
}
else if( j7array[0] < -IKPI )
{    j7array[0]+=IK2PI;
}
j7valid[0] = true;
for(int ij7 = 0; ij7 < 1; ++ij7)
{
if( !j7valid[ij7] )
{
    continue;
}
_ij7[0] = ij7; _ij7[1] = -1;
for(int iij7 = ij7+1; iij7 < 1; ++iij7)
{
if( j7valid[iij7] && IKabs(cj7array[ij7]-cj7array[iij7]) < IKFAST_SOLUTION_THRESH && IKabs(sj7array[ij7]-sj7array[iij7]) < IKFAST_SOLUTION_THRESH )
{
    j7valid[iij7]=false; _ij7[1] = iij7; break; 
}
}
j7 = j7array[ij7]; cj7 = cj7array[ij7]; sj7 = sj7array[ij7];
{
IkReal evalcond[2];
IkReal x619=((IkReal(0.317969998712222))*(cj6));
IkReal x620=((IkReal(1.00000000000000))*(npy));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj9)*(x620)))+(((x619)*(IKsin(j7))))+(((cj9)*(npx))));
evalcond[1]=((IkReal(-0.0741000000000000))+(((IkReal(-1.00000000000000))*(cj9)*(x620)))+(((IkReal(-1.00000000000000))*(x619)*(IKcos(j7))))+(((IkReal(-1.00000000000000))*(npx)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x621=((IkReal(0.317969998712222))*(sj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j8)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.145987693009410))+(((IkReal(0.142730754585940))*(sj6)))+(((IkReal(-0.148200000000000))*(npx)*(sj9)))+(((IkReal(-1.00000000000000))*(pp)))+(((IkReal(-0.148200000000000))*(cj9)*(npy))));
evalcond[2]=((IkReal(0.224440600000000))+(npz)+(x621));
evalcond[3]=((IkReal(-0.224440600000000))+(((IkReal(-1.00000000000000))*(x621)))+(((IkReal(-1.00000000000000))*(npz))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst5;
gconst5=IKsign(cj6);
dummyeval[0]=cj6;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j7array[1], cj7array[1], sj7array[1];
bool j7valid[1]={false};
_nj7 = 1;
IkReal x622=((IkReal(100000.000405000))*(npy));
IkReal x623=((IkReal(100000.000405000))*(npx));
if( IKabs(((gconst5)*(((((IkReal(-1.00000000000000))*(cj9)*(x623)))+(((sj9)*(x622))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((IkReal(7410.00003001050))+(((sj9)*(x623)))+(((cj9)*(x622))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j7array[0]=IKatan2(((gconst5)*(((((IkReal(-1.00000000000000))*(cj9)*(x623)))+(((sj9)*(x622)))))), ((gconst5)*(((IkReal(7410.00003001050))+(((sj9)*(x623)))+(((cj9)*(x622)))))));
sj7array[0]=IKsin(j7array[0]);
cj7array[0]=IKcos(j7array[0]);
if( j7array[0] > IKPI )
{
    j7array[0]-=IK2PI;
}
else if( j7array[0] < -IKPI )
{    j7array[0]+=IK2PI;
}
j7valid[0] = true;
for(int ij7 = 0; ij7 < 1; ++ij7)
{
if( !j7valid[ij7] )
{
    continue;
}
_ij7[0] = ij7; _ij7[1] = -1;
for(int iij7 = ij7+1; iij7 < 1; ++iij7)
{
if( j7valid[iij7] && IKabs(cj7array[ij7]-cj7array[iij7]) < IKFAST_SOLUTION_THRESH && IKabs(sj7array[ij7]-sj7array[iij7]) < IKFAST_SOLUTION_THRESH )
{
    j7valid[iij7]=false; _ij7[1] = iij7; break; 
}
}
j7 = j7array[ij7]; cj7 = cj7array[ij7]; sj7 = sj7array[ij7];
{
IkReal evalcond[2];
IkReal x624=((IkReal(0.317969998712222))*(cj6));
evalcond[0]=((((cj9)*(npx)))+(((x624)*(IKsin(j7))))+(((IkReal(-1.00000000000000))*(npy)*(sj9))));
evalcond[1]=((IkReal(0.0741000000000000))+(((npx)*(sj9)))+(((cj9)*(npy)))+(((IkReal(-1.00000000000000))*(x624)*(IKcos(j7)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j7array[1], cj7array[1], sj7array[1];
bool j7valid[1]={false};
_nj7 = 1;
IkReal x625=((IKabs(cj6) != 0)?((IkReal)1/(cj6)):(IkReal)1.0e30);
IkReal x626=((IkReal(3.14495078152027e-5))*(x625));
if( IKabs(((x626)*(((((IkReal(100000.000405000))*(npy)*(sj9)))+(((IkReal(-100000.000405000))*(cj9)*(npx))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x626)*(((IKabs(cj8) != 0)?((IkReal)1/(cj8)):(IkReal)1.0e30))*(((((IkReal(31797.0000000000))*(sj6)*(sj8)))+(((IkReal(-100000.000405000))*(npz)))+(((IkReal(22444.0600908984))*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x626)*(((((IkReal(100000.000405000))*(npy)*(sj9)))+(((IkReal(-100000.000405000))*(cj9)*(npx)))))))+IKsqr(((x626)*(((IKabs(cj8) != 0)?((IkReal)1/(cj8)):(IkReal)1.0e30))*(((((IkReal(31797.0000000000))*(sj6)*(sj8)))+(((IkReal(-100000.000405000))*(npz)))+(((IkReal(22444.0600908984))*(sj8)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j7array[0]=IKatan2(((x626)*(((((IkReal(100000.000405000))*(npy)*(sj9)))+(((IkReal(-100000.000405000))*(cj9)*(npx)))))), ((x626)*(((IKabs(cj8) != 0)?((IkReal)1/(cj8)):(IkReal)1.0e30))*(((((IkReal(31797.0000000000))*(sj6)*(sj8)))+(((IkReal(-100000.000405000))*(npz)))+(((IkReal(22444.0600908984))*(sj8)))))));
sj7array[0]=IKsin(j7array[0]);
cj7array[0]=IKcos(j7array[0]);
if( j7array[0] > IKPI )
{
    j7array[0]-=IK2PI;
}
else if( j7array[0] < -IKPI )
{    j7array[0]+=IK2PI;
}
j7valid[0] = true;
for(int ij7 = 0; ij7 < 1; ++ij7)
{
if( !j7valid[ij7] )
{
    continue;
}
_ij7[0] = ij7; _ij7[1] = -1;
for(int iij7 = ij7+1; iij7 < 1; ++iij7)
{
if( j7valid[iij7] && IKabs(cj7array[ij7]-cj7array[iij7]) < IKFAST_SOLUTION_THRESH && IKabs(sj7array[ij7]-sj7array[iij7]) < IKFAST_SOLUTION_THRESH )
{
    j7valid[iij7]=false; _ij7[1] = iij7; break; 
}
}
j7 = j7array[ij7]; cj7 = cj7array[ij7]; sj7 = sj7array[ij7];
{
IkReal evalcond[4];
IkReal x627=IKcos(j7);
IkReal x628=((IkReal(0.317969998712222))*(sj8));
IkReal x629=((IkReal(0.317969998712222))*(cj6));
IkReal x630=((IkReal(1.00000000000000))*(npx)*(sj9));
IkReal x631=((IkReal(1.00000000000000))*(cj9)*(npy));
evalcond[0]=((((cj9)*(npx)))+(((x629)*(IKsin(j7))))+(((IkReal(-1.00000000000000))*(npy)*(sj9))));
evalcond[1]=((npz)+(((cj8)*(x627)*(x629)))+(((IkReal(-1.00000000000000))*(sj6)*(x628)))+(((IkReal(-0.224440600000000))*(sj8))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj8)*(x631)))+(((IkReal(-1.00000000000000))*(sj8)*(x630)))+(((IkReal(-0.0741000000000000))*(sj8)))+(((IkReal(-1.00000000000000))*(x627)*(x629)))+(((IkReal(-1.00000000000000))*(cj8)*(npz))));
evalcond[3]=((IkReal(-0.0741000000000000))+(((IkReal(-1.00000000000000))*(cj6)*(x627)*(x628)))+(((IkReal(-1.00000000000000))*(x631)))+(((IkReal(-1.00000000000000))*(x630)))+(((IkReal(-0.317969998712222))*(cj8)*(sj6)))+(((IkReal(-0.224440600000000))*(cj8))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j7array[1], cj7array[1], sj7array[1];
bool j7valid[1]={false};
_nj7 = 1;
IkReal x632=((IkReal(100000.000405000))*(cj9));
IkReal x633=((IkReal(100000.000405000))*(sj9));
if( IKabs(((gconst3)*(((((IkReal(-1.00000000000000))*(npx)*(x632)))+(((npy)*(x633))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((IkReal(-7410.00003001050))*(sj8)))+(((IkReal(-1.00000000000000))*(npx)*(sj8)*(x633)))+(((IkReal(-1.00000000000000))*(npy)*(sj8)*(x632)))+(((IkReal(-100000.000405000))*(cj8)*(npz))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j7array[0]=IKatan2(((gconst3)*(((((IkReal(-1.00000000000000))*(npx)*(x632)))+(((npy)*(x633)))))), ((gconst3)*(((((IkReal(-7410.00003001050))*(sj8)))+(((IkReal(-1.00000000000000))*(npx)*(sj8)*(x633)))+(((IkReal(-1.00000000000000))*(npy)*(sj8)*(x632)))+(((IkReal(-100000.000405000))*(cj8)*(npz)))))));
sj7array[0]=IKsin(j7array[0]);
cj7array[0]=IKcos(j7array[0]);
if( j7array[0] > IKPI )
{
    j7array[0]-=IK2PI;
}
else if( j7array[0] < -IKPI )
{    j7array[0]+=IK2PI;
}
j7valid[0] = true;
for(int ij7 = 0; ij7 < 1; ++ij7)
{
if( !j7valid[ij7] )
{
    continue;
}
_ij7[0] = ij7; _ij7[1] = -1;
for(int iij7 = ij7+1; iij7 < 1; ++iij7)
{
if( j7valid[iij7] && IKabs(cj7array[ij7]-cj7array[iij7]) < IKFAST_SOLUTION_THRESH && IKabs(sj7array[ij7]-sj7array[iij7]) < IKFAST_SOLUTION_THRESH )
{
    j7valid[iij7]=false; _ij7[1] = iij7; break; 
}
}
j7 = j7array[ij7]; cj7 = cj7array[ij7]; sj7 = sj7array[ij7];
{
IkReal evalcond[4];
IkReal x634=IKcos(j7);
IkReal x635=((IkReal(0.317969998712222))*(sj8));
IkReal x636=((IkReal(0.317969998712222))*(cj6));
IkReal x637=((IkReal(1.00000000000000))*(npx)*(sj9));
IkReal x638=((IkReal(1.00000000000000))*(cj9)*(npy));
evalcond[0]=((((cj9)*(npx)))+(((x636)*(IKsin(j7))))+(((IkReal(-1.00000000000000))*(npy)*(sj9))));
evalcond[1]=((npz)+(((cj8)*(x634)*(x636)))+(((IkReal(-1.00000000000000))*(sj6)*(x635)))+(((IkReal(-0.224440600000000))*(sj8))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj8)*(x638)))+(((IkReal(-1.00000000000000))*(sj8)*(x637)))+(((IkReal(-1.00000000000000))*(x634)*(x636)))+(((IkReal(-0.0741000000000000))*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(npz))));
evalcond[3]=((IkReal(-0.0741000000000000))+(((IkReal(-1.00000000000000))*(x637)))+(((IkReal(-1.00000000000000))*(x638)))+(((IkReal(-0.317969998712222))*(cj8)*(sj6)))+(((IkReal(-1.00000000000000))*(cj6)*(x634)*(x635)))+(((IkReal(-0.224440600000000))*(cj8))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j9array[2], cj9array[2], sj9array[2];
bool j9valid[2]={false};
_nj9 = 2;
if( IKabs(((IkReal(-0.148200000000000))*(npy))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.148200000000000))*(npx))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x639=((IkReal(1.00000000000000))*(IKatan2(((IkReal(-0.148200000000000))*(npy)), ((IkReal(-0.148200000000000))*(npx)))));
if( (((((IkReal(0.0219632400000000))*((npy)*(npy))))+(((IkReal(0.0219632400000000))*((npx)*(npx)))))) < (IkReal)-0.00001 )
    continue;
if( (((((IKabs(IKabs(IKsqrt(((((IkReal(0.0219632400000000))*((npy)*(npy))))+(((IkReal(0.0219632400000000))*((npx)*(npx)))))))) != 0)?((IkReal)1/(IKabs(IKsqrt(((((IkReal(0.0219632400000000))*((npy)*(npy))))+(((IkReal(0.0219632400000000))*((npx)*(npx))))))))):(IkReal)1.0e30))*(((IkReal(0.145987693009410))+(((IkReal(0.142730754585940))*(sj6)))+(((IkReal(-1.00000000000000))*(pp))))))) < -1-IKFAST_SINCOS_THRESH || (((((IKabs(IKabs(IKsqrt(((((IkReal(0.0219632400000000))*((npy)*(npy))))+(((IkReal(0.0219632400000000))*((npx)*(npx)))))))) != 0)?((IkReal)1/(IKabs(IKsqrt(((((IkReal(0.0219632400000000))*((npy)*(npy))))+(((IkReal(0.0219632400000000))*((npx)*(npx))))))))):(IkReal)1.0e30))*(((IkReal(0.145987693009410))+(((IkReal(0.142730754585940))*(sj6)))+(((IkReal(-1.00000000000000))*(pp))))))) > 1+IKFAST_SINCOS_THRESH )
    continue;
IkReal x640=IKasin(((((IKabs(IKabs(IKsqrt(((((IkReal(0.0219632400000000))*((npy)*(npy))))+(((IkReal(0.0219632400000000))*((npx)*(npx)))))))) != 0)?((IkReal)1/(IKabs(IKsqrt(((((IkReal(0.0219632400000000))*((npy)*(npy))))+(((IkReal(0.0219632400000000))*((npx)*(npx))))))))):(IkReal)1.0e30))*(((IkReal(0.145987693009410))+(((IkReal(0.142730754585940))*(sj6)))+(((IkReal(-1.00000000000000))*(pp)))))));
j9array[0]=((((IkReal(-1.00000000000000))*(x640)))+(((IkReal(-1.00000000000000))*(x639))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
j9array[1]=((IkReal(3.14159265358979))+(((IkReal(-1.00000000000000))*(x639)))+(x640));
sj9array[1]=IKsin(j9array[1]);
cj9array[1]=IKcos(j9array[1]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
if( j9array[1] > IKPI )
{
    j9array[1]-=IK2PI;
}
else if( j9array[1] < -IKPI )
{    j9array[1]+=IK2PI;
}
j9valid[1] = true;
for(int ij9 = 0; ij9 < 2; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 2; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];

{
IkReal dummyeval[1];
IkReal x641=((npx)*(sj9));
IkReal x642=((cj9)*(npy));
dummyeval[0]=((IkReal(1.00000000000000))+(((IkReal(182.122491945633))*((x642)*(x642))))+(((IkReal(182.122491945633))*((x641)*(x641))))+(((IkReal(26.9905533063428))*(x641)))+(((IkReal(26.9905533063428))*(x642)))+(((IkReal(364.244983891266))*(x641)*(x642)))+(((IkReal(182.122491945633))*((npz)*(npz)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal x643=((npx)*(sj9));
IkReal x644=((cj9)*(npy));
dummyeval[0]=((IkReal(1.00000000000000))+(((IkReal(182.122491945633))*((x644)*(x644))))+(((IkReal(182.122491945633))*((x643)*(x643))))+(((IkReal(26.9905533063428))*(x643)))+(((IkReal(26.9905533063428))*(x644)))+(((IkReal(182.122491945633))*((npz)*(npz))))+(((IkReal(364.244983891266))*(x643)*(x644))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj6;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j7array[2], cj7array[2], sj7array[2];
bool j7valid[2]={false};
_nj7 = 2;
sj7array[0]=((IkReal(-3.14495079425732))*(((IKabs(cj6) != 0)?((IkReal)1/(cj6)):(IkReal)1.0e30))*(((((cj9)*(npx)))+(((IkReal(-1.00000000000000))*(npy)*(sj9))))));
if( sj7array[0] >= -1-IKFAST_SINCOS_THRESH && sj7array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j7valid[0] = j7valid[1] = true;
    j7array[0] = IKasin(sj7array[0]);
    cj7array[0] = IKcos(j7array[0]);
    sj7array[1] = sj7array[0];
    j7array[1] = j7array[0] > 0 ? (IKPI-j7array[0]) : (-IKPI-j7array[0]);
    cj7array[1] = -cj7array[0];
}
else if( isnan(sj7array[0]) )
{
    // probably any value will work
    j7valid[0] = true;
    cj7array[0] = 1; sj7array[0] = 0; j7array[0] = 0;
}
for(int ij7 = 0; ij7 < 2; ++ij7)
{
if( !j7valid[ij7] )
{
    continue;
}
_ij7[0] = ij7; _ij7[1] = -1;
for(int iij7 = ij7+1; iij7 < 2; ++iij7)
{
if( j7valid[iij7] && IKabs(cj7array[ij7]-cj7array[iij7]) < IKFAST_SOLUTION_THRESH && IKabs(sj7array[ij7]-sj7array[iij7]) < IKFAST_SOLUTION_THRESH )
{
    j7valid[iij7]=false; _ij7[1] = iij7; break; 
}
}
j7 = j7array[ij7]; cj7 = cj7array[ij7]; sj7 = sj7array[ij7];

{
IkReal dummyeval[1];
IkReal gconst0;
IkReal x645=((cj9)*(npy));
IkReal x646=((npx)*(sj9));
gconst0=IKsign(((IkReal(54908100.4447556))+(((IkReal(20000000162.0000))*(x645)*(x646)))+(((IkReal(10000000081.0000))*((x645)*(x645))))+(((IkReal(1482000012.00420))*(x646)))+(((IkReal(1482000012.00420))*(x645)))+(((IkReal(10000000081.0000))*((npz)*(npz))))+(((IkReal(10000000081.0000))*((x646)*(x646))))));
IkReal x647=((npx)*(sj9));
IkReal x648=((cj9)*(npy));
dummyeval[0]=((IkReal(1.00000000000000))+(((IkReal(364.244983891266))*(x647)*(x648)))+(((IkReal(182.122491945633))*((x647)*(x647))))+(((IkReal(182.122491945633))*((x648)*(x648))))+(((IkReal(26.9905533063428))*(x648)))+(((IkReal(26.9905533063428))*(x647)))+(((IkReal(182.122491945633))*((npz)*(npz)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
IkReal x649=(npz)*(npz);
IkReal x650=(cj6)*(cj6);
IkReal x651=(cj7)*(cj7);
IkReal x652=((npx)*(sj9));
IkReal x653=((cj6)*(cj7));
IkReal x654=((x650)*(x651));
IkReal x655=((cj9)*(npy)*(x654));
dummyeval[0]=((((IkReal(182.122491945633))*(x649)*((sj6)*(sj6))))+(((IkReal(90.7390307394388))*(x649)))+(((IkReal(-26.9905533063428))*(x652)*(x654)))+(((IkReal(-1.00000000000000))*(x654)))+(((IkReal(-364.244983891266))*(x652)*(x655)))+(((IkReal(-26.9905533063428))*(x655)))+(((IkReal(-182.122491945633))*(cj9)*(npy)*(x655)))+(((IkReal(257.104013154194))*(sj6)*(x649)))+(((IkReal(-182.122491945633))*(x654)*((x652)*(x652)))));
dummyeval[1]=((((IkReal(-1.00000000000000))*(x653)))+(((IkReal(-13.4952766531714))*(npz)*(sj6)))+(((IkReal(-13.4952766531714))*(cj9)*(npy)*(x653)))+(((IkReal(-9.52570368736288))*(npz)))+(((IkReal(-13.4952766531714))*(x652)*(x653))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
IkReal x656=((IkReal(1.41672228069352))*(sj6));
IkReal x657=((cj9)*(npy));
IkReal x658=((IkReal(19.1190591186710))*(sj6));
IkReal x659=((npx)*(sj9));
dummyeval[0]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x656))));
dummyeval[1]=((IkReal(1.00000000000000))+(((IkReal(13.4952766531714))*(x657)))+(((IkReal(13.4952766531714))*(x659)))+(((IkReal(-19.1190591186710))*(cj6)*(cj7)*(npz)))+(((x657)*(x658)))+(x656)+(((x658)*(x659))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[3];
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.92522159066969))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((((cj9)*(npx)))+(((IkReal(0.225236181506420))*(sj7)))+(((IkReal(-1.00000000000000))*(npy)*(sj9))));
evalcond[2]=((IkReal(0.0452405276142228))+(((IkReal(-0.148200000000000))*(npx)*(sj9)))+(((IkReal(-1.00000000000000))*(pp)))+(((IkReal(-0.148200000000000))*(cj9)*(npy))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst1;
gconst1=IKsign((cj7)*(cj7));
dummyeval[0]=(cj7)*(cj7);
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
IkReal x660=(cj7)*(cj7);
IkReal x661=((IkReal(13.4952766531714))*(cj7));
IkReal x662=((cj9)*(npy));
IkReal x663=((npx)*(sj9));
IkReal x664=((IkReal(182.122491945633))*(x660));
IkReal x665=((IkReal(26.9905533063428))*(x660));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x662)*(x665)))+(((IkReal(-1.00000000000000))*(x663)*(x665)))+(((IkReal(-1.00000000000000))*(x664)*((x662)*(x662))))+(((IkReal(-364.244983891266))*(x660)*(x662)*(x663)))+(((IkReal(-1.00000000000000))*(x660)))+(((IkReal(-1.00000000000000))*(x664)*((x663)*(x663)))));
dummyeval[1]=((((IkReal(-6.16048136947711e-8))*(npz)))+(((IkReal(-1.00000000000000))*(x661)*(x663)))+(((IkReal(-1.00000000000000))*(x661)*(x662)))+(((IkReal(-1.00000000000000))*(cj7))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
IkReal x666=((cj9)*(npy));
IkReal x667=((npx)*(sj9));
dummyeval[0]=((IkReal(-1.11022302462516e-16))+(((IkReal(5.68434188608080e-14))*(x666)*(x667)))+(((IkReal(-91.7079657937178))*((cj7)*(cj7))*((npz)*(npz))))+(((IkReal(2.84217094304040e-14))*((x666)*(x666))))+(((IkReal(2.84217094304040e-14))*((x667)*(x667)))));
dummyeval[1]=((IkReal(4.58109816747765e-9))+(((IkReal(-13.5431138379503))*(cj7)*(npz)))+(((IkReal(6.18231901228228e-8))*(x666)))+(((IkReal(6.18231901228228e-8))*(x667))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[3];
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j7)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.225236181506420))+(((cj9)*(npx)))+(((IkReal(-1.00000000000000))*(npy)*(sj9))));
evalcond[2]=((IkReal(0.0452405276142228))+(((IkReal(-0.148200000000000))*(npx)*(sj9)))+(((IkReal(-1.00000000000000))*(pp)))+(((IkReal(-0.148200000000000))*(cj9)*(npy))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=IkReal(-4.58109820017133e-9);
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=IkReal(-4.58109820017133e-9);
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=IkReal(-4.58109820017133e-9);
dummyeval[1]=((IkReal(4.58109816747765e-9))+(((IkReal(6.18231901228228e-8))*(cj9)*(npy)))+(((IkReal(6.18231901228228e-8))*(npx)*(sj9))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
if( IKabs(((IkReal(972588162.845684))*(npz))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(((IkReal(7.61884652589195e-11))+(((IkReal(1.02818442648811e-9))*(npx)*(sj9)))+(((IkReal(1.02818442648811e-9))*(cj9)*(npy))))) != 0)?((IkReal)1/(((IkReal(7.61884652589195e-11))+(((IkReal(1.02818442648811e-9))*(npx)*(sj9)))+(((IkReal(1.02818442648811e-9))*(cj9)*(npy)))))):(IkReal)1.0e30))*(((IkReal(1.11130722679764e-18))+((npz)*(npz)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(972588162.845684))*(npz)))+IKsqr(((((IKabs(((IkReal(7.61884652589195e-11))+(((IkReal(1.02818442648811e-9))*(npx)*(sj9)))+(((IkReal(1.02818442648811e-9))*(cj9)*(npy))))) != 0)?((IkReal)1/(((IkReal(7.61884652589195e-11))+(((IkReal(1.02818442648811e-9))*(npx)*(sj9)))+(((IkReal(1.02818442648811e-9))*(cj9)*(npy)))))):(IkReal)1.0e30))*(((IkReal(1.11130722679764e-18))+((npz)*(npz))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((IkReal(972588162.845684))*(npz)), ((((IKabs(((IkReal(7.61884652589195e-11))+(((IkReal(1.02818442648811e-9))*(npx)*(sj9)))+(((IkReal(1.02818442648811e-9))*(cj9)*(npy))))) != 0)?((IkReal)1/(((IkReal(7.61884652589195e-11))+(((IkReal(1.02818442648811e-9))*(npx)*(sj9)))+(((IkReal(1.02818442648811e-9))*(cj9)*(npy)))))):(IkReal)1.0e30))*(((IkReal(1.11130722679764e-18))+((npz)*(npz))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x668=IKsin(j8);
IkReal x669=IKcos(j8);
IkReal x670=((cj9)*(npy));
IkReal x671=((npx)*(sj9));
IkReal x672=((IkReal(1.00000000000000))*(x669));
IkReal x673=((IkReal(1.00000000000000))*(x668));
evalcond[0]=((((IkReal(-1.02818442648811e-9))*(x668)))+(npz));
evalcond[1]=((IkReal(-1.02818441412821e-9))+(((IkReal(-0.0741000000000000))*(x669)))+(((IkReal(-1.00000000000000))*(x670)*(x672)))+(((IkReal(-1.00000000000000))*(x671)*(x672)))+(((npz)*(x668))));
evalcond[2]=((((IkReal(-0.0741000000000000))*(x668)))+(((IkReal(-1.00000000000000))*(x670)*(x673)))+(((IkReal(-1.00000000000000))*(npz)*(x672)))+(((IkReal(-1.00000000000000))*(x671)*(x673))));
evalcond[3]=((IkReal(-0.0741000000000000))+(((IkReal(-1.02818442648811e-9))*(x669)))+(((IkReal(-1.00000000000000))*(x671)))+(((IkReal(-1.00000000000000))*(x670))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
if( IKabs(((IkReal(972588162.845684))*(npz))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-72068782.8668652))+(((IkReal(-972588162.845684))*(npx)*(sj9)))+(((IkReal(-972588162.845684))*(cj9)*(npy))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(972588162.845684))*(npz)))+IKsqr(((IkReal(-72068782.8668652))+(((IkReal(-972588162.845684))*(npx)*(sj9)))+(((IkReal(-972588162.845684))*(cj9)*(npy)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((IkReal(972588162.845684))*(npz)), ((IkReal(-72068782.8668652))+(((IkReal(-972588162.845684))*(npx)*(sj9)))+(((IkReal(-972588162.845684))*(cj9)*(npy)))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x674=IKsin(j8);
IkReal x675=IKcos(j8);
IkReal x676=((cj9)*(npy));
IkReal x677=((npx)*(sj9));
IkReal x678=((IkReal(1.00000000000000))*(x675));
IkReal x679=((IkReal(1.00000000000000))*(x674));
evalcond[0]=((((IkReal(-1.02818442648811e-9))*(x674)))+(npz));
evalcond[1]=((IkReal(-1.02818441412821e-9))+(((IkReal(-1.00000000000000))*(x676)*(x678)))+(((npz)*(x674)))+(((IkReal(-1.00000000000000))*(x677)*(x678)))+(((IkReal(-0.0741000000000000))*(x675))));
evalcond[2]=((((IkReal(-1.00000000000000))*(npz)*(x678)))+(((IkReal(-1.00000000000000))*(x676)*(x679)))+(((IkReal(-1.00000000000000))*(x677)*(x679)))+(((IkReal(-0.0741000000000000))*(x674))));
evalcond[3]=((IkReal(-0.0741000000000000))+(((IkReal(-1.02818442648811e-9))*(x675)))+(((IkReal(-1.00000000000000))*(x676)))+(((IkReal(-1.00000000000000))*(x677))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
if( IKabs(((IkReal(972588162.845684))*(npz))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-72068782.8668652))+(((IkReal(-972588162.845684))*(npx)*(sj9)))+(((IkReal(-972588162.845684))*(cj9)*(npy))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(972588162.845684))*(npz)))+IKsqr(((IkReal(-72068782.8668652))+(((IkReal(-972588162.845684))*(npx)*(sj9)))+(((IkReal(-972588162.845684))*(cj9)*(npy)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((IkReal(972588162.845684))*(npz)), ((IkReal(-72068782.8668652))+(((IkReal(-972588162.845684))*(npx)*(sj9)))+(((IkReal(-972588162.845684))*(cj9)*(npy)))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x680=IKsin(j8);
IkReal x681=IKcos(j8);
IkReal x682=((cj9)*(npy));
IkReal x683=((npx)*(sj9));
IkReal x684=((IkReal(1.00000000000000))*(x681));
IkReal x685=((IkReal(1.00000000000000))*(x680));
evalcond[0]=((npz)+(((IkReal(-1.02818442648811e-9))*(x680))));
evalcond[1]=((IkReal(-1.02818441412821e-9))+(((npz)*(x680)))+(((IkReal(-0.0741000000000000))*(x681)))+(((IkReal(-1.00000000000000))*(x682)*(x684)))+(((IkReal(-1.00000000000000))*(x683)*(x684))));
evalcond[2]=((((IkReal(-1.00000000000000))*(npz)*(x684)))+(((IkReal(-0.0741000000000000))*(x680)))+(((IkReal(-1.00000000000000))*(x682)*(x685)))+(((IkReal(-1.00000000000000))*(x683)*(x685))));
evalcond[3]=((IkReal(-0.0741000000000000))+(((IkReal(-1.02818442648811e-9))*(x681)))+(((IkReal(-1.00000000000000))*(x683)))+(((IkReal(-1.00000000000000))*(x682))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j7)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.225236181506420))+(((cj9)*(npx)))+(((IkReal(-1.00000000000000))*(npy)*(sj9))));
evalcond[2]=((IkReal(0.0452405276142228))+(((IkReal(-0.148200000000000))*(npx)*(sj9)))+(((IkReal(-1.00000000000000))*(pp)))+(((IkReal(-0.148200000000000))*(cj9)*(npy))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=IkReal(-4.58109820017133e-9);
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=IkReal(-4.58109820017133e-9);
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=IkReal(-4.58109820017133e-9);
dummyeval[1]=((IkReal(4.58109816747765e-9))+(((IkReal(6.18231901228228e-8))*(cj9)*(npy)))+(((IkReal(6.18231901228228e-8))*(npx)*(sj9))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
if( IKabs(((IkReal(972588162.845684))*(npz))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(((IkReal(7.61884652589195e-11))+(((IkReal(1.02818442648811e-9))*(npx)*(sj9)))+(((IkReal(1.02818442648811e-9))*(cj9)*(npy))))) != 0)?((IkReal)1/(((IkReal(7.61884652589195e-11))+(((IkReal(1.02818442648811e-9))*(npx)*(sj9)))+(((IkReal(1.02818442648811e-9))*(cj9)*(npy)))))):(IkReal)1.0e30))*(((IkReal(1.11130722679764e-18))+((npz)*(npz)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(972588162.845684))*(npz)))+IKsqr(((((IKabs(((IkReal(7.61884652589195e-11))+(((IkReal(1.02818442648811e-9))*(npx)*(sj9)))+(((IkReal(1.02818442648811e-9))*(cj9)*(npy))))) != 0)?((IkReal)1/(((IkReal(7.61884652589195e-11))+(((IkReal(1.02818442648811e-9))*(npx)*(sj9)))+(((IkReal(1.02818442648811e-9))*(cj9)*(npy)))))):(IkReal)1.0e30))*(((IkReal(1.11130722679764e-18))+((npz)*(npz))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((IkReal(972588162.845684))*(npz)), ((((IKabs(((IkReal(7.61884652589195e-11))+(((IkReal(1.02818442648811e-9))*(npx)*(sj9)))+(((IkReal(1.02818442648811e-9))*(cj9)*(npy))))) != 0)?((IkReal)1/(((IkReal(7.61884652589195e-11))+(((IkReal(1.02818442648811e-9))*(npx)*(sj9)))+(((IkReal(1.02818442648811e-9))*(cj9)*(npy)))))):(IkReal)1.0e30))*(((IkReal(1.11130722679764e-18))+((npz)*(npz))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x686=IKsin(j8);
IkReal x687=IKcos(j8);
IkReal x688=((cj9)*(npy));
IkReal x689=((npx)*(sj9));
IkReal x690=((IkReal(1.00000000000000))*(x687));
IkReal x691=((IkReal(1.00000000000000))*(x686));
evalcond[0]=((npz)+(((IkReal(-1.02818442648811e-9))*(x686))));
evalcond[1]=((IkReal(-1.02818441412821e-9))+(((npz)*(x686)))+(((IkReal(-0.0741000000000000))*(x687)))+(((IkReal(-1.00000000000000))*(x688)*(x690)))+(((IkReal(-1.00000000000000))*(x689)*(x690))));
evalcond[2]=((((IkReal(-0.0741000000000000))*(x686)))+(((IkReal(-1.00000000000000))*(x688)*(x691)))+(((IkReal(-1.00000000000000))*(x689)*(x691)))+(((IkReal(-1.00000000000000))*(npz)*(x690))));
evalcond[3]=((IkReal(-0.0741000000000000))+(((IkReal(-1.02818442648811e-9))*(x687)))+(((IkReal(-1.00000000000000))*(x688)))+(((IkReal(-1.00000000000000))*(x689))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
if( IKabs(((IkReal(972588162.845684))*(npz))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-72068782.8668652))+(((IkReal(-972588162.845684))*(npx)*(sj9)))+(((IkReal(-972588162.845684))*(cj9)*(npy))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(972588162.845684))*(npz)))+IKsqr(((IkReal(-72068782.8668652))+(((IkReal(-972588162.845684))*(npx)*(sj9)))+(((IkReal(-972588162.845684))*(cj9)*(npy)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((IkReal(972588162.845684))*(npz)), ((IkReal(-72068782.8668652))+(((IkReal(-972588162.845684))*(npx)*(sj9)))+(((IkReal(-972588162.845684))*(cj9)*(npy)))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x692=IKsin(j8);
IkReal x693=IKcos(j8);
IkReal x694=((cj9)*(npy));
IkReal x695=((npx)*(sj9));
IkReal x696=((IkReal(1.00000000000000))*(x693));
IkReal x697=((IkReal(1.00000000000000))*(x692));
evalcond[0]=((npz)+(((IkReal(-1.02818442648811e-9))*(x692))));
evalcond[1]=((IkReal(-1.02818441412821e-9))+(((npz)*(x692)))+(((IkReal(-0.0741000000000000))*(x693)))+(((IkReal(-1.00000000000000))*(x695)*(x696)))+(((IkReal(-1.00000000000000))*(x694)*(x696))));
evalcond[2]=((((IkReal(-0.0741000000000000))*(x692)))+(((IkReal(-1.00000000000000))*(x695)*(x697)))+(((IkReal(-1.00000000000000))*(x694)*(x697)))+(((IkReal(-1.00000000000000))*(npz)*(x696))));
evalcond[3]=((IkReal(-0.0741000000000000))+(((IkReal(-1.02818442648811e-9))*(x693)))+(((IkReal(-1.00000000000000))*(x694)))+(((IkReal(-1.00000000000000))*(x695))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
if( IKabs(((IkReal(972588162.845684))*(npz))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-72068782.8668652))+(((IkReal(-972588162.845684))*(npx)*(sj9)))+(((IkReal(-972588162.845684))*(cj9)*(npy))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(972588162.845684))*(npz)))+IKsqr(((IkReal(-72068782.8668652))+(((IkReal(-972588162.845684))*(npx)*(sj9)))+(((IkReal(-972588162.845684))*(cj9)*(npy)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((IkReal(972588162.845684))*(npz)), ((IkReal(-72068782.8668652))+(((IkReal(-972588162.845684))*(npx)*(sj9)))+(((IkReal(-972588162.845684))*(cj9)*(npy)))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x698=IKsin(j8);
IkReal x699=IKcos(j8);
IkReal x700=((cj9)*(npy));
IkReal x701=((npx)*(sj9));
IkReal x702=((IkReal(1.00000000000000))*(x699));
IkReal x703=((IkReal(1.00000000000000))*(x698));
evalcond[0]=((npz)+(((IkReal(-1.02818442648811e-9))*(x698))));
evalcond[1]=((IkReal(-1.02818441412821e-9))+(((npz)*(x698)))+(((IkReal(-0.0741000000000000))*(x699)))+(((IkReal(-1.00000000000000))*(x701)*(x702)))+(((IkReal(-1.00000000000000))*(x700)*(x702))));
evalcond[2]=((((IkReal(-0.0741000000000000))*(x698)))+(((IkReal(-1.00000000000000))*(npz)*(x702)))+(((IkReal(-1.00000000000000))*(x701)*(x703)))+(((IkReal(-1.00000000000000))*(x700)*(x703))));
evalcond[3]=((IkReal(-0.0741000000000000))+(((IkReal(-1.00000000000000))*(x700)))+(((IkReal(-1.00000000000000))*(x701)))+(((IkReal(-1.02818442648811e-9))*(x699))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x704=(npz)*(npz);
IkReal x705=((npx)*(sj9));
IkReal x706=((cj9)*(npy));
IkReal x707=((IkReal(1.28069887262522e+26))*(npz));
IkReal x708=((IkReal(5.76460752303423e+17))*(cj7));
IkReal x709=((IkReal(1.89799570109929e+25))*(npz));
IkReal x710=((cj7)*(x704));
if( IKabs(((IkReal(-1.58251445409123e-34))*(((IKabs(cj7) != 0)?((IkReal)1/((cj7)*(cj7))):(IkReal)1.0e30))*(((IKabs(x704) != 0)?((IkReal)1/(x704)):(IkReal)1.0e30))*(((((IkReal(2.80552510043963e+34))*(x706)*(x710)))+(((IkReal(-1.00000000000000))*(x706)*(x708)))+(((IkReal(2.80552510043963e+34))*(x705)*(x710)))+(((x706)*(x709)))+(((IkReal(7.03207394085159e+23))*(npz)))+(((IkReal(2.07889409942577e+33))*(x710)))+(((IkReal(-6.49715655323886e+24))*(npz)*((cj7)*(cj7))))+(((x707)*((x706)*(x706))))+(((IkReal(-1.00000000000000))*(x705)*(x708)))+(((x707)*((x705)*(x705))))+(((IkReal(3.60287970189640e+16))*(cj7)))+(((IkReal(2.56139774525044e+26))*(npz)*(x705)*(x706)))+(((x705)*(x709))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(3.52929532858729e+17))*(x704)*(((IKabs(((IkReal(26889160.0000000))+(((IkReal(362876640.000000))*(x705)))+(((IkReal(362876640.000000))*(x706)))+(((IkReal(-7.94925003219446e+16))*(cj7)*(npz))))) != 0)?((IkReal)1/(((IkReal(26889160.0000000))+(((IkReal(362876640.000000))*(x705)))+(((IkReal(362876640.000000))*(x706)))+(((IkReal(-7.94925003219446e+16))*(cj7)*(npz)))))):(IkReal)1.0e30)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(-1.58251445409123e-34))*(((IKabs(cj7) != 0)?((IkReal)1/((cj7)*(cj7))):(IkReal)1.0e30))*(((IKabs(x704) != 0)?((IkReal)1/(x704)):(IkReal)1.0e30))*(((((IkReal(2.80552510043963e+34))*(x706)*(x710)))+(((IkReal(-1.00000000000000))*(x706)*(x708)))+(((IkReal(2.80552510043963e+34))*(x705)*(x710)))+(((x706)*(x709)))+(((IkReal(7.03207394085159e+23))*(npz)))+(((IkReal(2.07889409942577e+33))*(x710)))+(((IkReal(-6.49715655323886e+24))*(npz)*((cj7)*(cj7))))+(((x707)*((x706)*(x706))))+(((IkReal(-1.00000000000000))*(x705)*(x708)))+(((x707)*((x705)*(x705))))+(((IkReal(3.60287970189640e+16))*(cj7)))+(((IkReal(2.56139774525044e+26))*(npz)*(x705)*(x706)))+(((x705)*(x709)))))))+IKsqr(((IkReal(3.52929532858729e+17))*(x704)*(((IKabs(((IkReal(26889160.0000000))+(((IkReal(362876640.000000))*(x705)))+(((IkReal(362876640.000000))*(x706)))+(((IkReal(-7.94925003219446e+16))*(cj7)*(npz))))) != 0)?((IkReal)1/(((IkReal(26889160.0000000))+(((IkReal(362876640.000000))*(x705)))+(((IkReal(362876640.000000))*(x706)))+(((IkReal(-7.94925003219446e+16))*(cj7)*(npz)))))):(IkReal)1.0e30))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((IkReal(-1.58251445409123e-34))*(((IKabs(cj7) != 0)?((IkReal)1/((cj7)*(cj7))):(IkReal)1.0e30))*(((IKabs(x704) != 0)?((IkReal)1/(x704)):(IkReal)1.0e30))*(((((IkReal(2.80552510043963e+34))*(x706)*(x710)))+(((IkReal(-1.00000000000000))*(x706)*(x708)))+(((IkReal(2.80552510043963e+34))*(x705)*(x710)))+(((x706)*(x709)))+(((IkReal(7.03207394085159e+23))*(npz)))+(((IkReal(2.07889409942577e+33))*(x710)))+(((IkReal(-6.49715655323886e+24))*(npz)*((cj7)*(cj7))))+(((x707)*((x706)*(x706))))+(((IkReal(-1.00000000000000))*(x705)*(x708)))+(((x707)*((x705)*(x705))))+(((IkReal(3.60287970189640e+16))*(cj7)))+(((IkReal(2.56139774525044e+26))*(npz)*(x705)*(x706)))+(((x705)*(x709)))))), ((IkReal(3.52929532858729e+17))*(x704)*(((IKabs(((IkReal(26889160.0000000))+(((IkReal(362876640.000000))*(x705)))+(((IkReal(362876640.000000))*(x706)))+(((IkReal(-7.94925003219446e+16))*(cj7)*(npz))))) != 0)?((IkReal)1/(((IkReal(26889160.0000000))+(((IkReal(362876640.000000))*(x705)))+(((IkReal(362876640.000000))*(x706)))+(((IkReal(-7.94925003219446e+16))*(cj7)*(npz)))))):(IkReal)1.0e30))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x711=IKsin(j8);
IkReal x712=IKcos(j8);
IkReal x713=((cj9)*(npy));
IkReal x714=((IkReal(0.225236181506420))*(cj7));
IkReal x715=((npx)*(sj9));
IkReal x716=((IkReal(1.00000000000000))*(x712));
IkReal x717=((IkReal(1.00000000000000))*(x711));
evalcond[0]=((((IkReal(-1.02818442648811e-9))*(x711)))+(npz)+(((x712)*(x714))));
evalcond[1]=((IkReal(-1.02818441412821e-9))+(((npz)*(x711)))+(((IkReal(-0.0741000000000000))*(x712)))+(((IkReal(-1.00000000000000))*(x713)*(x716)))+(((IkReal(-1.00000000000000))*(x715)*(x716))));
evalcond[2]=((((IkReal(-0.0741000000000000))*(x711)))+(((IkReal(-1.00000000000000))*(npz)*(x716)))+(((IkReal(-1.00000000000000))*(x714)))+(((IkReal(-1.00000000000000))*(x713)*(x717)))+(((IkReal(-1.00000000000000))*(x715)*(x717))));
evalcond[3]=((IkReal(-0.0741000000000000))+(((IkReal(-1.02818442648811e-9))*(x712)))+(((IkReal(-1.00000000000000))*(x711)*(x714)))+(((IkReal(-1.00000000000000))*(x713)))+(((IkReal(-1.00000000000000))*(x715))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x718=(cj7)*(cj7)*(cj7);
IkReal x719=(npz)*(npz);
IkReal x720=(cj7)*(cj7);
IkReal x721=((cj9)*(npy));
IkReal x722=((npx)*(sj9));
IkReal x723=((IkReal(3.52929532858729e+17))*(npz));
IkReal x724=((IkReal(7.94925003219446e+16))*(cj7));
IkReal x725=((IkReal(7.87097096168706e+48))*(x720));
IkReal x726=((cj7)*(x719));
IkReal x727=((IkReal(1.77282744415831e+48))*(x718));
IkReal x728=((IkReal(1.16647789652202e+48))*(x720));
if( IKabs(((((IKabs(((((IkReal(-1.00000000000000))*(x725)*((x721)*(x721))))+(((IkReal(-1.00000000000000))*(x725)*((x722)*(x722))))+(((IkReal(-1.57419419233741e+49))*(x720)*(x721)*(x722)))+(((IkReal(-4.32180060661409e+46))*(x720)))+(((IkReal(-1.00000000000000))*(x722)*(x728)))+(((IkReal(-1.00000000000000))*(x721)*(x728))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*(x725)*((x721)*(x721))))+(((IkReal(-1.00000000000000))*(x725)*((x722)*(x722))))+(((IkReal(-1.57419419233741e+49))*(x720)*(x721)*(x722)))+(((IkReal(-4.32180060661409e+46))*(x720)))+(((IkReal(-1.00000000000000))*(x722)*(x728)))+(((IkReal(-1.00000000000000))*(x721)*(x728)))))):(IkReal)1.0e30))*(((((x721)*(x727)))+(((IkReal(-8.09280961668571e+39))*(npz)*(x720)))+(((IkReal(-3.49454111193176e+49))*(x721)*(x726)))+(((x722)*(x727)))+(((IkReal(-2.58945496394143e+48))*(x726)))+(((IkReal(1.59522894846391e+41))*((npz)*(npz)*(npz))))+(((IkReal(1.31366513612130e+47))*(x718)))+(((IkReal(-3.49454111193176e+49))*(x722)*(x726))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(((((IkReal(-362876640.000000))*(npz)))+(((IkReal(-1.00000000000000))*(x722)*(x724)))+(((IkReal(-5.89039427385610e+15))*(cj7)))+(((IkReal(-1.00000000000000))*(x721)*(x724))))) != 0)?((IkReal)1/(((((IkReal(-362876640.000000))*(npz)))+(((IkReal(-1.00000000000000))*(x722)*(x724)))+(((IkReal(-5.89039427385610e+15))*(cj7)))+(((IkReal(-1.00000000000000))*(x721)*(x724)))))):(IkReal)1.0e30))*(((((x721)*(x723)))+(((x722)*(x723)))+(((IkReal(81732950.0000000))*(cj7)))+(((IkReal(2.61520783848318e+16))*(npz))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((((IkReal(-1.00000000000000))*(x725)*((x721)*(x721))))+(((IkReal(-1.00000000000000))*(x725)*((x722)*(x722))))+(((IkReal(-1.57419419233741e+49))*(x720)*(x721)*(x722)))+(((IkReal(-4.32180060661409e+46))*(x720)))+(((IkReal(-1.00000000000000))*(x722)*(x728)))+(((IkReal(-1.00000000000000))*(x721)*(x728))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*(x725)*((x721)*(x721))))+(((IkReal(-1.00000000000000))*(x725)*((x722)*(x722))))+(((IkReal(-1.57419419233741e+49))*(x720)*(x721)*(x722)))+(((IkReal(-4.32180060661409e+46))*(x720)))+(((IkReal(-1.00000000000000))*(x722)*(x728)))+(((IkReal(-1.00000000000000))*(x721)*(x728)))))):(IkReal)1.0e30))*(((((x721)*(x727)))+(((IkReal(-8.09280961668571e+39))*(npz)*(x720)))+(((IkReal(-3.49454111193176e+49))*(x721)*(x726)))+(((x722)*(x727)))+(((IkReal(-2.58945496394143e+48))*(x726)))+(((IkReal(1.59522894846391e+41))*((npz)*(npz)*(npz))))+(((IkReal(1.31366513612130e+47))*(x718)))+(((IkReal(-3.49454111193176e+49))*(x722)*(x726)))))))+IKsqr(((((IKabs(((((IkReal(-362876640.000000))*(npz)))+(((IkReal(-1.00000000000000))*(x722)*(x724)))+(((IkReal(-5.89039427385610e+15))*(cj7)))+(((IkReal(-1.00000000000000))*(x721)*(x724))))) != 0)?((IkReal)1/(((((IkReal(-362876640.000000))*(npz)))+(((IkReal(-1.00000000000000))*(x722)*(x724)))+(((IkReal(-5.89039427385610e+15))*(cj7)))+(((IkReal(-1.00000000000000))*(x721)*(x724)))))):(IkReal)1.0e30))*(((((x721)*(x723)))+(((x722)*(x723)))+(((IkReal(81732950.0000000))*(cj7)))+(((IkReal(2.61520783848318e+16))*(npz)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((((IKabs(((((IkReal(-1.00000000000000))*(x725)*((x721)*(x721))))+(((IkReal(-1.00000000000000))*(x725)*((x722)*(x722))))+(((IkReal(-1.57419419233741e+49))*(x720)*(x721)*(x722)))+(((IkReal(-4.32180060661409e+46))*(x720)))+(((IkReal(-1.00000000000000))*(x722)*(x728)))+(((IkReal(-1.00000000000000))*(x721)*(x728))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*(x725)*((x721)*(x721))))+(((IkReal(-1.00000000000000))*(x725)*((x722)*(x722))))+(((IkReal(-1.57419419233741e+49))*(x720)*(x721)*(x722)))+(((IkReal(-4.32180060661409e+46))*(x720)))+(((IkReal(-1.00000000000000))*(x722)*(x728)))+(((IkReal(-1.00000000000000))*(x721)*(x728)))))):(IkReal)1.0e30))*(((((x721)*(x727)))+(((IkReal(-8.09280961668571e+39))*(npz)*(x720)))+(((IkReal(-3.49454111193176e+49))*(x721)*(x726)))+(((x722)*(x727)))+(((IkReal(-2.58945496394143e+48))*(x726)))+(((IkReal(1.59522894846391e+41))*((npz)*(npz)*(npz))))+(((IkReal(1.31366513612130e+47))*(x718)))+(((IkReal(-3.49454111193176e+49))*(x722)*(x726)))))), ((((IKabs(((((IkReal(-362876640.000000))*(npz)))+(((IkReal(-1.00000000000000))*(x722)*(x724)))+(((IkReal(-5.89039427385610e+15))*(cj7)))+(((IkReal(-1.00000000000000))*(x721)*(x724))))) != 0)?((IkReal)1/(((((IkReal(-362876640.000000))*(npz)))+(((IkReal(-1.00000000000000))*(x722)*(x724)))+(((IkReal(-5.89039427385610e+15))*(cj7)))+(((IkReal(-1.00000000000000))*(x721)*(x724)))))):(IkReal)1.0e30))*(((((x721)*(x723)))+(((x722)*(x723)))+(((IkReal(81732950.0000000))*(cj7)))+(((IkReal(2.61520783848318e+16))*(npz)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x729=IKsin(j8);
IkReal x730=IKcos(j8);
IkReal x731=((cj9)*(npy));
IkReal x732=((IkReal(0.225236181506420))*(cj7));
IkReal x733=((npx)*(sj9));
IkReal x734=((IkReal(1.00000000000000))*(x730));
IkReal x735=((IkReal(1.00000000000000))*(x729));
evalcond[0]=((npz)+(((IkReal(-1.02818442648811e-9))*(x729)))+(((x730)*(x732))));
evalcond[1]=((IkReal(-1.02818441412821e-9))+(((IkReal(-1.00000000000000))*(x731)*(x734)))+(((npz)*(x729)))+(((IkReal(-0.0741000000000000))*(x730)))+(((IkReal(-1.00000000000000))*(x733)*(x734))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x731)*(x735)))+(((IkReal(-1.00000000000000))*(npz)*(x734)))+(((IkReal(-0.0741000000000000))*(x729)))+(((IkReal(-1.00000000000000))*(x733)*(x735)))+(((IkReal(-1.00000000000000))*(x732))));
evalcond[3]=((IkReal(-0.0741000000000000))+(((IkReal(-1.00000000000000))*(x733)))+(((IkReal(-1.00000000000000))*(x731)))+(((IkReal(-1.00000000000000))*(x729)*(x732)))+(((IkReal(-1.02818442648811e-9))*(x730))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x736=((IkReal(2.80552507771488e+24))*(cj7));
IkReal x737=((npx)*(sj9));
IkReal x738=((cj9)*(npy));
if( IKabs(((gconst1)*(((((IkReal(1.28069884968960e+16))*(npz)))+(((IkReal(-1.00000000000000))*(x736)*(x737)))+(((IkReal(-1.00000000000000))*(x736)*(x738)))+(((IkReal(-2.07889408258672e+23))*(cj7))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((IkReal(-948997830443008.))+(((IkReal(-1.28069884968960e+16))*(x738)))+(((IkReal(-1.28069884968960e+16))*(x737)))+(((IkReal(-1.00000000000000))*(npz)*(x736))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j8array[0]=IKatan2(((gconst1)*(((((IkReal(1.28069884968960e+16))*(npz)))+(((IkReal(-1.00000000000000))*(x736)*(x737)))+(((IkReal(-1.00000000000000))*(x736)*(x738)))+(((IkReal(-2.07889408258672e+23))*(cj7)))))), ((gconst1)*(((IkReal(-948997830443008.))+(((IkReal(-1.28069884968960e+16))*(x738)))+(((IkReal(-1.28069884968960e+16))*(x737)))+(((IkReal(-1.00000000000000))*(npz)*(x736)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x739=IKsin(j8);
IkReal x740=IKcos(j8);
IkReal x741=((cj9)*(npy));
IkReal x742=((IkReal(0.225236181506420))*(cj7));
IkReal x743=((npx)*(sj9));
IkReal x744=((IkReal(1.00000000000000))*(x740));
IkReal x745=((IkReal(1.00000000000000))*(x739));
evalcond[0]=((npz)+(((x740)*(x742)))+(((IkReal(-1.02818442648811e-9))*(x739))));
evalcond[1]=((IkReal(-1.02818441412821e-9))+(((npz)*(x739)))+(((IkReal(-1.00000000000000))*(x741)*(x744)))+(((IkReal(-1.00000000000000))*(x743)*(x744)))+(((IkReal(-0.0741000000000000))*(x740))));
evalcond[2]=((((IkReal(-0.0741000000000000))*(x739)))+(((IkReal(-1.00000000000000))*(x741)*(x745)))+(((IkReal(-1.00000000000000))*(x742)))+(((IkReal(-1.00000000000000))*(x743)*(x745)))+(((IkReal(-1.00000000000000))*(npz)*(x744))));
evalcond[3]=((IkReal(-0.0741000000000000))+(((IkReal(-1.02818442648811e-9))*(x740)))+(((IkReal(-1.00000000000000))*(x743)))+(((IkReal(-1.00000000000000))*(x741)))+(((IkReal(-1.00000000000000))*(x739)*(x742))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(-0.783628937079892))+(j6)), IkReal(6.28318530717959))));
evalcond[1]=((((cj9)*(npx)))+(((IkReal(-0.225236181506420))*(sj7)))+(((IkReal(-1.00000000000000))*(npy)*(sj9))));
evalcond[2]=((IkReal(0.0452405276142228))+(((IkReal(-0.148200000000000))*(npx)*(sj9)))+(((IkReal(-1.00000000000000))*(pp)))+(((IkReal(-0.148200000000000))*(cj9)*(npy))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst2;
gconst2=IKsign(((IkReal(-55836672.0000000))+(((IkReal(-6.31905755625000e+23))*((cj7)*(cj7))))));
dummyeval[0]=((IkReal(-1.00000000000000))*((cj7)*(cj7)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
IkReal x746=(cj7)*(cj7);
IkReal x747=((IkReal(13.4952766531714))*(cj7));
IkReal x748=((cj9)*(npy));
IkReal x749=((npx)*(sj9));
IkReal x750=((IkReal(182.122491945633))*(x746));
IkReal x751=((IkReal(26.9905533063428))*(x746));
dummyeval[0]=((((IkReal(-364.244983891266))*(x746)*(x748)*(x749)))+(((IkReal(-1.00000000000000))*(x750)*((x749)*(x749))))+(((IkReal(-1.00000000000000))*(x750)*((x748)*(x748))))+(((IkReal(-1.00000000000000))*(x746)))+(((IkReal(-1.00000000000000))*(x749)*(x751)))+(((IkReal(-1.00000000000000))*(x748)*(x751))));
dummyeval[1]=((((IkReal(6.16048136947711e-8))*(npz)))+(((IkReal(-1.00000000000000))*(x747)*(x748)))+(((IkReal(-1.00000000000000))*(x747)*(x749)))+(((IkReal(-1.00000000000000))*(cj7))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=IkReal(-4.58109820017133e-9);
dummyeval[1]=((IkReal(4.58109816747765e-9))+(((IkReal(6.18231901228228e-8))*(cj9)*(npy)))+(((IkReal(13.5431138379503))*(cj7)*(npz)))+(((IkReal(6.18231901228228e-8))*(npx)*(sj9))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[3];
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j7)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.225236181506420))+(((cj9)*(npx)))+(((IkReal(-1.00000000000000))*(npy)*(sj9))));
evalcond[2]=((IkReal(0.0452405276142228))+(((IkReal(-0.148200000000000))*(npx)*(sj9)))+(((IkReal(-1.00000000000000))*(pp)))+(((IkReal(-0.148200000000000))*(cj9)*(npy))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=IkReal(-4.58109820017133e-9);
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=IkReal(-4.58109820017133e-9);
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=IkReal(-4.58109820017133e-9);
dummyeval[1]=((IkReal(4.58109816747765e-9))+(((IkReal(6.18231901228228e-8))*(cj9)*(npy)))+(((IkReal(6.18231901228228e-8))*(npx)*(sj9))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
if( IKabs(((IkReal(972588162.845684))*(npz))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(((IkReal(7.61884652589195e-11))+(((IkReal(1.02818442648811e-9))*(npx)*(sj9)))+(((IkReal(1.02818442648811e-9))*(cj9)*(npy))))) != 0)?((IkReal)1/(((IkReal(7.61884652589195e-11))+(((IkReal(1.02818442648811e-9))*(npx)*(sj9)))+(((IkReal(1.02818442648811e-9))*(cj9)*(npy)))))):(IkReal)1.0e30))*(((IkReal(1.11130722679764e-18))+((npz)*(npz)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(972588162.845684))*(npz)))+IKsqr(((((IKabs(((IkReal(7.61884652589195e-11))+(((IkReal(1.02818442648811e-9))*(npx)*(sj9)))+(((IkReal(1.02818442648811e-9))*(cj9)*(npy))))) != 0)?((IkReal)1/(((IkReal(7.61884652589195e-11))+(((IkReal(1.02818442648811e-9))*(npx)*(sj9)))+(((IkReal(1.02818442648811e-9))*(cj9)*(npy)))))):(IkReal)1.0e30))*(((IkReal(1.11130722679764e-18))+((npz)*(npz))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((IkReal(972588162.845684))*(npz)), ((((IKabs(((IkReal(7.61884652589195e-11))+(((IkReal(1.02818442648811e-9))*(npx)*(sj9)))+(((IkReal(1.02818442648811e-9))*(cj9)*(npy))))) != 0)?((IkReal)1/(((IkReal(7.61884652589195e-11))+(((IkReal(1.02818442648811e-9))*(npx)*(sj9)))+(((IkReal(1.02818442648811e-9))*(cj9)*(npy)))))):(IkReal)1.0e30))*(((IkReal(1.11130722679764e-18))+((npz)*(npz))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x752=IKsin(j8);
IkReal x753=IKcos(j8);
IkReal x754=((cj9)*(npy));
IkReal x755=((npx)*(sj9));
IkReal x756=((IkReal(1.00000000000000))*(x753));
IkReal x757=((IkReal(1.00000000000000))*(x752));
evalcond[0]=((npz)+(((IkReal(-1.02818442648811e-9))*(x752))));
evalcond[1]=((IkReal(-1.02818441412821e-9))+(((npz)*(x752)))+(((IkReal(-0.0741000000000000))*(x753)))+(((IkReal(-1.00000000000000))*(x754)*(x756)))+(((IkReal(-1.00000000000000))*(x755)*(x756))));
evalcond[2]=((((IkReal(-0.0741000000000000))*(x752)))+(((IkReal(-1.00000000000000))*(npz)*(x756)))+(((IkReal(-1.00000000000000))*(x754)*(x757)))+(((IkReal(-1.00000000000000))*(x755)*(x757))));
evalcond[3]=((IkReal(-0.0741000000000000))+(((IkReal(-1.00000000000000))*(x755)))+(((IkReal(-1.00000000000000))*(x754)))+(((IkReal(-1.02818442648811e-9))*(x753))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
if( IKabs(((IkReal(972588162.845684))*(npz))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-72068782.8668652))+(((IkReal(-972588162.845684))*(npx)*(sj9)))+(((IkReal(-972588162.845684))*(cj9)*(npy))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(972588162.845684))*(npz)))+IKsqr(((IkReal(-72068782.8668652))+(((IkReal(-972588162.845684))*(npx)*(sj9)))+(((IkReal(-972588162.845684))*(cj9)*(npy)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((IkReal(972588162.845684))*(npz)), ((IkReal(-72068782.8668652))+(((IkReal(-972588162.845684))*(npx)*(sj9)))+(((IkReal(-972588162.845684))*(cj9)*(npy)))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x758=IKsin(j8);
IkReal x759=IKcos(j8);
IkReal x760=((cj9)*(npy));
IkReal x761=((npx)*(sj9));
IkReal x762=((IkReal(1.00000000000000))*(x759));
IkReal x763=((IkReal(1.00000000000000))*(x758));
evalcond[0]=((npz)+(((IkReal(-1.02818442648811e-9))*(x758))));
evalcond[1]=((IkReal(-1.02818441412821e-9))+(((npz)*(x758)))+(((IkReal(-0.0741000000000000))*(x759)))+(((IkReal(-1.00000000000000))*(x760)*(x762)))+(((IkReal(-1.00000000000000))*(x761)*(x762))));
evalcond[2]=((((IkReal(-0.0741000000000000))*(x758)))+(((IkReal(-1.00000000000000))*(npz)*(x762)))+(((IkReal(-1.00000000000000))*(x760)*(x763)))+(((IkReal(-1.00000000000000))*(x761)*(x763))));
evalcond[3]=((IkReal(-0.0741000000000000))+(((IkReal(-1.00000000000000))*(x760)))+(((IkReal(-1.00000000000000))*(x761)))+(((IkReal(-1.02818442648811e-9))*(x759))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
if( IKabs(((IkReal(972588162.845684))*(npz))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-72068782.8668652))+(((IkReal(-972588162.845684))*(npx)*(sj9)))+(((IkReal(-972588162.845684))*(cj9)*(npy))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(972588162.845684))*(npz)))+IKsqr(((IkReal(-72068782.8668652))+(((IkReal(-972588162.845684))*(npx)*(sj9)))+(((IkReal(-972588162.845684))*(cj9)*(npy)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((IkReal(972588162.845684))*(npz)), ((IkReal(-72068782.8668652))+(((IkReal(-972588162.845684))*(npx)*(sj9)))+(((IkReal(-972588162.845684))*(cj9)*(npy)))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x764=IKsin(j8);
IkReal x765=IKcos(j8);
IkReal x766=((cj9)*(npy));
IkReal x767=((npx)*(sj9));
IkReal x768=((IkReal(1.00000000000000))*(x765));
IkReal x769=((IkReal(1.00000000000000))*(x764));
evalcond[0]=((npz)+(((IkReal(-1.02818442648811e-9))*(x764))));
evalcond[1]=((IkReal(-1.02818441412821e-9))+(((npz)*(x764)))+(((IkReal(-1.00000000000000))*(x766)*(x768)))+(((IkReal(-1.00000000000000))*(x767)*(x768)))+(((IkReal(-0.0741000000000000))*(x765))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x766)*(x769)))+(((IkReal(-1.00000000000000))*(x767)*(x769)))+(((IkReal(-1.00000000000000))*(npz)*(x768)))+(((IkReal(-0.0741000000000000))*(x764))));
evalcond[3]=((IkReal(-0.0741000000000000))+(((IkReal(-1.02818442648811e-9))*(x765)))+(((IkReal(-1.00000000000000))*(x766)))+(((IkReal(-1.00000000000000))*(x767))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j7)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.225236181506420))+(((cj9)*(npx)))+(((IkReal(-1.00000000000000))*(npy)*(sj9))));
evalcond[2]=((IkReal(0.0452405276142228))+(((IkReal(-0.148200000000000))*(npx)*(sj9)))+(((IkReal(-1.00000000000000))*(pp)))+(((IkReal(-0.148200000000000))*(cj9)*(npy))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=IkReal(-4.58109820017133e-9);
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=IkReal(-4.58109820017133e-9);
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=IkReal(-4.58109820017133e-9);
dummyeval[1]=((IkReal(4.58109816747765e-9))+(((IkReal(6.18231901228228e-8))*(cj9)*(npy)))+(((IkReal(6.18231901228228e-8))*(npx)*(sj9))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
if( IKabs(((IkReal(972588162.845684))*(npz))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(((IkReal(7.61884652589195e-11))+(((IkReal(1.02818442648811e-9))*(npx)*(sj9)))+(((IkReal(1.02818442648811e-9))*(cj9)*(npy))))) != 0)?((IkReal)1/(((IkReal(7.61884652589195e-11))+(((IkReal(1.02818442648811e-9))*(npx)*(sj9)))+(((IkReal(1.02818442648811e-9))*(cj9)*(npy)))))):(IkReal)1.0e30))*(((IkReal(1.11130722679764e-18))+((npz)*(npz)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(972588162.845684))*(npz)))+IKsqr(((((IKabs(((IkReal(7.61884652589195e-11))+(((IkReal(1.02818442648811e-9))*(npx)*(sj9)))+(((IkReal(1.02818442648811e-9))*(cj9)*(npy))))) != 0)?((IkReal)1/(((IkReal(7.61884652589195e-11))+(((IkReal(1.02818442648811e-9))*(npx)*(sj9)))+(((IkReal(1.02818442648811e-9))*(cj9)*(npy)))))):(IkReal)1.0e30))*(((IkReal(1.11130722679764e-18))+((npz)*(npz))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((IkReal(972588162.845684))*(npz)), ((((IKabs(((IkReal(7.61884652589195e-11))+(((IkReal(1.02818442648811e-9))*(npx)*(sj9)))+(((IkReal(1.02818442648811e-9))*(cj9)*(npy))))) != 0)?((IkReal)1/(((IkReal(7.61884652589195e-11))+(((IkReal(1.02818442648811e-9))*(npx)*(sj9)))+(((IkReal(1.02818442648811e-9))*(cj9)*(npy)))))):(IkReal)1.0e30))*(((IkReal(1.11130722679764e-18))+((npz)*(npz))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x770=IKsin(j8);
IkReal x771=IKcos(j8);
IkReal x772=((cj9)*(npy));
IkReal x773=((npx)*(sj9));
IkReal x774=((IkReal(1.00000000000000))*(x771));
IkReal x775=((IkReal(1.00000000000000))*(x770));
evalcond[0]=((npz)+(((IkReal(-1.02818442648811e-9))*(x770))));
evalcond[1]=((IkReal(-1.02818441412821e-9))+(((IkReal(-0.0741000000000000))*(x771)))+(((IkReal(-1.00000000000000))*(x772)*(x774)))+(((IkReal(-1.00000000000000))*(x773)*(x774)))+(((npz)*(x770))));
evalcond[2]=((((IkReal(-1.00000000000000))*(npz)*(x774)))+(((IkReal(-0.0741000000000000))*(x770)))+(((IkReal(-1.00000000000000))*(x772)*(x775)))+(((IkReal(-1.00000000000000))*(x773)*(x775))));
evalcond[3]=((IkReal(-0.0741000000000000))+(((IkReal(-1.02818442648811e-9))*(x771)))+(((IkReal(-1.00000000000000))*(x773)))+(((IkReal(-1.00000000000000))*(x772))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
if( IKabs(((IkReal(972588162.845684))*(npz))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-72068782.8668652))+(((IkReal(-972588162.845684))*(npx)*(sj9)))+(((IkReal(-972588162.845684))*(cj9)*(npy))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(972588162.845684))*(npz)))+IKsqr(((IkReal(-72068782.8668652))+(((IkReal(-972588162.845684))*(npx)*(sj9)))+(((IkReal(-972588162.845684))*(cj9)*(npy)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((IkReal(972588162.845684))*(npz)), ((IkReal(-72068782.8668652))+(((IkReal(-972588162.845684))*(npx)*(sj9)))+(((IkReal(-972588162.845684))*(cj9)*(npy)))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x776=IKsin(j8);
IkReal x777=IKcos(j8);
IkReal x778=((cj9)*(npy));
IkReal x779=((npx)*(sj9));
IkReal x780=((IkReal(1.00000000000000))*(x777));
IkReal x781=((IkReal(1.00000000000000))*(x776));
evalcond[0]=((npz)+(((IkReal(-1.02818442648811e-9))*(x776))));
evalcond[1]=((IkReal(-1.02818441412821e-9))+(((IkReal(-0.0741000000000000))*(x777)))+(((IkReal(-1.00000000000000))*(x778)*(x780)))+(((npz)*(x776)))+(((IkReal(-1.00000000000000))*(x779)*(x780))));
evalcond[2]=((((IkReal(-0.0741000000000000))*(x776)))+(((IkReal(-1.00000000000000))*(npz)*(x780)))+(((IkReal(-1.00000000000000))*(x778)*(x781)))+(((IkReal(-1.00000000000000))*(x779)*(x781))));
evalcond[3]=((IkReal(-0.0741000000000000))+(((IkReal(-1.02818442648811e-9))*(x777)))+(((IkReal(-1.00000000000000))*(x779)))+(((IkReal(-1.00000000000000))*(x778))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
if( IKabs(((IkReal(972588162.845684))*(npz))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-72068782.8668652))+(((IkReal(-972588162.845684))*(npx)*(sj9)))+(((IkReal(-972588162.845684))*(cj9)*(npy))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(972588162.845684))*(npz)))+IKsqr(((IkReal(-72068782.8668652))+(((IkReal(-972588162.845684))*(npx)*(sj9)))+(((IkReal(-972588162.845684))*(cj9)*(npy)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((IkReal(972588162.845684))*(npz)), ((IkReal(-72068782.8668652))+(((IkReal(-972588162.845684))*(npx)*(sj9)))+(((IkReal(-972588162.845684))*(cj9)*(npy)))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x782=IKsin(j8);
IkReal x783=IKcos(j8);
IkReal x784=((cj9)*(npy));
IkReal x785=((npx)*(sj9));
IkReal x786=((IkReal(1.00000000000000))*(x783));
IkReal x787=((IkReal(1.00000000000000))*(x782));
evalcond[0]=((((IkReal(-1.02818442648811e-9))*(x782)))+(npz));
evalcond[1]=((IkReal(-1.02818441412821e-9))+(((IkReal(-0.0741000000000000))*(x783)))+(((IkReal(-1.00000000000000))*(x784)*(x786)))+(((IkReal(-1.00000000000000))*(x785)*(x786)))+(((npz)*(x782))));
evalcond[2]=((((IkReal(-1.00000000000000))*(npz)*(x786)))+(((IkReal(-0.0741000000000000))*(x782)))+(((IkReal(-1.00000000000000))*(x784)*(x787)))+(((IkReal(-1.00000000000000))*(x785)*(x787))));
evalcond[3]=((IkReal(-0.0741000000000000))+(((IkReal(-1.02818442648811e-9))*(x783)))+(((IkReal(-1.00000000000000))*(x784)))+(((IkReal(-1.00000000000000))*(x785))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x788=(npz)*(npz);
IkReal x789=((IKabs(((IkReal(26889160.0000000))+(((IkReal(7.94925003219446e+16))*(cj7)*(npz)))+(((IkReal(362876640.000000))*(npx)*(sj9)))+(((IkReal(362876640.000000))*(cj9)*(npy))))) != 0)?((IkReal)1/(((IkReal(26889160.0000000))+(((IkReal(7.94925003219446e+16))*(cj7)*(npz)))+(((IkReal(362876640.000000))*(npx)*(sj9)))+(((IkReal(362876640.000000))*(cj9)*(npy)))))):(IkReal)1.0e30);
IkReal x790=((x788)*(x789));
if( IKabs(((((IkReal(1073741824.00000))*(cj7)*(x789)))+(((IkReal(-7.73134648481301e+25))*(cj7)*(x790)))+(((IkReal(972588162.845684))*(npz))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(3.52929532858729e+17))*(x790))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(1073741824.00000))*(cj7)*(x789)))+(((IkReal(-7.73134648481301e+25))*(cj7)*(x790)))+(((IkReal(972588162.845684))*(npz)))))+IKsqr(((IkReal(3.52929532858729e+17))*(x790)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((((IkReal(1073741824.00000))*(cj7)*(x789)))+(((IkReal(-7.73134648481301e+25))*(cj7)*(x790)))+(((IkReal(972588162.845684))*(npz)))), ((IkReal(3.52929532858729e+17))*(x790)));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x791=IKsin(j8);
IkReal x792=IKcos(j8);
IkReal x793=((cj9)*(npy));
IkReal x794=((IkReal(0.225236181506420))*(cj7));
IkReal x795=((npx)*(sj9));
IkReal x796=((IkReal(1.00000000000000))*(x792));
IkReal x797=((IkReal(1.00000000000000))*(x791));
evalcond[0]=((((IkReal(-1.00000000000000))*(x792)*(x794)))+(((IkReal(-1.02818442648811e-9))*(x791)))+(npz));
evalcond[1]=((IkReal(-1.02818441412821e-9))+(((IkReal(-1.00000000000000))*(x795)*(x796)))+(((IkReal(-1.00000000000000))*(x793)*(x796)))+(((IkReal(-0.0741000000000000))*(x792)))+(((npz)*(x791))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x795)*(x797)))+(((IkReal(-1.00000000000000))*(x793)*(x797)))+(((IkReal(-1.00000000000000))*(npz)*(x796)))+(((IkReal(-0.0741000000000000))*(x791)))+(x794));
evalcond[3]=((IkReal(-0.0741000000000000))+(((IkReal(-1.02818442648811e-9))*(x792)))+(((IkReal(-1.00000000000000))*(x795)))+(((IkReal(-1.00000000000000))*(x793)))+(((x791)*(x794))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x798=(npz)*(npz);
IkReal x799=(cj7)*(cj7)*(cj7);
IkReal x800=(cj7)*(cj7);
IkReal x801=((npx)*(sj9));
IkReal x802=((IkReal(3.52929532858729e+17))*(npz));
IkReal x803=((cj9)*(npy));
IkReal x804=((IkReal(7.94925003219446e+16))*(cj7));
IkReal x805=((IkReal(1.16647789652202e+48))*(x800));
IkReal x806=((IkReal(7.87097096168706e+48))*(x800));
IkReal x807=((cj7)*(x798));
IkReal x808=((IkReal(1.77282744415831e+48))*(x799));
if( IKabs(((((IKabs(((((IkReal(-1.00000000000000))*(x806)*((x803)*(x803))))+(((IkReal(-1.57419419233741e+49))*(x800)*(x801)*(x803)))+(((IkReal(-1.00000000000000))*(x806)*((x801)*(x801))))+(((IkReal(-4.32180060661409e+46))*(x800)))+(((IkReal(-1.00000000000000))*(x803)*(x805)))+(((IkReal(-1.00000000000000))*(x801)*(x805))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*(x806)*((x803)*(x803))))+(((IkReal(-1.57419419233741e+49))*(x800)*(x801)*(x803)))+(((IkReal(-1.00000000000000))*(x806)*((x801)*(x801))))+(((IkReal(-4.32180060661409e+46))*(x800)))+(((IkReal(-1.00000000000000))*(x803)*(x805)))+(((IkReal(-1.00000000000000))*(x801)*(x805)))))):(IkReal)1.0e30))*(((((IkReal(3.49454111193176e+49))*(x801)*(x807)))+(((IkReal(-1.31366513612130e+47))*(x799)))+(((IkReal(3.49454111193176e+49))*(x803)*(x807)))+(((IkReal(-1.00000000000000))*(x803)*(x808)))+(((IkReal(1.59522894846391e+41))*((npz)*(npz)*(npz))))+(((IkReal(-8.09280961668571e+39))*(npz)*(x800)))+(((IkReal(-1.00000000000000))*(x801)*(x808)))+(((IkReal(2.58945496394143e+48))*(x807))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(((((IkReal(-5.89039427385610e+15))*(cj7)))+(((IkReal(362876640.000000))*(npz)))+(((IkReal(-1.00000000000000))*(x803)*(x804)))+(((IkReal(-1.00000000000000))*(x801)*(x804))))) != 0)?((IkReal)1/(((((IkReal(-5.89039427385610e+15))*(cj7)))+(((IkReal(362876640.000000))*(npz)))+(((IkReal(-1.00000000000000))*(x803)*(x804)))+(((IkReal(-1.00000000000000))*(x801)*(x804)))))):(IkReal)1.0e30))*(((((IkReal(-2.61520783848318e+16))*(npz)))+(((IkReal(81732950.0000000))*(cj7)))+(((IkReal(-1.00000000000000))*(x801)*(x802)))+(((IkReal(-1.00000000000000))*(x802)*(x803))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((((IkReal(-1.00000000000000))*(x806)*((x803)*(x803))))+(((IkReal(-1.57419419233741e+49))*(x800)*(x801)*(x803)))+(((IkReal(-1.00000000000000))*(x806)*((x801)*(x801))))+(((IkReal(-4.32180060661409e+46))*(x800)))+(((IkReal(-1.00000000000000))*(x803)*(x805)))+(((IkReal(-1.00000000000000))*(x801)*(x805))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*(x806)*((x803)*(x803))))+(((IkReal(-1.57419419233741e+49))*(x800)*(x801)*(x803)))+(((IkReal(-1.00000000000000))*(x806)*((x801)*(x801))))+(((IkReal(-4.32180060661409e+46))*(x800)))+(((IkReal(-1.00000000000000))*(x803)*(x805)))+(((IkReal(-1.00000000000000))*(x801)*(x805)))))):(IkReal)1.0e30))*(((((IkReal(3.49454111193176e+49))*(x801)*(x807)))+(((IkReal(-1.31366513612130e+47))*(x799)))+(((IkReal(3.49454111193176e+49))*(x803)*(x807)))+(((IkReal(-1.00000000000000))*(x803)*(x808)))+(((IkReal(1.59522894846391e+41))*((npz)*(npz)*(npz))))+(((IkReal(-8.09280961668571e+39))*(npz)*(x800)))+(((IkReal(-1.00000000000000))*(x801)*(x808)))+(((IkReal(2.58945496394143e+48))*(x807)))))))+IKsqr(((((IKabs(((((IkReal(-5.89039427385610e+15))*(cj7)))+(((IkReal(362876640.000000))*(npz)))+(((IkReal(-1.00000000000000))*(x803)*(x804)))+(((IkReal(-1.00000000000000))*(x801)*(x804))))) != 0)?((IkReal)1/(((((IkReal(-5.89039427385610e+15))*(cj7)))+(((IkReal(362876640.000000))*(npz)))+(((IkReal(-1.00000000000000))*(x803)*(x804)))+(((IkReal(-1.00000000000000))*(x801)*(x804)))))):(IkReal)1.0e30))*(((((IkReal(-2.61520783848318e+16))*(npz)))+(((IkReal(81732950.0000000))*(cj7)))+(((IkReal(-1.00000000000000))*(x801)*(x802)))+(((IkReal(-1.00000000000000))*(x802)*(x803)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((((IKabs(((((IkReal(-1.00000000000000))*(x806)*((x803)*(x803))))+(((IkReal(-1.57419419233741e+49))*(x800)*(x801)*(x803)))+(((IkReal(-1.00000000000000))*(x806)*((x801)*(x801))))+(((IkReal(-4.32180060661409e+46))*(x800)))+(((IkReal(-1.00000000000000))*(x803)*(x805)))+(((IkReal(-1.00000000000000))*(x801)*(x805))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*(x806)*((x803)*(x803))))+(((IkReal(-1.57419419233741e+49))*(x800)*(x801)*(x803)))+(((IkReal(-1.00000000000000))*(x806)*((x801)*(x801))))+(((IkReal(-4.32180060661409e+46))*(x800)))+(((IkReal(-1.00000000000000))*(x803)*(x805)))+(((IkReal(-1.00000000000000))*(x801)*(x805)))))):(IkReal)1.0e30))*(((((IkReal(3.49454111193176e+49))*(x801)*(x807)))+(((IkReal(-1.31366513612130e+47))*(x799)))+(((IkReal(3.49454111193176e+49))*(x803)*(x807)))+(((IkReal(-1.00000000000000))*(x803)*(x808)))+(((IkReal(1.59522894846391e+41))*((npz)*(npz)*(npz))))+(((IkReal(-8.09280961668571e+39))*(npz)*(x800)))+(((IkReal(-1.00000000000000))*(x801)*(x808)))+(((IkReal(2.58945496394143e+48))*(x807)))))), ((((IKabs(((((IkReal(-5.89039427385610e+15))*(cj7)))+(((IkReal(362876640.000000))*(npz)))+(((IkReal(-1.00000000000000))*(x803)*(x804)))+(((IkReal(-1.00000000000000))*(x801)*(x804))))) != 0)?((IkReal)1/(((((IkReal(-5.89039427385610e+15))*(cj7)))+(((IkReal(362876640.000000))*(npz)))+(((IkReal(-1.00000000000000))*(x803)*(x804)))+(((IkReal(-1.00000000000000))*(x801)*(x804)))))):(IkReal)1.0e30))*(((((IkReal(-2.61520783848318e+16))*(npz)))+(((IkReal(81732950.0000000))*(cj7)))+(((IkReal(-1.00000000000000))*(x801)*(x802)))+(((IkReal(-1.00000000000000))*(x802)*(x803)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x809=IKsin(j8);
IkReal x810=IKcos(j8);
IkReal x811=((cj9)*(npy));
IkReal x812=((IkReal(0.225236181506420))*(cj7));
IkReal x813=((npx)*(sj9));
IkReal x814=((IkReal(1.00000000000000))*(x810));
IkReal x815=((IkReal(1.00000000000000))*(x809));
evalcond[0]=((((IkReal(-1.02818442648811e-9))*(x809)))+(npz)+(((IkReal(-1.00000000000000))*(x810)*(x812))));
evalcond[1]=((IkReal(-1.02818441412821e-9))+(((npz)*(x809)))+(((IkReal(-1.00000000000000))*(x811)*(x814)))+(((IkReal(-1.00000000000000))*(x813)*(x814)))+(((IkReal(-0.0741000000000000))*(x810))));
evalcond[2]=((((IkReal(-0.0741000000000000))*(x809)))+(((IkReal(-1.00000000000000))*(x811)*(x815)))+(((IkReal(-1.00000000000000))*(npz)*(x814)))+(((IkReal(-1.00000000000000))*(x813)*(x815)))+(x812));
evalcond[3]=((IkReal(-0.0741000000000000))+(((x809)*(x812)))+(((IkReal(-1.02818442648811e-9))*(x810)))+(((IkReal(-1.00000000000000))*(x813)))+(((IkReal(-1.00000000000000))*(x811))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x816=((IkReal(2.80552507771488e+24))*(cj7));
IkReal x817=((npx)*(sj9));
IkReal x818=((cj9)*(npy));
if( IKabs(((gconst2)*(((((IkReal(-1.00000000000000))*(x816)*(x818)))+(((IkReal(-1.00000000000000))*(x816)*(x817)))+(((IkReal(-1.28069884968960e+16))*(npz)))+(((IkReal(-2.07889408258672e+23))*(cj7))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((IkReal(948997830443008.))+(((IkReal(1.28069884968960e+16))*(x818)))+(((IkReal(1.28069884968960e+16))*(x817)))+(((IkReal(-1.00000000000000))*(npz)*(x816))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j8array[0]=IKatan2(((gconst2)*(((((IkReal(-1.00000000000000))*(x816)*(x818)))+(((IkReal(-1.00000000000000))*(x816)*(x817)))+(((IkReal(-1.28069884968960e+16))*(npz)))+(((IkReal(-2.07889408258672e+23))*(cj7)))))), ((gconst2)*(((IkReal(948997830443008.))+(((IkReal(1.28069884968960e+16))*(x818)))+(((IkReal(1.28069884968960e+16))*(x817)))+(((IkReal(-1.00000000000000))*(npz)*(x816)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x819=IKsin(j8);
IkReal x820=IKcos(j8);
IkReal x821=((cj9)*(npy));
IkReal x822=((IkReal(0.225236181506420))*(cj7));
IkReal x823=((npx)*(sj9));
IkReal x824=((IkReal(1.00000000000000))*(x820));
IkReal x825=((IkReal(1.00000000000000))*(x819));
evalcond[0]=((npz)+(((IkReal(-1.02818442648811e-9))*(x819)))+(((IkReal(-1.00000000000000))*(x820)*(x822))));
evalcond[1]=((IkReal(-1.02818441412821e-9))+(((IkReal(-1.00000000000000))*(x823)*(x824)))+(((IkReal(-0.0741000000000000))*(x820)))+(((IkReal(-1.00000000000000))*(x821)*(x824)))+(((npz)*(x819))));
evalcond[2]=((((IkReal(-1.00000000000000))*(npz)*(x824)))+(((IkReal(-1.00000000000000))*(x823)*(x825)))+(((IkReal(-1.00000000000000))*(x821)*(x825)))+(((IkReal(-0.0741000000000000))*(x819)))+(x822));
evalcond[3]=((IkReal(-0.0741000000000000))+(((x819)*(x822)))+(((IkReal(-1.02818442648811e-9))*(x820)))+(((IkReal(-1.00000000000000))*(x821)))+(((IkReal(-1.00000000000000))*(x823))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x826=(npz)*(npz);
IkReal x827=(sj6)*(sj6);
IkReal x828=((cj6)*(cj7));
IkReal x829=((cj9)*(npy));
IkReal x830=((IkReal(3179700012.87778))*(sj6));
IkReal x831=((npx)*(sj9));
IkReal x832=((IKabs(((IkReal(-0.224440600000000))+(((IkReal(-0.317969998712222))*(sj6))))) != 0)?((IkReal)1/(((IkReal(-0.224440600000000))+(((IkReal(-0.317969998712222))*(sj6)))))):(IkReal)1.0e30);
IkReal x833=((IKabs(((IkReal(166310485.947115))+(((IkReal(2244406018.17969))*(x829)))+(((IkReal(235615770.954244))*(sj6)))+(((x829)*(x830)))+(((IkReal(2244406018.17969))*(x831)))+(((x830)*(x831)))+(((IkReal(-3179700012.87778))*(npz)*(x828))))) != 0)?((IkReal)1/(((IkReal(166310485.947115))+(((IkReal(2244406018.17969))*(x829)))+(((IkReal(235615770.954244))*(sj6)))+(((x829)*(x830)))+(((IkReal(2244406018.17969))*(x831)))+(((x830)*(x831)))+(((IkReal(-3179700012.87778))*(npz)*(x828)))))):(IkReal)1.0e30);
IkReal x834=((x832)*(x833));
if( IKabs(((((IkReal(453840982.194971))*(sj6)*(x828)*(x832)*(((IKabs(((IkReal(166310485.947115))+(((IkReal(-3179700012.87778))*(cj6)*(cj7)*(npz)))+(((IkReal(2244406018.17969))*(x829)))+(((IkReal(235615770.954244))*(sj6)))+(((x829)*(x830)))+(((IkReal(2244406018.17969))*(x831)))+(((x830)*(x831))))) != 0)?((IkReal)1/(((IkReal(166310485.947115))+(((IkReal(-3179700012.87778))*(cj6)*(cj7)*(npz)))+(((IkReal(2244406018.17969))*(x829)))+(((IkReal(235615770.954244))*(sj6)))+(((x829)*(x830)))+(((IkReal(2244406018.17969))*(x831)))+(((x830)*(x831)))))):(IkReal)1.0e30))))+(((IkReal(-1.00000000000000))*(npz)*(x832)))+(((IkReal(321483315.683723))*(x827)*(x828)*(x832)*(((IKabs(((IkReal(166310485.947115))+(((IkReal(-3179700012.87778))*(cj6)*(cj7)*(npz)))+(((IkReal(2244406018.17969))*(x829)))+(((IkReal(235615770.954244))*(sj6)))+(((x829)*(x830)))+(((IkReal(2244406018.17969))*(x831)))+(((x830)*(x831))))) != 0)?((IkReal)1/(((IkReal(166310485.947115))+(((IkReal(-3179700012.87778))*(cj6)*(cj7)*(npz)))+(((IkReal(2244406018.17969))*(x829)))+(((IkReal(235615770.954244))*(sj6)))+(((x829)*(x830)))+(((IkReal(2244406018.17969))*(x831)))+(((x830)*(x831)))))):(IkReal)1.0e30))))+(((IkReal(-3179700012.87778))*(x826)*(x828)*(x832)*(((IKabs(((IkReal(166310485.947115))+(((IkReal(-3179700012.87778))*(cj6)*(cj7)*(npz)))+(((IkReal(2244406018.17969))*(x829)))+(((IkReal(235615770.954244))*(sj6)))+(((x829)*(x830)))+(((IkReal(2244406018.17969))*(x831)))+(((x830)*(x831))))) != 0)?((IkReal)1/(((IkReal(166310485.947115))+(((IkReal(-3179700012.87778))*(cj6)*(cj7)*(npz)))+(((IkReal(2244406018.17969))*(x829)))+(((IkReal(235615770.954244))*(sj6)))+(((x829)*(x830)))+(((IkReal(2244406018.17969))*(x831)))+(((x830)*(x831)))))):(IkReal)1.0e30))))+(((IkReal(160172882.286006))*(x828)*(x832)*(((IKabs(((IkReal(166310485.947115))+(((IkReal(-3179700012.87778))*(cj6)*(cj7)*(npz)))+(((IkReal(2244406018.17969))*(x829)))+(((IkReal(235615770.954244))*(sj6)))+(((x829)*(x830)))+(((IkReal(2244406018.17969))*(x831)))+(((x830)*(x831))))) != 0)?((IkReal)1/(((IkReal(166310485.947115))+(((IkReal(-3179700012.87778))*(cj6)*(cj7)*(npz)))+(((IkReal(2244406018.17969))*(x829)))+(((IkReal(235615770.954244))*(sj6)))+(((x829)*(x830)))+(((IkReal(2244406018.17969))*(x831)))+(((x830)*(x831)))))):(IkReal)1.0e30)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x833)*(((IkReal(-503735833.363860))+(((IkReal(-1427307557.42060))*(sj6)))+(((IkReal(10000000081.0000))*(x826)))+(((IkReal(-1011049209.00000))*(x827))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(453840982.194971))*(sj6)*(x828)*(x832)*(((IKabs(((IkReal(166310485.947115))+(((IkReal(-3179700012.87778))*(cj6)*(cj7)*(npz)))+(((IkReal(2244406018.17969))*(x829)))+(((IkReal(235615770.954244))*(sj6)))+(((x829)*(x830)))+(((IkReal(2244406018.17969))*(x831)))+(((x830)*(x831))))) != 0)?((IkReal)1/(((IkReal(166310485.947115))+(((IkReal(-3179700012.87778))*(cj6)*(cj7)*(npz)))+(((IkReal(2244406018.17969))*(x829)))+(((IkReal(235615770.954244))*(sj6)))+(((x829)*(x830)))+(((IkReal(2244406018.17969))*(x831)))+(((x830)*(x831)))))):(IkReal)1.0e30))))+(((IkReal(-1.00000000000000))*(npz)*(x832)))+(((IkReal(321483315.683723))*(x827)*(x828)*(x832)*(((IKabs(((IkReal(166310485.947115))+(((IkReal(-3179700012.87778))*(cj6)*(cj7)*(npz)))+(((IkReal(2244406018.17969))*(x829)))+(((IkReal(235615770.954244))*(sj6)))+(((x829)*(x830)))+(((IkReal(2244406018.17969))*(x831)))+(((x830)*(x831))))) != 0)?((IkReal)1/(((IkReal(166310485.947115))+(((IkReal(-3179700012.87778))*(cj6)*(cj7)*(npz)))+(((IkReal(2244406018.17969))*(x829)))+(((IkReal(235615770.954244))*(sj6)))+(((x829)*(x830)))+(((IkReal(2244406018.17969))*(x831)))+(((x830)*(x831)))))):(IkReal)1.0e30))))+(((IkReal(-3179700012.87778))*(x826)*(x828)*(x832)*(((IKabs(((IkReal(166310485.947115))+(((IkReal(-3179700012.87778))*(cj6)*(cj7)*(npz)))+(((IkReal(2244406018.17969))*(x829)))+(((IkReal(235615770.954244))*(sj6)))+(((x829)*(x830)))+(((IkReal(2244406018.17969))*(x831)))+(((x830)*(x831))))) != 0)?((IkReal)1/(((IkReal(166310485.947115))+(((IkReal(-3179700012.87778))*(cj6)*(cj7)*(npz)))+(((IkReal(2244406018.17969))*(x829)))+(((IkReal(235615770.954244))*(sj6)))+(((x829)*(x830)))+(((IkReal(2244406018.17969))*(x831)))+(((x830)*(x831)))))):(IkReal)1.0e30))))+(((IkReal(160172882.286006))*(x828)*(x832)*(((IKabs(((IkReal(166310485.947115))+(((IkReal(-3179700012.87778))*(cj6)*(cj7)*(npz)))+(((IkReal(2244406018.17969))*(x829)))+(((IkReal(235615770.954244))*(sj6)))+(((x829)*(x830)))+(((IkReal(2244406018.17969))*(x831)))+(((x830)*(x831))))) != 0)?((IkReal)1/(((IkReal(166310485.947115))+(((IkReal(-3179700012.87778))*(cj6)*(cj7)*(npz)))+(((IkReal(2244406018.17969))*(x829)))+(((IkReal(235615770.954244))*(sj6)))+(((x829)*(x830)))+(((IkReal(2244406018.17969))*(x831)))+(((x830)*(x831)))))):(IkReal)1.0e30))))))+IKsqr(((x833)*(((IkReal(-503735833.363860))+(((IkReal(-1427307557.42060))*(sj6)))+(((IkReal(10000000081.0000))*(x826)))+(((IkReal(-1011049209.00000))*(x827)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((((IkReal(453840982.194971))*(sj6)*(x828)*(x832)*(((IKabs(((IkReal(166310485.947115))+(((IkReal(-3179700012.87778))*(cj6)*(cj7)*(npz)))+(((IkReal(2244406018.17969))*(x829)))+(((IkReal(235615770.954244))*(sj6)))+(((x829)*(x830)))+(((IkReal(2244406018.17969))*(x831)))+(((x830)*(x831))))) != 0)?((IkReal)1/(((IkReal(166310485.947115))+(((IkReal(-3179700012.87778))*(cj6)*(cj7)*(npz)))+(((IkReal(2244406018.17969))*(x829)))+(((IkReal(235615770.954244))*(sj6)))+(((x829)*(x830)))+(((IkReal(2244406018.17969))*(x831)))+(((x830)*(x831)))))):(IkReal)1.0e30))))+(((IkReal(-1.00000000000000))*(npz)*(x832)))+(((IkReal(321483315.683723))*(x827)*(x828)*(x832)*(((IKabs(((IkReal(166310485.947115))+(((IkReal(-3179700012.87778))*(cj6)*(cj7)*(npz)))+(((IkReal(2244406018.17969))*(x829)))+(((IkReal(235615770.954244))*(sj6)))+(((x829)*(x830)))+(((IkReal(2244406018.17969))*(x831)))+(((x830)*(x831))))) != 0)?((IkReal)1/(((IkReal(166310485.947115))+(((IkReal(-3179700012.87778))*(cj6)*(cj7)*(npz)))+(((IkReal(2244406018.17969))*(x829)))+(((IkReal(235615770.954244))*(sj6)))+(((x829)*(x830)))+(((IkReal(2244406018.17969))*(x831)))+(((x830)*(x831)))))):(IkReal)1.0e30))))+(((IkReal(-3179700012.87778))*(x826)*(x828)*(x832)*(((IKabs(((IkReal(166310485.947115))+(((IkReal(-3179700012.87778))*(cj6)*(cj7)*(npz)))+(((IkReal(2244406018.17969))*(x829)))+(((IkReal(235615770.954244))*(sj6)))+(((x829)*(x830)))+(((IkReal(2244406018.17969))*(x831)))+(((x830)*(x831))))) != 0)?((IkReal)1/(((IkReal(166310485.947115))+(((IkReal(-3179700012.87778))*(cj6)*(cj7)*(npz)))+(((IkReal(2244406018.17969))*(x829)))+(((IkReal(235615770.954244))*(sj6)))+(((x829)*(x830)))+(((IkReal(2244406018.17969))*(x831)))+(((x830)*(x831)))))):(IkReal)1.0e30))))+(((IkReal(160172882.286006))*(x828)*(x832)*(((IKabs(((IkReal(166310485.947115))+(((IkReal(-3179700012.87778))*(cj6)*(cj7)*(npz)))+(((IkReal(2244406018.17969))*(x829)))+(((IkReal(235615770.954244))*(sj6)))+(((x829)*(x830)))+(((IkReal(2244406018.17969))*(x831)))+(((x830)*(x831))))) != 0)?((IkReal)1/(((IkReal(166310485.947115))+(((IkReal(-3179700012.87778))*(cj6)*(cj7)*(npz)))+(((IkReal(2244406018.17969))*(x829)))+(((IkReal(235615770.954244))*(sj6)))+(((x829)*(x830)))+(((IkReal(2244406018.17969))*(x831)))+(((x830)*(x831)))))):(IkReal)1.0e30))))), ((x833)*(((IkReal(-503735833.363860))+(((IkReal(-1427307557.42060))*(sj6)))+(((IkReal(10000000081.0000))*(x826)))+(((IkReal(-1011049209.00000))*(x827)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x835=IKsin(j8);
IkReal x836=IKcos(j8);
IkReal x837=((cj6)*(cj7));
IkReal x838=((IkReal(1.00000000000000))*(x836));
IkReal x839=((IkReal(1.00000000000000))*(cj9)*(npy));
IkReal x840=((IkReal(0.317969998712222))*(x835));
IkReal x841=((IkReal(1.00000000000000))*(npx)*(sj9));
IkReal x842=((IkReal(0.317969998712222))*(x836));
evalcond[0]=((npz)+(((x837)*(x842)))+(((IkReal(-0.224440600000000))*(x835)))+(((IkReal(-1.00000000000000))*(sj6)*(x840))));
evalcond[1]=((IkReal(-0.224440600000000))+(((npz)*(x835)))+(((IkReal(-0.0741000000000000))*(x836)))+(((IkReal(-1.00000000000000))*(npx)*(sj9)*(x838)))+(((IkReal(-0.317969998712222))*(sj6)))+(((IkReal(-1.00000000000000))*(cj9)*(npy)*(x838))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x835)*(x841)))+(((IkReal(-1.00000000000000))*(x835)*(x839)))+(((IkReal(-1.00000000000000))*(npz)*(x838)))+(((IkReal(-0.0741000000000000))*(x835)))+(((IkReal(-0.317969998712222))*(x837))));
evalcond[3]=((IkReal(-0.0741000000000000))+(((IkReal(-1.00000000000000))*(x837)*(x840)))+(((IkReal(-1.00000000000000))*(x841)))+(((IkReal(-1.00000000000000))*(x839)))+(((IkReal(-0.224440600000000))*(x836)))+(((IkReal(-1.00000000000000))*(sj6)*(x842))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x843=(cj6)*(cj6)*(cj6);
IkReal x844=(cj7)*(cj7)*(cj7);
IkReal x845=(npz)*(npz)*(npz);
IkReal x846=(npz)*(npz);
IkReal x847=(cj6)*(cj6);
IkReal x848=(cj7)*(cj7);
IkReal x849=((npz)*(sj6));
IkReal x850=((npx)*(sj9));
IkReal x851=((cj9)*(npy));
IkReal x852=((cj6)*(cj7));
IkReal x853=((IkReal(10000000081.0000))*(npz));
IkReal x854=((IkReal(3.17970003863336e+19))*(x846));
IkReal x855=((x847)*(x848));
IkReal x856=((IkReal(3.21483318287737e+18))*(x843)*(x844));
if( IKabs(((((IKabs(((((IkReal(1.42730756898179e+19))*(sj6)*(x846)))+(((IkReal(-1.49837493987484e+18))*(x851)*(x855)))+(((IkReal(5.03735837444120e+18))*(x846)))+(((IkReal(-2.02209843437900e+19))*(x850)*(x851)*(x855)))+(((IkReal(1.01104921718950e+19))*(x846)*((sj6)*(sj6))))+(((IkReal(-5.55147915223627e+16))*(x855)))+(((IkReal(-1.01104921718950e+19))*(x855)*((x850)*(x850))))+(((IkReal(-1.49837493987484e+18))*(x850)*(x855)))+(((IkReal(-1.01104921718950e+19))*(x855)*((x851)*(x851)))))) != 0)?((IkReal)1/(((((IkReal(1.42730756898179e+19))*(sj6)*(x846)))+(((IkReal(-1.49837493987484e+18))*(x851)*(x855)))+(((IkReal(5.03735837444120e+18))*(x846)))+(((IkReal(-2.02209843437900e+19))*(x850)*(x851)*(x855)))+(((IkReal(1.01104921718950e+19))*(x846)*((sj6)*(sj6))))+(((IkReal(-5.55147915223627e+16))*(x855)))+(((IkReal(-1.01104921718950e+19))*(x855)*((x850)*(x850))))+(((IkReal(-1.49837493987484e+18))*(x850)*(x855)))+(((IkReal(-1.01104921718950e+19))*(x855)*((x851)*(x851))))))):(IkReal)1.0e30))*(((((x850)*(x856)))+(((IkReal(3.17970003863336e+19))*(sj6)*(x845)))+(((IkReal(-3.21483318287737e+18))*(x849)*(x855)))+(((IkReal(2.24440603635938e+19))*(x845)))+(((IkReal(-2.26920492935541e+18))*(npz)*(x855)))+(((IkReal(-2.35615772862732e+18))*(x846)*(x852)))+(((x851)*(x856)))+(((IkReal(-1.00000000000000))*(x850)*(x852)*(x854)))+(((IkReal(2.38219138851213e+17))*(x843)*(x844)))+(((IkReal(-1.00000000000000))*(x851)*(x852)*(x854))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(((((IkReal(-3179700012.87778))*(x850)*(x852)))+(((IkReal(-2244406018.17969))*(npz)))+(((IkReal(-3179700012.87778))*(x851)*(x852)))+(((IkReal(-3179700012.87778))*(x849)))+(((IkReal(-235615770.954244))*(x852))))) != 0)?((IkReal)1/(((((IkReal(-3179700012.87778))*(x850)*(x852)))+(((IkReal(-2244406018.17969))*(npz)))+(((IkReal(-3179700012.87778))*(x851)*(x852)))+(((IkReal(-3179700012.87778))*(x849)))+(((IkReal(-235615770.954244))*(x852)))))):(IkReal)1.0e30))*(((((x850)*(x853)))+(((IkReal(713653778.710298))*(x852)))+(((IkReal(741000006.002100))*(npz)))+(((x851)*(x853)))+(((IkReal(1011049209.00000))*(sj6)*(x852))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((((IkReal(1.42730756898179e+19))*(sj6)*(x846)))+(((IkReal(-1.49837493987484e+18))*(x851)*(x855)))+(((IkReal(5.03735837444120e+18))*(x846)))+(((IkReal(-2.02209843437900e+19))*(x850)*(x851)*(x855)))+(((IkReal(1.01104921718950e+19))*(x846)*((sj6)*(sj6))))+(((IkReal(-5.55147915223627e+16))*(x855)))+(((IkReal(-1.01104921718950e+19))*(x855)*((x850)*(x850))))+(((IkReal(-1.49837493987484e+18))*(x850)*(x855)))+(((IkReal(-1.01104921718950e+19))*(x855)*((x851)*(x851)))))) != 0)?((IkReal)1/(((((IkReal(1.42730756898179e+19))*(sj6)*(x846)))+(((IkReal(-1.49837493987484e+18))*(x851)*(x855)))+(((IkReal(5.03735837444120e+18))*(x846)))+(((IkReal(-2.02209843437900e+19))*(x850)*(x851)*(x855)))+(((IkReal(1.01104921718950e+19))*(x846)*((sj6)*(sj6))))+(((IkReal(-5.55147915223627e+16))*(x855)))+(((IkReal(-1.01104921718950e+19))*(x855)*((x850)*(x850))))+(((IkReal(-1.49837493987484e+18))*(x850)*(x855)))+(((IkReal(-1.01104921718950e+19))*(x855)*((x851)*(x851))))))):(IkReal)1.0e30))*(((((x850)*(x856)))+(((IkReal(3.17970003863336e+19))*(sj6)*(x845)))+(((IkReal(-3.21483318287737e+18))*(x849)*(x855)))+(((IkReal(2.24440603635938e+19))*(x845)))+(((IkReal(-2.26920492935541e+18))*(npz)*(x855)))+(((IkReal(-2.35615772862732e+18))*(x846)*(x852)))+(((x851)*(x856)))+(((IkReal(-1.00000000000000))*(x850)*(x852)*(x854)))+(((IkReal(2.38219138851213e+17))*(x843)*(x844)))+(((IkReal(-1.00000000000000))*(x851)*(x852)*(x854)))))))+IKsqr(((((IKabs(((((IkReal(-3179700012.87778))*(x850)*(x852)))+(((IkReal(-2244406018.17969))*(npz)))+(((IkReal(-3179700012.87778))*(x851)*(x852)))+(((IkReal(-3179700012.87778))*(x849)))+(((IkReal(-235615770.954244))*(x852))))) != 0)?((IkReal)1/(((((IkReal(-3179700012.87778))*(x850)*(x852)))+(((IkReal(-2244406018.17969))*(npz)))+(((IkReal(-3179700012.87778))*(x851)*(x852)))+(((IkReal(-3179700012.87778))*(x849)))+(((IkReal(-235615770.954244))*(x852)))))):(IkReal)1.0e30))*(((((x850)*(x853)))+(((IkReal(713653778.710298))*(x852)))+(((IkReal(741000006.002100))*(npz)))+(((x851)*(x853)))+(((IkReal(1011049209.00000))*(sj6)*(x852)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((((IKabs(((((IkReal(1.42730756898179e+19))*(sj6)*(x846)))+(((IkReal(-1.49837493987484e+18))*(x851)*(x855)))+(((IkReal(5.03735837444120e+18))*(x846)))+(((IkReal(-2.02209843437900e+19))*(x850)*(x851)*(x855)))+(((IkReal(1.01104921718950e+19))*(x846)*((sj6)*(sj6))))+(((IkReal(-5.55147915223627e+16))*(x855)))+(((IkReal(-1.01104921718950e+19))*(x855)*((x850)*(x850))))+(((IkReal(-1.49837493987484e+18))*(x850)*(x855)))+(((IkReal(-1.01104921718950e+19))*(x855)*((x851)*(x851)))))) != 0)?((IkReal)1/(((((IkReal(1.42730756898179e+19))*(sj6)*(x846)))+(((IkReal(-1.49837493987484e+18))*(x851)*(x855)))+(((IkReal(5.03735837444120e+18))*(x846)))+(((IkReal(-2.02209843437900e+19))*(x850)*(x851)*(x855)))+(((IkReal(1.01104921718950e+19))*(x846)*((sj6)*(sj6))))+(((IkReal(-5.55147915223627e+16))*(x855)))+(((IkReal(-1.01104921718950e+19))*(x855)*((x850)*(x850))))+(((IkReal(-1.49837493987484e+18))*(x850)*(x855)))+(((IkReal(-1.01104921718950e+19))*(x855)*((x851)*(x851))))))):(IkReal)1.0e30))*(((((x850)*(x856)))+(((IkReal(3.17970003863336e+19))*(sj6)*(x845)))+(((IkReal(-3.21483318287737e+18))*(x849)*(x855)))+(((IkReal(2.24440603635938e+19))*(x845)))+(((IkReal(-2.26920492935541e+18))*(npz)*(x855)))+(((IkReal(-2.35615772862732e+18))*(x846)*(x852)))+(((x851)*(x856)))+(((IkReal(-1.00000000000000))*(x850)*(x852)*(x854)))+(((IkReal(2.38219138851213e+17))*(x843)*(x844)))+(((IkReal(-1.00000000000000))*(x851)*(x852)*(x854)))))), ((((IKabs(((((IkReal(-3179700012.87778))*(x850)*(x852)))+(((IkReal(-2244406018.17969))*(npz)))+(((IkReal(-3179700012.87778))*(x851)*(x852)))+(((IkReal(-3179700012.87778))*(x849)))+(((IkReal(-235615770.954244))*(x852))))) != 0)?((IkReal)1/(((((IkReal(-3179700012.87778))*(x850)*(x852)))+(((IkReal(-2244406018.17969))*(npz)))+(((IkReal(-3179700012.87778))*(x851)*(x852)))+(((IkReal(-3179700012.87778))*(x849)))+(((IkReal(-235615770.954244))*(x852)))))):(IkReal)1.0e30))*(((((x850)*(x853)))+(((IkReal(713653778.710298))*(x852)))+(((IkReal(741000006.002100))*(npz)))+(((x851)*(x853)))+(((IkReal(1011049209.00000))*(sj6)*(x852)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x857=IKsin(j8);
IkReal x858=IKcos(j8);
IkReal x859=((cj6)*(cj7));
IkReal x860=((IkReal(1.00000000000000))*(x858));
IkReal x861=((IkReal(1.00000000000000))*(cj9)*(npy));
IkReal x862=((IkReal(0.317969998712222))*(x857));
IkReal x863=((IkReal(1.00000000000000))*(npx)*(sj9));
IkReal x864=((IkReal(0.317969998712222))*(x858));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj6)*(x862)))+(((IkReal(-0.224440600000000))*(x857)))+(npz)+(((x859)*(x864))));
evalcond[1]=((IkReal(-0.224440600000000))+(((IkReal(-1.00000000000000))*(npx)*(sj9)*(x860)))+(((IkReal(-1.00000000000000))*(cj9)*(npy)*(x860)))+(((IkReal(-0.317969998712222))*(sj6)))+(((IkReal(-0.0741000000000000))*(x858)))+(((npz)*(x857))));
evalcond[2]=((((IkReal(-0.317969998712222))*(x859)))+(((IkReal(-1.00000000000000))*(npz)*(x860)))+(((IkReal(-0.0741000000000000))*(x857)))+(((IkReal(-1.00000000000000))*(x857)*(x863)))+(((IkReal(-1.00000000000000))*(x857)*(x861))));
evalcond[3]=((IkReal(-0.0741000000000000))+(((IkReal(-1.00000000000000))*(x861)))+(((IkReal(-1.00000000000000))*(x863)))+(((IkReal(-1.00000000000000))*(sj6)*(x864)))+(((IkReal(-0.224440600000000))*(x858)))+(((IkReal(-1.00000000000000))*(x859)*(x862))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x865=((IkReal(3179700012.87778))*(sj6));
IkReal x866=((cj9)*(npy));
IkReal x867=((npx)*(sj9));
IkReal x868=((cj6)*(cj7));
if( IKabs(((gconst0)*(((((IkReal(-3179700012.87778))*(x866)*(x868)))+(((npz)*(x865)))+(((IkReal(-235615770.954244))*(x868)))+(((IkReal(-3179700012.87778))*(x867)*(x868)))+(((IkReal(2244406018.17969))*(npz))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((IkReal(-166310485.947115))+(((IkReal(-1.00000000000000))*(x865)*(x866)))+(((IkReal(-1.00000000000000))*(x865)*(x867)))+(((IkReal(-3179700012.87778))*(npz)*(x868)))+(((IkReal(-2244406018.17969))*(x866)))+(((IkReal(-2244406018.17969))*(x867)))+(((IkReal(-235615770.954244))*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j8array[0]=IKatan2(((gconst0)*(((((IkReal(-3179700012.87778))*(x866)*(x868)))+(((npz)*(x865)))+(((IkReal(-235615770.954244))*(x868)))+(((IkReal(-3179700012.87778))*(x867)*(x868)))+(((IkReal(2244406018.17969))*(npz)))))), ((gconst0)*(((IkReal(-166310485.947115))+(((IkReal(-1.00000000000000))*(x865)*(x866)))+(((IkReal(-1.00000000000000))*(x865)*(x867)))+(((IkReal(-3179700012.87778))*(npz)*(x868)))+(((IkReal(-2244406018.17969))*(x866)))+(((IkReal(-2244406018.17969))*(x867)))+(((IkReal(-235615770.954244))*(sj6)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x869=IKsin(j8);
IkReal x870=IKcos(j8);
IkReal x871=((cj6)*(cj7));
IkReal x872=((IkReal(1.00000000000000))*(x870));
IkReal x873=((IkReal(1.00000000000000))*(cj9)*(npy));
IkReal x874=((IkReal(0.317969998712222))*(x869));
IkReal x875=((IkReal(1.00000000000000))*(npx)*(sj9));
IkReal x876=((IkReal(0.317969998712222))*(x870));
evalcond[0]=((((x871)*(x876)))+(((IkReal(-0.224440600000000))*(x869)))+(((IkReal(-1.00000000000000))*(sj6)*(x874)))+(npz));
evalcond[1]=((IkReal(-0.224440600000000))+(((IkReal(-1.00000000000000))*(npx)*(sj9)*(x872)))+(((IkReal(-1.00000000000000))*(cj9)*(npy)*(x872)))+(((IkReal(-0.317969998712222))*(sj6)))+(((npz)*(x869)))+(((IkReal(-0.0741000000000000))*(x870))));
evalcond[2]=((((IkReal(-0.317969998712222))*(x871)))+(((IkReal(-1.00000000000000))*(x869)*(x873)))+(((IkReal(-1.00000000000000))*(x869)*(x875)))+(((IkReal(-1.00000000000000))*(npz)*(x872)))+(((IkReal(-0.0741000000000000))*(x869))));
evalcond[3]=((IkReal(-0.0741000000000000))+(((IkReal(-1.00000000000000))*(sj6)*(x876)))+(((IkReal(-1.00000000000000))*(x871)*(x874)))+(((IkReal(-0.224440600000000))*(x870)))+(((IkReal(-1.00000000000000))*(x875)))+(((IkReal(-1.00000000000000))*(x873))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}
}
}

}

}

} else
{
{
IkReal j8array[2], cj8array[2], sj8array[2];
bool j8valid[2]={false};
_nj8 = 2;
IkReal x877=((IkReal(-0.0741000000000000))+(((IkReal(-1.00000000000000))*(npx)*(sj9)))+(((IkReal(-1.00000000000000))*(cj9)*(npy))));
if( IKabs(x877) < IKFAST_ATAN2_MAGTHRESH && IKabs(npz) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x878=((IkReal(1.00000000000000))*(IKatan2(x877, npz)));
if( ((((x877)*(x877))+((npz)*(npz)))) < (IkReal)-0.00001 )
    continue;
if( (((IkReal(-1.00000000000000))*(((IKabs(IKabs(IKsqrt((((x877)*(x877))+((npz)*(npz)))))) != 0)?((IkReal)1/(IKabs(IKsqrt((((x877)*(x877))+((npz)*(npz))))))):(IkReal)1.0e30))*(((IkReal(-0.224440600000000))+(((IkReal(-0.317969998712222))*(sj6))))))) < -1-IKFAST_SINCOS_THRESH || (((IkReal(-1.00000000000000))*(((IKabs(IKabs(IKsqrt((((x877)*(x877))+((npz)*(npz)))))) != 0)?((IkReal)1/(IKabs(IKsqrt((((x877)*(x877))+((npz)*(npz))))))):(IkReal)1.0e30))*(((IkReal(-0.224440600000000))+(((IkReal(-0.317969998712222))*(sj6))))))) > 1+IKFAST_SINCOS_THRESH )
    continue;
IkReal x879=((IkReal(-1.00000000000000))*(IKasin(((IkReal(-1.00000000000000))*(((IKabs(IKabs(IKsqrt((((x877)*(x877))+((npz)*(npz)))))) != 0)?((IkReal)1/(IKabs(IKsqrt((((x877)*(x877))+((npz)*(npz))))))):(IkReal)1.0e30))*(((IkReal(-0.224440600000000))+(((IkReal(-0.317969998712222))*(sj6)))))))));
j8array[0]=((((IkReal(-1.00000000000000))*(x879)))+(((IkReal(-1.00000000000000))*(x878))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
j8array[1]=((IkReal(3.14159265358979))+(((IkReal(1.00000000000000))*(x879)))+(((IkReal(-1.00000000000000))*(x878))));
sj8array[1]=IKsin(j8array[1]);
cj8array[1]=IKcos(j8array[1]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
if( j8array[1] > IKPI )
{
    j8array[1]-=IK2PI;
}
else if( j8array[1] < -IKPI )
{    j8array[1]+=IK2PI;
}
j8valid[1] = true;
for(int ij8 = 0; ij8 < 2; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 2; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];

{
IkReal dummyeval[1];
IkReal gconst3;
gconst3=IKsign(cj6);
dummyeval[0]=cj6;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=cj6;
dummyeval[1]=cj8;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[4];
IkReal x880=((IkReal(-0.224440600000000))+(npz)+(((IkReal(-0.317969998712222))*(sj6))));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j8)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.145987693009410))+(((IkReal(0.142730754585940))*(sj6)))+(((IkReal(-0.148200000000000))*(npx)*(sj9)))+(((IkReal(-1.00000000000000))*(pp)))+(((IkReal(-0.148200000000000))*(cj9)*(npy))));
evalcond[2]=x880;
evalcond[3]=x880;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign(cj6);
dummyeval[0]=cj6;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j7array[1], cj7array[1], sj7array[1];
bool j7valid[1]={false};
_nj7 = 1;
IkReal x881=((IkReal(100000.000405000))*(npx));
IkReal x882=((IkReal(100000.000405000))*(npy));
if( IKabs(((gconst4)*(((((sj9)*(x882)))+(((IkReal(-1.00000000000000))*(cj9)*(x881))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((IkReal(-7410.00003001050))+(((IkReal(-1.00000000000000))*(sj9)*(x881)))+(((IkReal(-1.00000000000000))*(cj9)*(x882))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j7array[0]=IKatan2(((gconst4)*(((((sj9)*(x882)))+(((IkReal(-1.00000000000000))*(cj9)*(x881)))))), ((gconst4)*(((IkReal(-7410.00003001050))+(((IkReal(-1.00000000000000))*(sj9)*(x881)))+(((IkReal(-1.00000000000000))*(cj9)*(x882)))))));
sj7array[0]=IKsin(j7array[0]);
cj7array[0]=IKcos(j7array[0]);
if( j7array[0] > IKPI )
{
    j7array[0]-=IK2PI;
}
else if( j7array[0] < -IKPI )
{    j7array[0]+=IK2PI;
}
j7valid[0] = true;
for(int ij7 = 0; ij7 < 1; ++ij7)
{
if( !j7valid[ij7] )
{
    continue;
}
_ij7[0] = ij7; _ij7[1] = -1;
for(int iij7 = ij7+1; iij7 < 1; ++iij7)
{
if( j7valid[iij7] && IKabs(cj7array[ij7]-cj7array[iij7]) < IKFAST_SOLUTION_THRESH && IKabs(sj7array[ij7]-sj7array[iij7]) < IKFAST_SOLUTION_THRESH )
{
    j7valid[iij7]=false; _ij7[1] = iij7; break; 
}
}
j7 = j7array[ij7]; cj7 = cj7array[ij7]; sj7 = sj7array[ij7];
{
IkReal evalcond[2];
IkReal x883=((IkReal(0.317969998712222))*(cj6));
IkReal x884=((IkReal(1.00000000000000))*(npy));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj9)*(x884)))+(((cj9)*(npx)))+(((x883)*(IKsin(j7)))));
evalcond[1]=((IkReal(-0.0741000000000000))+(((IkReal(-1.00000000000000))*(npx)*(sj9)))+(((IkReal(-1.00000000000000))*(x883)*(IKcos(j7))))+(((IkReal(-1.00000000000000))*(cj9)*(x884))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x885=((IkReal(0.317969998712222))*(sj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j8)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.145987693009410))+(((IkReal(0.142730754585940))*(sj6)))+(((IkReal(-0.148200000000000))*(npx)*(sj9)))+(((IkReal(-1.00000000000000))*(pp)))+(((IkReal(-0.148200000000000))*(cj9)*(npy))));
evalcond[2]=((IkReal(0.224440600000000))+(npz)+(x885));
evalcond[3]=((IkReal(-0.224440600000000))+(((IkReal(-1.00000000000000))*(npz)))+(((IkReal(-1.00000000000000))*(x885))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst5;
gconst5=IKsign(cj6);
dummyeval[0]=cj6;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j7array[1], cj7array[1], sj7array[1];
bool j7valid[1]={false};
_nj7 = 1;
IkReal x886=((IkReal(100000.000405000))*(npy));
IkReal x887=((IkReal(100000.000405000))*(npx));
if( IKabs(((gconst5)*(((((sj9)*(x886)))+(((IkReal(-1.00000000000000))*(cj9)*(x887))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((IkReal(7410.00003001050))+(((sj9)*(x887)))+(((cj9)*(x886))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j7array[0]=IKatan2(((gconst5)*(((((sj9)*(x886)))+(((IkReal(-1.00000000000000))*(cj9)*(x887)))))), ((gconst5)*(((IkReal(7410.00003001050))+(((sj9)*(x887)))+(((cj9)*(x886)))))));
sj7array[0]=IKsin(j7array[0]);
cj7array[0]=IKcos(j7array[0]);
if( j7array[0] > IKPI )
{
    j7array[0]-=IK2PI;
}
else if( j7array[0] < -IKPI )
{    j7array[0]+=IK2PI;
}
j7valid[0] = true;
for(int ij7 = 0; ij7 < 1; ++ij7)
{
if( !j7valid[ij7] )
{
    continue;
}
_ij7[0] = ij7; _ij7[1] = -1;
for(int iij7 = ij7+1; iij7 < 1; ++iij7)
{
if( j7valid[iij7] && IKabs(cj7array[ij7]-cj7array[iij7]) < IKFAST_SOLUTION_THRESH && IKabs(sj7array[ij7]-sj7array[iij7]) < IKFAST_SOLUTION_THRESH )
{
    j7valid[iij7]=false; _ij7[1] = iij7; break; 
}
}
j7 = j7array[ij7]; cj7 = cj7array[ij7]; sj7 = sj7array[ij7];
{
IkReal evalcond[2];
IkReal x888=((IkReal(0.317969998712222))*(cj6));
evalcond[0]=((((x888)*(IKsin(j7))))+(((cj9)*(npx)))+(((IkReal(-1.00000000000000))*(npy)*(sj9))));
evalcond[1]=((IkReal(0.0741000000000000))+(((npx)*(sj9)))+(((cj9)*(npy)))+(((IkReal(-1.00000000000000))*(x888)*(IKcos(j7)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j7array[1], cj7array[1], sj7array[1];
bool j7valid[1]={false};
_nj7 = 1;
IkReal x889=((IKabs(cj6) != 0)?((IkReal)1/(cj6)):(IkReal)1.0e30);
IkReal x890=((IkReal(3.14495078152027e-5))*(x889));
if( IKabs(((x890)*(((((IkReal(100000.000405000))*(npy)*(sj9)))+(((IkReal(-100000.000405000))*(cj9)*(npx))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x890)*(((IKabs(cj8) != 0)?((IkReal)1/(cj8)):(IkReal)1.0e30))*(((((IkReal(31797.0000000000))*(sj6)*(sj8)))+(((IkReal(-100000.000405000))*(npz)))+(((IkReal(22444.0600908984))*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x890)*(((((IkReal(100000.000405000))*(npy)*(sj9)))+(((IkReal(-100000.000405000))*(cj9)*(npx)))))))+IKsqr(((x890)*(((IKabs(cj8) != 0)?((IkReal)1/(cj8)):(IkReal)1.0e30))*(((((IkReal(31797.0000000000))*(sj6)*(sj8)))+(((IkReal(-100000.000405000))*(npz)))+(((IkReal(22444.0600908984))*(sj8)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j7array[0]=IKatan2(((x890)*(((((IkReal(100000.000405000))*(npy)*(sj9)))+(((IkReal(-100000.000405000))*(cj9)*(npx)))))), ((x890)*(((IKabs(cj8) != 0)?((IkReal)1/(cj8)):(IkReal)1.0e30))*(((((IkReal(31797.0000000000))*(sj6)*(sj8)))+(((IkReal(-100000.000405000))*(npz)))+(((IkReal(22444.0600908984))*(sj8)))))));
sj7array[0]=IKsin(j7array[0]);
cj7array[0]=IKcos(j7array[0]);
if( j7array[0] > IKPI )
{
    j7array[0]-=IK2PI;
}
else if( j7array[0] < -IKPI )
{    j7array[0]+=IK2PI;
}
j7valid[0] = true;
for(int ij7 = 0; ij7 < 1; ++ij7)
{
if( !j7valid[ij7] )
{
    continue;
}
_ij7[0] = ij7; _ij7[1] = -1;
for(int iij7 = ij7+1; iij7 < 1; ++iij7)
{
if( j7valid[iij7] && IKabs(cj7array[ij7]-cj7array[iij7]) < IKFAST_SOLUTION_THRESH && IKabs(sj7array[ij7]-sj7array[iij7]) < IKFAST_SOLUTION_THRESH )
{
    j7valid[iij7]=false; _ij7[1] = iij7; break; 
}
}
j7 = j7array[ij7]; cj7 = cj7array[ij7]; sj7 = sj7array[ij7];
{
IkReal evalcond[4];
IkReal x891=IKcos(j7);
IkReal x892=((IkReal(0.317969998712222))*(sj8));
IkReal x893=((IkReal(0.317969998712222))*(cj6));
IkReal x894=((IkReal(1.00000000000000))*(npx)*(sj9));
IkReal x895=((IkReal(1.00000000000000))*(cj9)*(npy));
evalcond[0]=((((cj9)*(npx)))+(((x893)*(IKsin(j7))))+(((IkReal(-1.00000000000000))*(npy)*(sj9))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj6)*(x892)))+(npz)+(((cj8)*(x891)*(x893)))+(((IkReal(-0.224440600000000))*(sj8))));
evalcond[2]=((((IkReal(-0.0741000000000000))*(sj8)))+(((IkReal(-1.00000000000000))*(sj8)*(x894)))+(((IkReal(-1.00000000000000))*(sj8)*(x895)))+(((IkReal(-1.00000000000000))*(cj8)*(npz)))+(((IkReal(-1.00000000000000))*(x891)*(x893))));
evalcond[3]=((IkReal(-0.0741000000000000))+(((IkReal(-1.00000000000000))*(cj6)*(x891)*(x892)))+(((IkReal(-1.00000000000000))*(x895)))+(((IkReal(-1.00000000000000))*(x894)))+(((IkReal(-0.317969998712222))*(cj8)*(sj6)))+(((IkReal(-0.224440600000000))*(cj8))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j7array[1], cj7array[1], sj7array[1];
bool j7valid[1]={false};
_nj7 = 1;
IkReal x896=((IkReal(100000.000405000))*(cj9));
IkReal x897=((IkReal(100000.000405000))*(sj9));
if( IKabs(((gconst3)*(((((IkReal(-1.00000000000000))*(npx)*(x896)))+(((npy)*(x897))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((IkReal(-7410.00003001050))*(sj8)))+(((IkReal(-1.00000000000000))*(npx)*(sj8)*(x897)))+(((IkReal(-1.00000000000000))*(npy)*(sj8)*(x896)))+(((IkReal(-100000.000405000))*(cj8)*(npz))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j7array[0]=IKatan2(((gconst3)*(((((IkReal(-1.00000000000000))*(npx)*(x896)))+(((npy)*(x897)))))), ((gconst3)*(((((IkReal(-7410.00003001050))*(sj8)))+(((IkReal(-1.00000000000000))*(npx)*(sj8)*(x897)))+(((IkReal(-1.00000000000000))*(npy)*(sj8)*(x896)))+(((IkReal(-100000.000405000))*(cj8)*(npz)))))));
sj7array[0]=IKsin(j7array[0]);
cj7array[0]=IKcos(j7array[0]);
if( j7array[0] > IKPI )
{
    j7array[0]-=IK2PI;
}
else if( j7array[0] < -IKPI )
{    j7array[0]+=IK2PI;
}
j7valid[0] = true;
for(int ij7 = 0; ij7 < 1; ++ij7)
{
if( !j7valid[ij7] )
{
    continue;
}
_ij7[0] = ij7; _ij7[1] = -1;
for(int iij7 = ij7+1; iij7 < 1; ++iij7)
{
if( j7valid[iij7] && IKabs(cj7array[ij7]-cj7array[iij7]) < IKFAST_SOLUTION_THRESH && IKabs(sj7array[ij7]-sj7array[iij7]) < IKFAST_SOLUTION_THRESH )
{
    j7valid[iij7]=false; _ij7[1] = iij7; break; 
}
}
j7 = j7array[ij7]; cj7 = cj7array[ij7]; sj7 = sj7array[ij7];
{
IkReal evalcond[4];
IkReal x898=IKcos(j7);
IkReal x899=((IkReal(0.317969998712222))*(sj8));
IkReal x900=((IkReal(0.317969998712222))*(cj6));
IkReal x901=((IkReal(1.00000000000000))*(npx)*(sj9));
IkReal x902=((IkReal(1.00000000000000))*(cj9)*(npy));
evalcond[0]=((((cj9)*(npx)))+(((x900)*(IKsin(j7))))+(((IkReal(-1.00000000000000))*(npy)*(sj9))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj6)*(x899)))+(npz)+(((IkReal(-0.224440600000000))*(sj8)))+(((cj8)*(x898)*(x900))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj8)*(x901)))+(((IkReal(-1.00000000000000))*(sj8)*(x902)))+(((IkReal(-1.00000000000000))*(x898)*(x900)))+(((IkReal(-0.0741000000000000))*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(npz))));
evalcond[3]=((IkReal(-0.0741000000000000))+(((IkReal(-1.00000000000000))*(x902)))+(((IkReal(-1.00000000000000))*(x901)))+(((IkReal(-0.317969998712222))*(cj8)*(sj6)))+(((IkReal(-0.224440600000000))*(cj8)))+(((IkReal(-1.00000000000000))*(cj6)*(x898)*(x899))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}
}
}

}

}

} else
{
{
IkReal j8array[2], cj8array[2], sj8array[2];
bool j8valid[2]={false};
_nj8 = 2;
IkReal x903=((IkReal(-0.0741000000000000))+(((IkReal(-1.00000000000000))*(npx)*(sj9)))+(((IkReal(-1.00000000000000))*(cj9)*(npy))));
if( IKabs(x903) < IKFAST_ATAN2_MAGTHRESH && IKabs(npz) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x904=((IkReal(1.00000000000000))*(IKatan2(x903, npz)));
if( ((((x903)*(x903))+((npz)*(npz)))) < (IkReal)-0.00001 )
    continue;
if( (((IkReal(-1.00000000000000))*(((IKabs(IKabs(IKsqrt((((x903)*(x903))+((npz)*(npz)))))) != 0)?((IkReal)1/(IKabs(IKsqrt((((x903)*(x903))+((npz)*(npz))))))):(IkReal)1.0e30))*(((IkReal(-0.224440600000000))+(((IkReal(-0.317969998712222))*(sj6))))))) < -1-IKFAST_SINCOS_THRESH || (((IkReal(-1.00000000000000))*(((IKabs(IKabs(IKsqrt((((x903)*(x903))+((npz)*(npz)))))) != 0)?((IkReal)1/(IKabs(IKsqrt((((x903)*(x903))+((npz)*(npz))))))):(IkReal)1.0e30))*(((IkReal(-0.224440600000000))+(((IkReal(-0.317969998712222))*(sj6))))))) > 1+IKFAST_SINCOS_THRESH )
    continue;
IkReal x905=((IkReal(-1.00000000000000))*(IKasin(((IkReal(-1.00000000000000))*(((IKabs(IKabs(IKsqrt((((x903)*(x903))+((npz)*(npz)))))) != 0)?((IkReal)1/(IKabs(IKsqrt((((x903)*(x903))+((npz)*(npz))))))):(IkReal)1.0e30))*(((IkReal(-0.224440600000000))+(((IkReal(-0.317969998712222))*(sj6)))))))));
j8array[0]=((((IkReal(-1.00000000000000))*(x905)))+(((IkReal(-1.00000000000000))*(x904))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
j8array[1]=((IkReal(3.14159265358979))+(((IkReal(-1.00000000000000))*(x904)))+(((IkReal(1.00000000000000))*(x905))));
sj8array[1]=IKsin(j8array[1]);
cj8array[1]=IKcos(j8array[1]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
if( j8array[1] > IKPI )
{
    j8array[1]-=IK2PI;
}
else if( j8array[1] < -IKPI )
{    j8array[1]+=IK2PI;
}
j8valid[1] = true;
for(int ij8 = 0; ij8 < 2; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 2; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];

{
IkReal dummyeval[1];
IkReal gconst3;
gconst3=IKsign(cj6);
dummyeval[0]=cj6;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=cj6;
dummyeval[1]=cj8;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[4];
IkReal x906=((IkReal(-0.224440600000000))+(npz)+(((IkReal(-0.317969998712222))*(sj6))));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j8)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.145987693009410))+(((IkReal(0.142730754585940))*(sj6)))+(((IkReal(-0.148200000000000))*(npx)*(sj9)))+(((IkReal(-1.00000000000000))*(pp)))+(((IkReal(-0.148200000000000))*(cj9)*(npy))));
evalcond[2]=x906;
evalcond[3]=x906;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign(cj6);
dummyeval[0]=cj6;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j7array[1], cj7array[1], sj7array[1];
bool j7valid[1]={false};
_nj7 = 1;
IkReal x907=((IkReal(100000.000405000))*(npx));
IkReal x908=((IkReal(100000.000405000))*(npy));
if( IKabs(((gconst4)*(((((sj9)*(x908)))+(((IkReal(-1.00000000000000))*(cj9)*(x907))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((IkReal(-7410.00003001050))+(((IkReal(-1.00000000000000))*(sj9)*(x907)))+(((IkReal(-1.00000000000000))*(cj9)*(x908))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j7array[0]=IKatan2(((gconst4)*(((((sj9)*(x908)))+(((IkReal(-1.00000000000000))*(cj9)*(x907)))))), ((gconst4)*(((IkReal(-7410.00003001050))+(((IkReal(-1.00000000000000))*(sj9)*(x907)))+(((IkReal(-1.00000000000000))*(cj9)*(x908)))))));
sj7array[0]=IKsin(j7array[0]);
cj7array[0]=IKcos(j7array[0]);
if( j7array[0] > IKPI )
{
    j7array[0]-=IK2PI;
}
else if( j7array[0] < -IKPI )
{    j7array[0]+=IK2PI;
}
j7valid[0] = true;
for(int ij7 = 0; ij7 < 1; ++ij7)
{
if( !j7valid[ij7] )
{
    continue;
}
_ij7[0] = ij7; _ij7[1] = -1;
for(int iij7 = ij7+1; iij7 < 1; ++iij7)
{
if( j7valid[iij7] && IKabs(cj7array[ij7]-cj7array[iij7]) < IKFAST_SOLUTION_THRESH && IKabs(sj7array[ij7]-sj7array[iij7]) < IKFAST_SOLUTION_THRESH )
{
    j7valid[iij7]=false; _ij7[1] = iij7; break; 
}
}
j7 = j7array[ij7]; cj7 = cj7array[ij7]; sj7 = sj7array[ij7];
{
IkReal evalcond[2];
IkReal x909=((IkReal(0.317969998712222))*(cj6));
IkReal x910=((IkReal(1.00000000000000))*(npy));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj9)*(x910)))+(((cj9)*(npx)))+(((x909)*(IKsin(j7)))));
evalcond[1]=((IkReal(-0.0741000000000000))+(((IkReal(-1.00000000000000))*(npx)*(sj9)))+(((IkReal(-1.00000000000000))*(x909)*(IKcos(j7))))+(((IkReal(-1.00000000000000))*(cj9)*(x910))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
IkReal x911=((IkReal(0.317969998712222))*(sj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j8)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.145987693009410))+(((IkReal(0.142730754585940))*(sj6)))+(((IkReal(-0.148200000000000))*(npx)*(sj9)))+(((IkReal(-1.00000000000000))*(pp)))+(((IkReal(-0.148200000000000))*(cj9)*(npy))));
evalcond[2]=((IkReal(0.224440600000000))+(npz)+(x911));
evalcond[3]=((IkReal(-0.224440600000000))+(((IkReal(-1.00000000000000))*(npz)))+(((IkReal(-1.00000000000000))*(x911))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst5;
gconst5=IKsign(cj6);
dummyeval[0]=cj6;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j7array[1], cj7array[1], sj7array[1];
bool j7valid[1]={false};
_nj7 = 1;
IkReal x912=((IkReal(100000.000405000))*(npy));
IkReal x913=((IkReal(100000.000405000))*(npx));
if( IKabs(((gconst5)*(((((sj9)*(x912)))+(((IkReal(-1.00000000000000))*(cj9)*(x913))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((IkReal(7410.00003001050))+(((sj9)*(x913)))+(((cj9)*(x912))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j7array[0]=IKatan2(((gconst5)*(((((sj9)*(x912)))+(((IkReal(-1.00000000000000))*(cj9)*(x913)))))), ((gconst5)*(((IkReal(7410.00003001050))+(((sj9)*(x913)))+(((cj9)*(x912)))))));
sj7array[0]=IKsin(j7array[0]);
cj7array[0]=IKcos(j7array[0]);
if( j7array[0] > IKPI )
{
    j7array[0]-=IK2PI;
}
else if( j7array[0] < -IKPI )
{    j7array[0]+=IK2PI;
}
j7valid[0] = true;
for(int ij7 = 0; ij7 < 1; ++ij7)
{
if( !j7valid[ij7] )
{
    continue;
}
_ij7[0] = ij7; _ij7[1] = -1;
for(int iij7 = ij7+1; iij7 < 1; ++iij7)
{
if( j7valid[iij7] && IKabs(cj7array[ij7]-cj7array[iij7]) < IKFAST_SOLUTION_THRESH && IKabs(sj7array[ij7]-sj7array[iij7]) < IKFAST_SOLUTION_THRESH )
{
    j7valid[iij7]=false; _ij7[1] = iij7; break; 
}
}
j7 = j7array[ij7]; cj7 = cj7array[ij7]; sj7 = sj7array[ij7];
{
IkReal evalcond[2];
IkReal x914=((IkReal(0.317969998712222))*(cj6));
evalcond[0]=((((cj9)*(npx)))+(((IkReal(-1.00000000000000))*(npy)*(sj9)))+(((x914)*(IKsin(j7)))));
evalcond[1]=((IkReal(0.0741000000000000))+(((npx)*(sj9)))+(((cj9)*(npy)))+(((IkReal(-1.00000000000000))*(x914)*(IKcos(j7)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j7array[1], cj7array[1], sj7array[1];
bool j7valid[1]={false};
_nj7 = 1;
IkReal x915=((IKabs(cj6) != 0)?((IkReal)1/(cj6)):(IkReal)1.0e30);
IkReal x916=((IkReal(3.14495078152027e-5))*(x915));
if( IKabs(((x916)*(((((IkReal(100000.000405000))*(npy)*(sj9)))+(((IkReal(-100000.000405000))*(cj9)*(npx))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x916)*(((IKabs(cj8) != 0)?((IkReal)1/(cj8)):(IkReal)1.0e30))*(((((IkReal(31797.0000000000))*(sj6)*(sj8)))+(((IkReal(-100000.000405000))*(npz)))+(((IkReal(22444.0600908984))*(sj8))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x916)*(((((IkReal(100000.000405000))*(npy)*(sj9)))+(((IkReal(-100000.000405000))*(cj9)*(npx)))))))+IKsqr(((x916)*(((IKabs(cj8) != 0)?((IkReal)1/(cj8)):(IkReal)1.0e30))*(((((IkReal(31797.0000000000))*(sj6)*(sj8)))+(((IkReal(-100000.000405000))*(npz)))+(((IkReal(22444.0600908984))*(sj8)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j7array[0]=IKatan2(((x916)*(((((IkReal(100000.000405000))*(npy)*(sj9)))+(((IkReal(-100000.000405000))*(cj9)*(npx)))))), ((x916)*(((IKabs(cj8) != 0)?((IkReal)1/(cj8)):(IkReal)1.0e30))*(((((IkReal(31797.0000000000))*(sj6)*(sj8)))+(((IkReal(-100000.000405000))*(npz)))+(((IkReal(22444.0600908984))*(sj8)))))));
sj7array[0]=IKsin(j7array[0]);
cj7array[0]=IKcos(j7array[0]);
if( j7array[0] > IKPI )
{
    j7array[0]-=IK2PI;
}
else if( j7array[0] < -IKPI )
{    j7array[0]+=IK2PI;
}
j7valid[0] = true;
for(int ij7 = 0; ij7 < 1; ++ij7)
{
if( !j7valid[ij7] )
{
    continue;
}
_ij7[0] = ij7; _ij7[1] = -1;
for(int iij7 = ij7+1; iij7 < 1; ++iij7)
{
if( j7valid[iij7] && IKabs(cj7array[ij7]-cj7array[iij7]) < IKFAST_SOLUTION_THRESH && IKabs(sj7array[ij7]-sj7array[iij7]) < IKFAST_SOLUTION_THRESH )
{
    j7valid[iij7]=false; _ij7[1] = iij7; break; 
}
}
j7 = j7array[ij7]; cj7 = cj7array[ij7]; sj7 = sj7array[ij7];
{
IkReal evalcond[4];
IkReal x917=IKcos(j7);
IkReal x918=((IkReal(0.317969998712222))*(sj8));
IkReal x919=((IkReal(0.317969998712222))*(cj6));
IkReal x920=((IkReal(1.00000000000000))*(npx)*(sj9));
IkReal x921=((IkReal(1.00000000000000))*(cj9)*(npy));
evalcond[0]=((((x919)*(IKsin(j7))))+(((cj9)*(npx)))+(((IkReal(-1.00000000000000))*(npy)*(sj9))));
evalcond[1]=((((cj8)*(x917)*(x919)))+(npz)+(((IkReal(-1.00000000000000))*(sj6)*(x918)))+(((IkReal(-0.224440600000000))*(sj8))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj8)*(x920)))+(((IkReal(-1.00000000000000))*(sj8)*(x921)))+(((IkReal(-0.0741000000000000))*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(npz)))+(((IkReal(-1.00000000000000))*(x917)*(x919))));
evalcond[3]=((IkReal(-0.0741000000000000))+(((IkReal(-1.00000000000000))*(x921)))+(((IkReal(-1.00000000000000))*(x920)))+(((IkReal(-1.00000000000000))*(cj6)*(x917)*(x918)))+(((IkReal(-0.317969998712222))*(cj8)*(sj6)))+(((IkReal(-0.224440600000000))*(cj8))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j7array[1], cj7array[1], sj7array[1];
bool j7valid[1]={false};
_nj7 = 1;
IkReal x922=((IkReal(100000.000405000))*(cj9));
IkReal x923=((IkReal(100000.000405000))*(sj9));
if( IKabs(((gconst3)*(((((IkReal(-1.00000000000000))*(npx)*(x922)))+(((npy)*(x923))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((IkReal(-7410.00003001050))*(sj8)))+(((IkReal(-1.00000000000000))*(npx)*(sj8)*(x923)))+(((IkReal(-1.00000000000000))*(npy)*(sj8)*(x922)))+(((IkReal(-100000.000405000))*(cj8)*(npz))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j7array[0]=IKatan2(((gconst3)*(((((IkReal(-1.00000000000000))*(npx)*(x922)))+(((npy)*(x923)))))), ((gconst3)*(((((IkReal(-7410.00003001050))*(sj8)))+(((IkReal(-1.00000000000000))*(npx)*(sj8)*(x923)))+(((IkReal(-1.00000000000000))*(npy)*(sj8)*(x922)))+(((IkReal(-100000.000405000))*(cj8)*(npz)))))));
sj7array[0]=IKsin(j7array[0]);
cj7array[0]=IKcos(j7array[0]);
if( j7array[0] > IKPI )
{
    j7array[0]-=IK2PI;
}
else if( j7array[0] < -IKPI )
{    j7array[0]+=IK2PI;
}
j7valid[0] = true;
for(int ij7 = 0; ij7 < 1; ++ij7)
{
if( !j7valid[ij7] )
{
    continue;
}
_ij7[0] = ij7; _ij7[1] = -1;
for(int iij7 = ij7+1; iij7 < 1; ++iij7)
{
if( j7valid[iij7] && IKabs(cj7array[ij7]-cj7array[iij7]) < IKFAST_SOLUTION_THRESH && IKabs(sj7array[ij7]-sj7array[iij7]) < IKFAST_SOLUTION_THRESH )
{
    j7valid[iij7]=false; _ij7[1] = iij7; break; 
}
}
j7 = j7array[ij7]; cj7 = cj7array[ij7]; sj7 = sj7array[ij7];
{
IkReal evalcond[4];
IkReal x924=IKcos(j7);
IkReal x925=((IkReal(0.317969998712222))*(sj8));
IkReal x926=((IkReal(0.317969998712222))*(cj6));
IkReal x927=((IkReal(1.00000000000000))*(npx)*(sj9));
IkReal x928=((IkReal(1.00000000000000))*(cj9)*(npy));
evalcond[0]=((((x926)*(IKsin(j7))))+(((cj9)*(npx)))+(((IkReal(-1.00000000000000))*(npy)*(sj9))));
evalcond[1]=((npz)+(((cj8)*(x924)*(x926)))+(((IkReal(-1.00000000000000))*(sj6)*(x925)))+(((IkReal(-0.224440600000000))*(sj8))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x924)*(x926)))+(((IkReal(-1.00000000000000))*(sj8)*(x928)))+(((IkReal(-1.00000000000000))*(sj8)*(x927)))+(((IkReal(-0.0741000000000000))*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(npz))));
evalcond[3]=((IkReal(-0.0741000000000000))+(((IkReal(-1.00000000000000))*(x927)))+(((IkReal(-1.00000000000000))*(x928)))+(((IkReal(-1.00000000000000))*(cj6)*(x924)*(x925)))+(((IkReal(-0.317969998712222))*(cj8)*(sj6)))+(((IkReal(-0.224440600000000))*(cj8))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}
}
}

}

}
}
}

}

}
}
return solutions.GetNumSolutions()>0;
}
inline void rotationfunction0(IkSolutionListBase<IkReal>& solutions) {
for(int rotationiter = 0; rotationiter < 1; ++rotationiter) {
IkReal x110=((IkReal(0.00190999651607403))*(cj7));
IkReal x111=((IkReal(1.00000000000000))*(sj7));
IkReal x112=((((IkReal(0.00190999650833855))*(cj6)))+(((IkReal(-1.71899685750469e-7))*(sj6))));
IkReal x113=((((IkReal(-8.99998354714498e-5))*(sj6)))+(((IkReal(0.999998171904998))*(cj6))));
IkReal x114=((((IkReal(-0.999999995950000))*(cj6)))+(((IkReal(8.99999996355000e-5))*(sj6))));
IkReal x115=((IkReal(-1.00000000000000))*(sj7));
IkReal x116=((IkReal(-1.00000000000000))*(cj7));
IkReal x117=((IkReal(-1.00000000000000))*(cj8));
IkReal x118=((IkReal(-1.00000000000000))*(sj9));
IkReal x119=((((IkReal(-0.00190999650833855))*(sj6)))+(((IkReal(-1.71899685750469e-7))*(cj6))));
IkReal x120=((((IkReal(-8.99998354714498e-5))*(cj6)))+(((IkReal(-0.999998171904998))*(sj6))));
IkReal x121=((sj8)*(x113));
IkReal x122=((((IkReal(-8.99999996355000e-5))*(cj6)))+(((IkReal(-0.999999995950000))*(sj6))));
IkReal x123=((cj9)*(x114));
IkReal x124=((IkReal(1.00000000000000))*(x120));
IkReal x125=((x113)*(x117));
IkReal x126=((((IkReal(-1.00000000000000))*(x111)*(x120)))+(x110));
IkReal x127=((((IkReal(0.999998175954991))*(sj7)))+(((x116)*(x119))));
IkReal x128=((((IkReal(-1.00000000000000))*(x111)*(x119)))+(((IkReal(-0.999998175954991))*(cj7))));
IkReal x129=((x110)+(((x115)*(x120))));
IkReal x130=((((IkReal(-0.00190999651607403))*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x124))));
IkReal x131=((((IkReal(-0.00190999651607403))*(sj7)))+(((x116)*(x120))));
IkReal x132=((((sj8)*(x122)))+(((cj8)*(x114)*(x116))));
IkReal x133=((((cj8)*(x127)))+(((sj8)*(x112))));
IkReal x134=((((x117)*(x122)))+(((sj8)*(x114)*(x116))));
IkReal x135=((((sj8)*(x127)))+(((x112)*(x117))));
IkReal x136=((x125)+(((sj8)*(x130))));
IkReal x137=((((cj8)*(x131)))+(x121));
IkReal x138=((sj9)*(x134));
IkReal x139=((x125)+(((sj8)*(x131))));
IkReal x140=((((cj9)*(x134)))+(((sj7)*(sj9)*(x114))));
IkReal x141=((((IkReal(-1.00000000000000))*(x111)*(x123)))+(x138));
IkReal x142=((((cj9)*(x135)))+(((IkReal(-1.00000000000000))*(sj9)*(x128))));
IkReal x143=((((sj9)*(x135)))+(((cj9)*(x128))));
IkReal x144=((((sj9)*(x139)))+(((cj9)*(x126))));
IkReal x145=((((cj9)*(x139)))+(((x118)*(x126))));
new_r00=((((r01)*(x142)))+(((r02)*(x133)))+(((r00)*(x143))));
new_r01=((((r12)*(x133)))+(((r11)*(x142)))+(((r10)*(x143))));
new_r02=((((r20)*(x143)))+(((r22)*(x133)))+(((r21)*(x142))));
new_r10=((((r02)*(((((cj8)*(x130)))+(x121)))))+(((r00)*(((((sj9)*(x136)))+(((cj9)*(x129)))))))+(((r01)*(((((cj9)*(x136)))+(((x118)*(x129))))))));
new_r11=((((r12)*(x137)))+(((r11)*(x145)))+(((r10)*(x144))));
new_r12=((((r20)*(x144)))+(((r22)*(x137)))+(((r21)*(x145))));
new_r20=((((r01)*(x140)))+(((r00)*(((x138)+(((x115)*(x123)))))))+(((r02)*(x132))));
new_r21=((((r12)*(x132)))+(((r11)*(x140)))+(((r10)*(x141))));
new_r22=((((r20)*(x141)))+(((r22)*(x132)))+(((r21)*(x140))));
{
IkReal j4array[2], cj4array[2], sj4array[2];
bool j4valid[2]={false};
_nj4 = 2;
sj4array[0]=((IkReal(-1.00000000000000))*(new_r22));
if( sj4array[0] >= -1-IKFAST_SINCOS_THRESH && sj4array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j4valid[0] = j4valid[1] = true;
    j4array[0] = IKasin(sj4array[0]);
    cj4array[0] = IKcos(j4array[0]);
    sj4array[1] = sj4array[0];
    j4array[1] = j4array[0] > 0 ? (IKPI-j4array[0]) : (-IKPI-j4array[0]);
    cj4array[1] = -cj4array[0];
}
else if( isnan(sj4array[0]) )
{
    // probably any value will work
    j4valid[0] = true;
    cj4array[0] = 1; sj4array[0] = 0; j4array[0] = 0;
}
for(int ij4 = 0; ij4 < 2; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 2; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];

{
IkReal dummyeval[1];
IkReal gconst7;
gconst7=IKsign((((new_r12)*(new_r12))+((new_r02)*(new_r02))));
dummyeval[0]=(((new_r12)*(new_r12))+((new_r02)*(new_r02)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst8;
gconst8=IKsign(((((cj4)*(new_r10)*(new_r12)))+(((cj4)*(new_r00)*(new_r02)))));
dummyeval[0]=((((cj4)*(new_r10)*(new_r12)))+(((cj4)*(new_r00)*(new_r02))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst6;
gconst6=IKsign(cj4);
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x146=((IkReal(1.00000000000000))+(new_r22));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=x146;
evalcond[2]=new_r20;
evalcond[3]=new_r21;
evalcond[4]=new_r20;
evalcond[5]=new_r21;
evalcond[6]=x146;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
if( IKabs(new_r12) < IKFAST_ATAN2_MAGTHRESH && IKabs(new_r02) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x147=IKatan2(new_r12, new_r02);
j5array[0]=((IkReal(-1.00000000000000))*(x147));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
j5array[1]=((IkReal(3.14159265358979))+(((IkReal(-1.00000000000000))*(x147))));
sj5array[1]=IKsin(j5array[1]);
cj5array[1]=IKcos(j5array[1]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
if( j5array[1] > IKPI )
{
    j5array[1]-=IK2PI;
}
else if( j5array[1] < -IKPI )
{    j5array[1]+=IK2PI;
}
j5valid[1] = true;
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[1];
evalcond[0]=((((IkReal(-1.00000000000000))*(new_r12)*(IKsin(j5))))+(((new_r02)*(IKcos(j5)))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x148=((IkReal(0.999999995000000))*(sj5));
IkReal x149=((cj5)*(new_r10));
IkReal x150=((cj5)*(new_r11));
IkReal x151=((IkReal(9.99999995000000e-5))*(sj5));
if( IKabs(((((IkReal(-1.00000000000000))*(new_r01)*(x148)))+(((IkReal(-0.999999995000000))*(x150)))+(((new_r00)*(x151)))+(((IkReal(9.99999995000000e-5))*(x149))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-0.999999995000000))*(x149)))+(((IkReal(-9.99999995000000e-5))*(x150)))+(((IkReal(-1.00000000000000))*(new_r00)*(x148)))+(((IkReal(-1.00000000000000))*(new_r01)*(x151))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(new_r01)*(x148)))+(((IkReal(-0.999999995000000))*(x150)))+(((new_r00)*(x151)))+(((IkReal(9.99999995000000e-5))*(x149)))))+IKsqr(((((IkReal(-0.999999995000000))*(x149)))+(((IkReal(-9.99999995000000e-5))*(x150)))+(((IkReal(-1.00000000000000))*(new_r00)*(x148)))+(((IkReal(-1.00000000000000))*(new_r01)*(x151)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((IkReal(-1.00000000000000))*(new_r01)*(x148)))+(((IkReal(-0.999999995000000))*(x150)))+(((new_r00)*(x151)))+(((IkReal(9.99999995000000e-5))*(x149)))), ((((IkReal(-0.999999995000000))*(x149)))+(((IkReal(-9.99999995000000e-5))*(x150)))+(((IkReal(-1.00000000000000))*(new_r00)*(x148)))+(((IkReal(-1.00000000000000))*(new_r01)*(x151)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x152=IKsin(j3);
IkReal x153=IKcos(j3);
IkReal x154=((IkReal(1.00000000000000))*(sj5));
IkReal x155=((IkReal(0.999999995000000))*(x152));
IkReal x156=((IkReal(9.99999995000000e-5))*(x153));
IkReal x157=((IkReal(0.999999995000000))*(x153));
IkReal x158=((IkReal(9.99999995000000e-5))*(x152));
IkReal x159=((x156)+(x155));
evalcond[0]=((((IkReal(-1.00000000000000))*(x158)))+(((cj5)*(new_r10)))+(((new_r00)*(sj5)))+(x157));
evalcond[1]=((((cj5)*(new_r11)))+(((new_r01)*(sj5)))+(x159));
evalcond[2]=((((IkReal(-1.00000000000000))*(x159)))+(((cj5)*(new_r00)))+(((IkReal(-1.00000000000000))*(new_r10)*(x154))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x158)))+(((cj5)*(new_r01)))+(x157)+(((IkReal(-1.00000000000000))*(new_r11)*(x154))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j9;
vinfos[6].indices[0] = _ij9[0];
vinfos[6].indices[1] = _ij9[1];
vinfos[6].maxsolutions = _nj9;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

} else
{
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-1.00000000000000))+(new_r22));
evalcond[2]=((IkReal(-1.00000000000000))*(new_r20));
evalcond[3]=((IkReal(-1.00000000000000))*(new_r21));
evalcond[4]=new_r20;
evalcond[5]=new_r21;
evalcond[6]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(new_r22))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
if( IKabs(new_r12) < IKFAST_ATAN2_MAGTHRESH && IKabs(new_r02) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x160=IKatan2(new_r12, new_r02);
j5array[0]=((IkReal(-1.00000000000000))*(x160));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
j5array[1]=((IkReal(3.14159265358979))+(((IkReal(-1.00000000000000))*(x160))));
sj5array[1]=IKsin(j5array[1]);
cj5array[1]=IKcos(j5array[1]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
if( j5array[1] > IKPI )
{
    j5array[1]-=IK2PI;
}
else if( j5array[1] < -IKPI )
{    j5array[1]+=IK2PI;
}
j5valid[1] = true;
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[1];
evalcond[0]=((((IkReal(-1.00000000000000))*(new_r12)*(IKsin(j5))))+(((new_r02)*(IKcos(j5)))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x161=((IkReal(0.999999995000000))*(sj5));
IkReal x162=((cj5)*(new_r10));
IkReal x163=((cj5)*(new_r11));
IkReal x164=((IkReal(9.99999995000000e-5))*(sj5));
if( IKabs(((((new_r00)*(x164)))+(((IkReal(-0.999999995000000))*(x163)))+(((IkReal(9.99999995000000e-5))*(x162)))+(((IkReal(-1.00000000000000))*(new_r01)*(x161))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(new_r00)*(x161)))+(((IkReal(-9.99999995000000e-5))*(x163)))+(((IkReal(-0.999999995000000))*(x162)))+(((IkReal(-1.00000000000000))*(new_r01)*(x164))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((new_r00)*(x164)))+(((IkReal(-0.999999995000000))*(x163)))+(((IkReal(9.99999995000000e-5))*(x162)))+(((IkReal(-1.00000000000000))*(new_r01)*(x161)))))+IKsqr(((((IkReal(-1.00000000000000))*(new_r00)*(x161)))+(((IkReal(-9.99999995000000e-5))*(x163)))+(((IkReal(-0.999999995000000))*(x162)))+(((IkReal(-1.00000000000000))*(new_r01)*(x164)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((new_r00)*(x164)))+(((IkReal(-0.999999995000000))*(x163)))+(((IkReal(9.99999995000000e-5))*(x162)))+(((IkReal(-1.00000000000000))*(new_r01)*(x161)))), ((((IkReal(-1.00000000000000))*(new_r00)*(x161)))+(((IkReal(-9.99999995000000e-5))*(x163)))+(((IkReal(-0.999999995000000))*(x162)))+(((IkReal(-1.00000000000000))*(new_r01)*(x164)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x165=IKsin(j3);
IkReal x166=IKcos(j3);
IkReal x167=((IkReal(1.00000000000000))*(sj5));
IkReal x168=((IkReal(0.999999995000000))*(x165));
IkReal x169=((IkReal(9.99999995000000e-5))*(x166));
IkReal x170=((IkReal(9.99999995000000e-5))*(x165));
IkReal x171=((IkReal(0.999999995000000))*(x166));
IkReal x172=((x168)+(x169));
evalcond[0]=((((IkReal(-1.00000000000000))*(x170)))+(((cj5)*(new_r10)))+(((new_r00)*(sj5)))+(x171));
evalcond[1]=((((cj5)*(new_r11)))+(((new_r01)*(sj5)))+(x172));
evalcond[2]=((((cj5)*(new_r00)))+(((IkReal(-1.00000000000000))*(new_r10)*(x167)))+(x172));
evalcond[3]=((((IkReal(-1.00000000000000))*(x171)))+(((IkReal(-1.00000000000000))*(new_r11)*(x167)))+(((cj5)*(new_r01)))+(x170));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j9;
vinfos[6].indices[0] = _ij9[0];
vinfos[6].indices[1] = _ij9[1];
vinfos[6].maxsolutions = _nj9;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs(((gconst6)*(((((IkReal(-100000000.500000))*(new_r20)))+(((IkReal(-10000.0000500000))*(new_r21))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((((IkReal(100000000.500000))*(new_r21)))+(((IkReal(-10000.0000500000))*(new_r20))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst6)*(((((IkReal(-100000000.500000))*(new_r20)))+(((IkReal(-10000.0000500000))*(new_r21)))))), ((gconst6)*(((((IkReal(100000000.500000))*(new_r21)))+(((IkReal(-10000.0000500000))*(new_r20)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[2];
IkReal x173=IKsin(j3);
IkReal x174=IKcos(j3);
IkReal x175=((cj4)*(x174));
IkReal x176=((cj4)*(x173));
evalcond[0]=((((IkReal(9.99999995000000e-5))*(x175)))+(((IkReal(0.999999995000000))*(x176)))+(new_r20));
evalcond[1]=((((IkReal(-0.999999995000000))*(x175)))+(((IkReal(9.99999995000000e-5))*(x176)))+(new_r21));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst9;
gconst9=IKsign((((new_r12)*(new_r12))+((new_r02)*(new_r02))));
dummyeval[0]=(((new_r12)*(new_r12))+((new_r02)*(new_r02)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst10;
gconst10=IKsign(((((cj4)*(new_r10)*(new_r12)))+(((cj4)*(new_r00)*(new_r02)))));
dummyeval[0]=((((cj4)*(new_r10)*(new_r12)))+(((cj4)*(new_r00)*(new_r02))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x177=((IkReal(1.00000000000000))+(new_r22));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=x177;
evalcond[2]=new_r20;
evalcond[3]=new_r21;
evalcond[4]=new_r20;
evalcond[5]=new_r21;
evalcond[6]=x177;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst11;
gconst11=IKsign(((((IkReal(-1.00000000000000))*(new_r00)*(new_r12)))+(((new_r02)*(new_r10)))));
dummyeval[0]=((((IkReal(-1.00000000000000))*(new_r00)*(new_r12)))+(((new_r02)*(new_r10))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst12;
gconst12=IKsign(((((IkReal(-1.00000000000000))*(new_r01)*(new_r12)))+(((new_r02)*(new_r11)))));
dummyeval[0]=((((IkReal(-1.00000000000000))*(new_r01)*(new_r12)))+(((new_r02)*(new_r11))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x178=((IkReal(9.99999995000000e-5))*(cj3));
IkReal x179=((IkReal(0.999999995000000))*(sj3));
if( IKabs(((gconst12)*(((((new_r12)*(x179)))+(((new_r12)*(x178))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst12)*(((((IkReal(-1.00000000000000))*(new_r02)*(x179)))+(((IkReal(-1.00000000000000))*(new_r02)*(x178))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst12)*(((((new_r12)*(x179)))+(((new_r12)*(x178)))))), ((gconst12)*(((((IkReal(-1.00000000000000))*(new_r02)*(x179)))+(((IkReal(-1.00000000000000))*(new_r02)*(x178)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x180=IKcos(j5);
IkReal x181=IKsin(j5);
IkReal x182=((IkReal(9.99999995000000e-5))*(cj3));
IkReal x183=((IkReal(0.999999995000000))*(sj3));
IkReal x184=((IkReal(0.999999995000000))*(cj3));
IkReal x185=((IkReal(9.99999995000000e-5))*(sj3));
IkReal x186=((IkReal(1.00000000000000))*(x181));
IkReal x187=((x182)+(x183));
evalcond[0]=((((new_r02)*(x181)))+(((new_r12)*(x180))));
evalcond[1]=((((new_r02)*(x180)))+(((IkReal(-1.00000000000000))*(new_r12)*(x186))));
evalcond[2]=((((new_r10)*(x180)))+(((new_r00)*(x181)))+(((IkReal(-1.00000000000000))*(x185)))+(x184));
evalcond[3]=((((new_r11)*(x180)))+(((new_r01)*(x181)))+(x187));
evalcond[4]=((((new_r00)*(x180)))+(((IkReal(-1.00000000000000))*(x187)))+(((IkReal(-1.00000000000000))*(new_r10)*(x186))));
evalcond[5]=((((new_r01)*(x180)))+(((IkReal(-1.00000000000000))*(x185)))+(x184)+(((IkReal(-1.00000000000000))*(new_r11)*(x186))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j9;
vinfos[6].indices[0] = _ij9[0];
vinfos[6].indices[1] = _ij9[1];
vinfos[6].maxsolutions = _nj9;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x188=((IkReal(0.999999995000000))*(cj3));
IkReal x189=((IkReal(9.99999995000000e-5))*(sj3));
if( IKabs(((gconst11)*(((((new_r12)*(x188)))+(((IkReal(-1.00000000000000))*(new_r12)*(x189))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst11)*(((((new_r02)*(x189)))+(((IkReal(-1.00000000000000))*(new_r02)*(x188))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst11)*(((((new_r12)*(x188)))+(((IkReal(-1.00000000000000))*(new_r12)*(x189)))))), ((gconst11)*(((((new_r02)*(x189)))+(((IkReal(-1.00000000000000))*(new_r02)*(x188)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x190=IKcos(j5);
IkReal x191=IKsin(j5);
IkReal x192=((IkReal(9.99999995000000e-5))*(cj3));
IkReal x193=((IkReal(0.999999995000000))*(sj3));
IkReal x194=((IkReal(0.999999995000000))*(cj3));
IkReal x195=((IkReal(9.99999995000000e-5))*(sj3));
IkReal x196=((IkReal(1.00000000000000))*(x191));
IkReal x197=((x193)+(x192));
evalcond[0]=((((new_r02)*(x191)))+(((new_r12)*(x190))));
evalcond[1]=((((new_r02)*(x190)))+(((IkReal(-1.00000000000000))*(new_r12)*(x196))));
evalcond[2]=((((new_r10)*(x190)))+(((new_r00)*(x191)))+(((IkReal(-1.00000000000000))*(x195)))+(x194));
evalcond[3]=((((new_r11)*(x190)))+(((new_r01)*(x191)))+(x197));
evalcond[4]=((((new_r00)*(x190)))+(((IkReal(-1.00000000000000))*(x197)))+(((IkReal(-1.00000000000000))*(new_r10)*(x196))));
evalcond[5]=((((new_r01)*(x190)))+(((IkReal(-1.00000000000000))*(x195)))+(x194)+(((IkReal(-1.00000000000000))*(new_r11)*(x196))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j9;
vinfos[6].indices[0] = _ij9[0];
vinfos[6].indices[1] = _ij9[1];
vinfos[6].maxsolutions = _nj9;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-1.00000000000000))+(new_r22));
evalcond[2]=((IkReal(-1.00000000000000))*(new_r20));
evalcond[3]=((IkReal(-1.00000000000000))*(new_r21));
evalcond[4]=new_r20;
evalcond[5]=new_r21;
evalcond[6]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(new_r22))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst13;
gconst13=IKsign(((((IkReal(-1.00000000000000))*(new_r00)*(new_r12)))+(((new_r02)*(new_r10)))));
dummyeval[0]=((((IkReal(-1.00000000000000))*(new_r00)*(new_r12)))+(((new_r02)*(new_r10))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst14;
gconst14=IKsign(((((IkReal(-1.00000000000000))*(new_r01)*(new_r12)))+(((new_r02)*(new_r11)))));
dummyeval[0]=((((IkReal(-1.00000000000000))*(new_r01)*(new_r12)))+(((new_r02)*(new_r11))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x198=((IkReal(9.99999995000000e-5))*(cj3));
IkReal x199=((IkReal(0.999999995000000))*(sj3));
if( IKabs(((gconst14)*(((((new_r12)*(x198)))+(((new_r12)*(x199))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst14)*(((((IkReal(-1.00000000000000))*(new_r02)*(x198)))+(((IkReal(-1.00000000000000))*(new_r02)*(x199))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst14)*(((((new_r12)*(x198)))+(((new_r12)*(x199)))))), ((gconst14)*(((((IkReal(-1.00000000000000))*(new_r02)*(x198)))+(((IkReal(-1.00000000000000))*(new_r02)*(x199)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x200=IKcos(j5);
IkReal x201=IKsin(j5);
IkReal x202=((IkReal(9.99999995000000e-5))*(cj3));
IkReal x203=((IkReal(0.999999995000000))*(sj3));
IkReal x204=((IkReal(9.99999995000000e-5))*(sj3));
IkReal x205=((IkReal(0.999999995000000))*(cj3));
IkReal x206=((IkReal(1.00000000000000))*(x201));
IkReal x207=((x203)+(x202));
evalcond[0]=((((new_r02)*(x201)))+(((new_r12)*(x200))));
evalcond[1]=((((new_r02)*(x200)))+(((IkReal(-1.00000000000000))*(new_r12)*(x206))));
evalcond[2]=((((new_r10)*(x200)))+(((new_r00)*(x201)))+(((IkReal(-1.00000000000000))*(x204)))+(x205));
evalcond[3]=((((new_r11)*(x200)))+(((new_r01)*(x201)))+(x207));
evalcond[4]=((((new_r00)*(x200)))+(x207)+(((IkReal(-1.00000000000000))*(new_r10)*(x206))));
evalcond[5]=((((new_r01)*(x200)))+(((IkReal(-1.00000000000000))*(x205)))+(x204)+(((IkReal(-1.00000000000000))*(new_r11)*(x206))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j9;
vinfos[6].indices[0] = _ij9[0];
vinfos[6].indices[1] = _ij9[1];
vinfos[6].maxsolutions = _nj9;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x208=((IkReal(0.999999995000000))*(cj3));
IkReal x209=((IkReal(9.99999995000000e-5))*(sj3));
if( IKabs(((gconst13)*(((((IkReal(-1.00000000000000))*(new_r12)*(x209)))+(((new_r12)*(x208))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst13)*(((((IkReal(-1.00000000000000))*(new_r02)*(x208)))+(((new_r02)*(x209))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst13)*(((((IkReal(-1.00000000000000))*(new_r12)*(x209)))+(((new_r12)*(x208)))))), ((gconst13)*(((((IkReal(-1.00000000000000))*(new_r02)*(x208)))+(((new_r02)*(x209)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x210=IKcos(j5);
IkReal x211=IKsin(j5);
IkReal x212=((IkReal(9.99999995000000e-5))*(cj3));
IkReal x213=((IkReal(0.999999995000000))*(sj3));
IkReal x214=((IkReal(9.99999995000000e-5))*(sj3));
IkReal x215=((IkReal(0.999999995000000))*(cj3));
IkReal x216=((IkReal(1.00000000000000))*(x211));
IkReal x217=((x212)+(x213));
evalcond[0]=((((new_r02)*(x211)))+(((new_r12)*(x210))));
evalcond[1]=((((IkReal(-1.00000000000000))*(new_r12)*(x216)))+(((new_r02)*(x210))));
evalcond[2]=((x215)+(((new_r00)*(x211)))+(((IkReal(-1.00000000000000))*(x214)))+(((new_r10)*(x210))));
evalcond[3]=((x217)+(((new_r01)*(x211)))+(((new_r11)*(x210))));
evalcond[4]=((((IkReal(-1.00000000000000))*(new_r10)*(x216)))+(x217)+(((new_r00)*(x210))));
evalcond[5]=((((IkReal(-1.00000000000000))*(new_r11)*(x216)))+(x214)+(((new_r01)*(x210)))+(((IkReal(-1.00000000000000))*(x215))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j9;
vinfos[6].indices[0] = _ij9[0];
vinfos[6].indices[1] = _ij9[1];
vinfos[6].maxsolutions = _nj9;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x218=((gconst10)*(new_r20)*(sj4));
if( IKabs(((new_r12)*(x218))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-1.00000000000000))*(new_r02)*(x218))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((new_r12)*(x218)), ((IkReal(-1.00000000000000))*(new_r02)*(x218)));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[12];
IkReal x219=IKcos(j5);
IkReal x220=IKsin(j5);
IkReal x221=((IkReal(9.99999995000000e-5))*(cj3));
IkReal x222=((IkReal(0.999999995000000))*(sj3));
IkReal x223=((IkReal(0.999999995000000))*(cj3));
IkReal x224=((IkReal(9.99999995000000e-5))*(sj3));
IkReal x225=((IkReal(1.00000000000000))*(cj4));
IkReal x226=((new_r02)*(x219));
IkReal x227=((IkReal(1.00000000000000))*(x220));
IkReal x228=((new_r01)*(x219));
IkReal x229=((new_r00)*(x219));
IkReal x230=((x221)+(x222));
evalcond[0]=((((new_r02)*(x220)))+(((new_r12)*(x219))));
evalcond[1]=((cj4)+(x226)+(((IkReal(-1.00000000000000))*(new_r12)*(x227))));
evalcond[2]=((((new_r20)*(sj4)))+(((IkReal(-1.00000000000000))*(new_r10)*(x220)*(x225)))+(((cj4)*(x229))));
evalcond[3]=((((IkReal(-1.00000000000000))*(new_r11)*(x220)*(x225)))+(((cj4)*(x228)))+(((new_r21)*(sj4))));
evalcond[4]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(new_r12)*(x220)*(x225)))+(((new_r22)*(sj4)))+(((cj4)*(x226))));
evalcond[5]=((((sj4)*(x226)))+(((IkReal(-1.00000000000000))*(new_r12)*(sj4)*(x227)))+(((IkReal(-1.00000000000000))*(new_r22)*(x225))));
evalcond[6]=((((new_r00)*(x220)))+(x223)+(((new_r10)*(x219)))+(((IkReal(-1.00000000000000))*(x224))));
evalcond[7]=((((new_r01)*(x220)))+(x230)+(((new_r11)*(x219))));
evalcond[8]=((((IkReal(-1.00000000000000))*(new_r10)*(x227)))+(((IkReal(-1.00000000000000))*(sj4)*(x221)))+(((IkReal(-1.00000000000000))*(sj4)*(x222)))+(x229));
evalcond[9]=((((sj4)*(x223)))+(((IkReal(-1.00000000000000))*(new_r11)*(x227)))+(((IkReal(-1.00000000000000))*(sj4)*(x224)))+(x228));
evalcond[10]=((((sj4)*(x229)))+(((IkReal(-1.00000000000000))*(x230)))+(((IkReal(-1.00000000000000))*(new_r10)*(sj4)*(x227)))+(((IkReal(-1.00000000000000))*(new_r20)*(x225))));
evalcond[11]=((((sj4)*(x228)))+(x223)+(((IkReal(-1.00000000000000))*(new_r11)*(sj4)*(x227)))+(((IkReal(-1.00000000000000))*(new_r21)*(x225)))+(((IkReal(-1.00000000000000))*(x224))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  || IKabs(evalcond[10]) > 0.000001  || IKabs(evalcond[11]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j9;
vinfos[6].indices[0] = _ij9[0];
vinfos[6].indices[1] = _ij9[1];
vinfos[6].maxsolutions = _nj9;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x231=((cj4)*(gconst9));
if( IKabs(((new_r12)*(x231))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-1.00000000000000))*(new_r02)*(x231))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((new_r12)*(x231)), ((IkReal(-1.00000000000000))*(new_r02)*(x231)));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[12];
IkReal x232=IKcos(j5);
IkReal x233=IKsin(j5);
IkReal x234=((IkReal(9.99999995000000e-5))*(cj3));
IkReal x235=((IkReal(0.999999995000000))*(sj3));
IkReal x236=((IkReal(0.999999995000000))*(cj3));
IkReal x237=((IkReal(9.99999995000000e-5))*(sj3));
IkReal x238=((IkReal(1.00000000000000))*(cj4));
IkReal x239=((new_r02)*(x232));
IkReal x240=((IkReal(1.00000000000000))*(x233));
IkReal x241=((new_r01)*(x232));
IkReal x242=((new_r00)*(x232));
IkReal x243=((x234)+(x235));
evalcond[0]=((((new_r02)*(x233)))+(((new_r12)*(x232))));
evalcond[1]=((cj4)+(x239)+(((IkReal(-1.00000000000000))*(new_r12)*(x240))));
evalcond[2]=((((IkReal(-1.00000000000000))*(new_r10)*(x233)*(x238)))+(((new_r20)*(sj4)))+(((cj4)*(x242))));
evalcond[3]=((((cj4)*(x241)))+(((IkReal(-1.00000000000000))*(new_r11)*(x233)*(x238)))+(((new_r21)*(sj4))));
evalcond[4]=((IkReal(1.00000000000000))+(((new_r22)*(sj4)))+(((cj4)*(x239)))+(((IkReal(-1.00000000000000))*(new_r12)*(x233)*(x238))));
evalcond[5]=((((IkReal(-1.00000000000000))*(new_r12)*(sj4)*(x240)))+(((IkReal(-1.00000000000000))*(new_r22)*(x238)))+(((sj4)*(x239))));
evalcond[6]=((((new_r10)*(x232)))+(((new_r00)*(x233)))+(((IkReal(-1.00000000000000))*(x237)))+(x236));
evalcond[7]=((((new_r11)*(x232)))+(((new_r01)*(x233)))+(x243));
evalcond[8]=((((IkReal(-1.00000000000000))*(sj4)*(x235)))+(((IkReal(-1.00000000000000))*(sj4)*(x234)))+(x242)+(((IkReal(-1.00000000000000))*(new_r10)*(x240))));
evalcond[9]=((((IkReal(-1.00000000000000))*(sj4)*(x237)))+(x241)+(((sj4)*(x236)))+(((IkReal(-1.00000000000000))*(new_r11)*(x240))));
evalcond[10]=((((IkReal(-1.00000000000000))*(new_r10)*(sj4)*(x240)))+(((IkReal(-1.00000000000000))*(new_r20)*(x238)))+(((IkReal(-1.00000000000000))*(x243)))+(((sj4)*(x242))));
evalcond[11]=((((IkReal(-1.00000000000000))*(new_r21)*(x238)))+(((IkReal(-1.00000000000000))*(x237)))+(x236)+(((IkReal(-1.00000000000000))*(new_r11)*(sj4)*(x240)))+(((sj4)*(x241))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  || IKabs(evalcond[10]) > 0.000001  || IKabs(evalcond[11]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j9;
vinfos[6].indices[0] = _ij9[0];
vinfos[6].indices[1] = _ij9[1];
vinfos[6].maxsolutions = _nj9;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x244=((gconst8)*(new_r20)*(sj4));
if( IKabs(((new_r12)*(x244))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-1.00000000000000))*(new_r02)*(x244))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((new_r12)*(x244)), ((IkReal(-1.00000000000000))*(new_r02)*(x244)));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x245=IKcos(j5);
IkReal x246=IKsin(j5);
IkReal x247=((new_r02)*(x245));
IkReal x248=((cj4)*(x245));
IkReal x249=((IkReal(1.00000000000000))*(x246));
evalcond[0]=((((new_r12)*(x245)))+(((new_r02)*(x246))));
evalcond[1]=((cj4)+(x247)+(((IkReal(-1.00000000000000))*(new_r12)*(x249))));
evalcond[2]=((((new_r20)*(sj4)))+(((IkReal(-1.00000000000000))*(cj4)*(new_r10)*(x249)))+(((new_r00)*(x248))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj4)*(new_r11)*(x249)))+(((new_r01)*(x248)))+(((new_r21)*(sj4))));
evalcond[4]=((IkReal(1.00000000000000))+(((cj4)*(x247)))+(((IkReal(-1.00000000000000))*(cj4)*(new_r12)*(x249)))+(((new_r22)*(sj4))));
evalcond[5]=((((IkReal(-1.00000000000000))*(new_r12)*(sj4)*(x249)))+(((IkReal(-1.00000000000000))*(cj4)*(new_r22)))+(((sj4)*(x247))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst15;
gconst15=IKsign(cj4);
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst16;
gconst16=IKsign(cj4);
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[11];
IkReal x250=((IkReal(1.00000000000000))+(new_r22));
IkReal x251=((((new_r02)*(sj5)))+(((cj5)*(new_r12))));
IkReal x252=((((cj5)*(new_r02)))+(((IkReal(-1.00000000000000))*(new_r12)*(sj5))));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=x250;
evalcond[2]=x251;
evalcond[3]=x251;
evalcond[4]=x252;
evalcond[5]=new_r20;
evalcond[6]=new_r21;
evalcond[7]=new_r20;
evalcond[8]=new_r21;
evalcond[9]=x250;
evalcond[10]=x252;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x253=((IkReal(0.999999995000000))*(sj5));
IkReal x254=((cj5)*(new_r10));
IkReal x255=((cj5)*(new_r11));
IkReal x256=((IkReal(9.99999995000000e-5))*(sj5));
if( IKabs(((((IkReal(-1.00000000000000))*(new_r01)*(x253)))+(((IkReal(-0.999999995000000))*(x255)))+(((new_r00)*(x256)))+(((IkReal(9.99999995000000e-5))*(x254))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(new_r01)*(x256)))+(((IkReal(-0.999999995000000))*(x254)))+(((IkReal(-9.99999995000000e-5))*(x255)))+(((IkReal(-1.00000000000000))*(new_r00)*(x253))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(new_r01)*(x253)))+(((IkReal(-0.999999995000000))*(x255)))+(((new_r00)*(x256)))+(((IkReal(9.99999995000000e-5))*(x254)))))+IKsqr(((((IkReal(-1.00000000000000))*(new_r01)*(x256)))+(((IkReal(-0.999999995000000))*(x254)))+(((IkReal(-9.99999995000000e-5))*(x255)))+(((IkReal(-1.00000000000000))*(new_r00)*(x253)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((IkReal(-1.00000000000000))*(new_r01)*(x253)))+(((IkReal(-0.999999995000000))*(x255)))+(((new_r00)*(x256)))+(((IkReal(9.99999995000000e-5))*(x254)))), ((((IkReal(-1.00000000000000))*(new_r01)*(x256)))+(((IkReal(-0.999999995000000))*(x254)))+(((IkReal(-9.99999995000000e-5))*(x255)))+(((IkReal(-1.00000000000000))*(new_r00)*(x253)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x257=IKsin(j3);
IkReal x258=IKcos(j3);
IkReal x259=((IkReal(1.00000000000000))*(sj5));
IkReal x260=((IkReal(0.999999995000000))*(x257));
IkReal x261=((IkReal(9.99999995000000e-5))*(x258));
IkReal x262=((IkReal(0.999999995000000))*(x258));
IkReal x263=((IkReal(9.99999995000000e-5))*(x257));
IkReal x264=((x261)+(x260));
evalcond[0]=((((cj5)*(new_r10)))+(((new_r00)*(sj5)))+(x262)+(((IkReal(-1.00000000000000))*(x263))));
evalcond[1]=((((cj5)*(new_r11)))+(((new_r01)*(sj5)))+(x264));
evalcond[2]=((((IkReal(-1.00000000000000))*(new_r10)*(x259)))+(((cj5)*(new_r00)))+(((IkReal(-1.00000000000000))*(x264))));
evalcond[3]=((((IkReal(-1.00000000000000))*(new_r11)*(x259)))+(((cj5)*(new_r01)))+(x262)+(((IkReal(-1.00000000000000))*(x263))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j9;
vinfos[6].indices[0] = _ij9[0];
vinfos[6].indices[1] = _ij9[1];
vinfos[6].maxsolutions = _nj9;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x265=((cj5)*(new_r02));
IkReal x266=((new_r12)*(sj5));
IkReal x267=((((new_r02)*(sj5)))+(((cj5)*(new_r12))));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-1.00000000000000))+(new_r22));
evalcond[2]=x267;
evalcond[3]=x267;
evalcond[4]=((((IkReal(-1.00000000000000))*(x266)))+(x265));
evalcond[5]=((IkReal(-1.00000000000000))*(new_r20));
evalcond[6]=((IkReal(-1.00000000000000))*(new_r21));
evalcond[7]=new_r20;
evalcond[8]=new_r21;
evalcond[9]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(new_r22))));
evalcond[10]=((((IkReal(-1.00000000000000))*(x265)))+(x266));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x268=((IkReal(0.999999995000000))*(sj5));
IkReal x269=((cj5)*(new_r10));
IkReal x270=((cj5)*(new_r11));
IkReal x271=((IkReal(9.99999995000000e-5))*(sj5));
if( IKabs(((((IkReal(-1.00000000000000))*(new_r01)*(x268)))+(((IkReal(9.99999995000000e-5))*(x269)))+(((new_r00)*(x271)))+(((IkReal(-0.999999995000000))*(x270))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(new_r01)*(x271)))+(((IkReal(-1.00000000000000))*(new_r00)*(x268)))+(((IkReal(-9.99999995000000e-5))*(x270)))+(((IkReal(-0.999999995000000))*(x269))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(new_r01)*(x268)))+(((IkReal(9.99999995000000e-5))*(x269)))+(((new_r00)*(x271)))+(((IkReal(-0.999999995000000))*(x270)))))+IKsqr(((((IkReal(-1.00000000000000))*(new_r01)*(x271)))+(((IkReal(-1.00000000000000))*(new_r00)*(x268)))+(((IkReal(-9.99999995000000e-5))*(x270)))+(((IkReal(-0.999999995000000))*(x269)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((IkReal(-1.00000000000000))*(new_r01)*(x268)))+(((IkReal(9.99999995000000e-5))*(x269)))+(((new_r00)*(x271)))+(((IkReal(-0.999999995000000))*(x270)))), ((((IkReal(-1.00000000000000))*(new_r01)*(x271)))+(((IkReal(-1.00000000000000))*(new_r00)*(x268)))+(((IkReal(-9.99999995000000e-5))*(x270)))+(((IkReal(-0.999999995000000))*(x269)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x272=IKsin(j3);
IkReal x273=IKcos(j3);
IkReal x274=((IkReal(1.00000000000000))*(sj5));
IkReal x275=((IkReal(0.999999995000000))*(x272));
IkReal x276=((IkReal(9.99999995000000e-5))*(x273));
IkReal x277=((IkReal(9.99999995000000e-5))*(x272));
IkReal x278=((IkReal(0.999999995000000))*(x273));
IkReal x279=((x276)+(x275));
evalcond[0]=((((cj5)*(new_r10)))+(((new_r00)*(sj5)))+(x278)+(((IkReal(-1.00000000000000))*(x277))));
evalcond[1]=((((cj5)*(new_r11)))+(((new_r01)*(sj5)))+(x279));
evalcond[2]=((((cj5)*(new_r00)))+(x279)+(((IkReal(-1.00000000000000))*(new_r10)*(x274))));
evalcond[3]=((((cj5)*(new_r01)))+(x277)+(((IkReal(-1.00000000000000))*(new_r11)*(x274)))+(((IkReal(-1.00000000000000))*(x278))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j9;
vinfos[6].indices[0] = _ij9[0];
vinfos[6].indices[1] = _ij9[1];
vinfos[6].maxsolutions = _nj9;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x280=((cj4)*(new_r00)*(sj5));
IkReal x281=((cj4)*(cj5)*(new_r10));
if( IKabs(((gconst16)*(((((IkReal(-100000000.500000))*(new_r20)))+(((IkReal(10000.0000500000))*(x280)))+(((IkReal(10000.0000500000))*(x281))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst16)*(((((IkReal(-10000.0000500000))*(new_r20)))+(((IkReal(-100000000.500000))*(x280)))+(((IkReal(-100000000.500000))*(x281))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst16)*(((((IkReal(-100000000.500000))*(new_r20)))+(((IkReal(10000.0000500000))*(x280)))+(((IkReal(10000.0000500000))*(x281)))))), ((gconst16)*(((((IkReal(-10000.0000500000))*(new_r20)))+(((IkReal(-100000000.500000))*(x280)))+(((IkReal(-100000000.500000))*(x281)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x282=IKsin(j3);
IkReal x283=IKcos(j3);
IkReal x284=((cj5)*(new_r01));
IkReal x285=((IkReal(0.999999995000000))*(cj4));
IkReal x286=((IkReal(1.00000000000000))*(cj4));
IkReal x287=((IkReal(9.99999995000000e-5))*(cj4));
IkReal x288=((cj5)*(new_r00));
IkReal x289=((IkReal(0.999999995000000))*(x282));
IkReal x290=((IkReal(9.99999995000000e-5))*(x283));
IkReal x291=((IkReal(0.999999995000000))*(x283));
IkReal x292=((IkReal(9.99999995000000e-5))*(x282));
IkReal x293=((sj4)*(x282));
IkReal x294=((IkReal(1.00000000000000))*(new_r11)*(sj5));
IkReal x295=((sj4)*(x283));
IkReal x296=((IkReal(1.00000000000000))*(new_r10)*(sj5));
IkReal x297=((x290)+(x289));
evalcond[0]=((new_r20)+(((x282)*(x285)))+(((x283)*(x287))));
evalcond[1]=((new_r21)+(((x282)*(x287)))+(((IkReal(-1.00000000000000))*(x283)*(x285))));
evalcond[2]=((((cj5)*(new_r10)))+(((IkReal(-1.00000000000000))*(x292)))+(((new_r00)*(sj5)))+(x291));
evalcond[3]=((((cj5)*(new_r11)))+(((new_r01)*(sj5)))+(x297));
evalcond[4]=((((IkReal(-0.999999995000000))*(x293)))+(((IkReal(-1.00000000000000))*(x296)))+(x288)+(((IkReal(-9.99999995000000e-5))*(x295))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x294)))+(((IkReal(0.999999995000000))*(x295)))+(x284)+(((IkReal(-9.99999995000000e-5))*(x293))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x297)))+(((IkReal(-1.00000000000000))*(new_r20)*(x286)))+(((IkReal(-1.00000000000000))*(sj4)*(x296)))+(((sj4)*(x288))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x292)))+(x291)+(((IkReal(-1.00000000000000))*(new_r21)*(x286)))+(((IkReal(-1.00000000000000))*(sj4)*(x294)))+(((sj4)*(x284))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j9;
vinfos[6].indices[0] = _ij9[0];
vinfos[6].indices[1] = _ij9[1];
vinfos[6].maxsolutions = _nj9;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs(((gconst15)*(((((IkReal(-100000000.500000))*(new_r20)))+(((IkReal(-10000.0000500000))*(new_r21))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst15)*(((((IkReal(100000000.500000))*(new_r21)))+(((IkReal(-10000.0000500000))*(new_r20))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst15)*(((((IkReal(-100000000.500000))*(new_r20)))+(((IkReal(-10000.0000500000))*(new_r21)))))), ((gconst15)*(((((IkReal(100000000.500000))*(new_r21)))+(((IkReal(-10000.0000500000))*(new_r20)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x298=IKsin(j3);
IkReal x299=IKcos(j3);
IkReal x300=((cj5)*(new_r01));
IkReal x301=((IkReal(0.999999995000000))*(cj4));
IkReal x302=((IkReal(1.00000000000000))*(cj4));
IkReal x303=((IkReal(9.99999995000000e-5))*(cj4));
IkReal x304=((cj5)*(new_r00));
IkReal x305=((IkReal(0.999999995000000))*(x298));
IkReal x306=((IkReal(9.99999995000000e-5))*(x299));
IkReal x307=((IkReal(0.999999995000000))*(x299));
IkReal x308=((IkReal(9.99999995000000e-5))*(x298));
IkReal x309=((sj4)*(x298));
IkReal x310=((IkReal(1.00000000000000))*(new_r11)*(sj5));
IkReal x311=((sj4)*(x299));
IkReal x312=((IkReal(1.00000000000000))*(new_r10)*(sj5));
IkReal x313=((x306)+(x305));
evalcond[0]=((((x299)*(x303)))+(((x298)*(x301)))+(new_r20));
evalcond[1]=((((x298)*(x303)))+(((IkReal(-1.00000000000000))*(x299)*(x301)))+(new_r21));
evalcond[2]=((((cj5)*(new_r10)))+(((new_r00)*(sj5)))+(x307)+(((IkReal(-1.00000000000000))*(x308))));
evalcond[3]=((((cj5)*(new_r11)))+(((new_r01)*(sj5)))+(x313));
evalcond[4]=((x304)+(((IkReal(-1.00000000000000))*(x312)))+(((IkReal(-9.99999995000000e-5))*(x311)))+(((IkReal(-0.999999995000000))*(x309))));
evalcond[5]=((((IkReal(-9.99999995000000e-5))*(x309)))+(x300)+(((IkReal(0.999999995000000))*(x311)))+(((IkReal(-1.00000000000000))*(x310))));
evalcond[6]=((((IkReal(-1.00000000000000))*(sj4)*(x312)))+(((IkReal(-1.00000000000000))*(new_r20)*(x302)))+(((IkReal(-1.00000000000000))*(x313)))+(((sj4)*(x304))));
evalcond[7]=((((IkReal(-1.00000000000000))*(sj4)*(x310)))+(((IkReal(-1.00000000000000))*(new_r21)*(x302)))+(x307)+(((sj4)*(x300)))+(((IkReal(-1.00000000000000))*(x308))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j9;
vinfos[6].indices[0] = _ij9[0];
vinfos[6].indices[1] = _ij9[1];
vinfos[6].maxsolutions = _nj9;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x314=((cj4)*(gconst7));
if( IKabs(((new_r12)*(x314))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-1.00000000000000))*(new_r02)*(x314))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((new_r12)*(x314)), ((IkReal(-1.00000000000000))*(new_r02)*(x314)));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x315=IKcos(j5);
IkReal x316=IKsin(j5);
IkReal x317=((new_r02)*(x315));
IkReal x318=((cj4)*(x315));
IkReal x319=((IkReal(1.00000000000000))*(x316));
evalcond[0]=((((new_r02)*(x316)))+(((new_r12)*(x315))));
evalcond[1]=((cj4)+(((IkReal(-1.00000000000000))*(new_r12)*(x319)))+(x317));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj4)*(new_r10)*(x319)))+(((new_r20)*(sj4)))+(((new_r00)*(x318))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj4)*(new_r11)*(x319)))+(((new_r01)*(x318)))+(((new_r21)*(sj4))));
evalcond[4]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(cj4)*(new_r12)*(x319)))+(((cj4)*(x317)))+(((new_r22)*(sj4))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj4)*(new_r22)))+(((sj4)*(x317)))+(((IkReal(-1.00000000000000))*(new_r12)*(sj4)*(x319))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst15;
gconst15=IKsign(cj4);
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst16;
gconst16=IKsign(cj4);
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[11];
IkReal x320=((IkReal(1.00000000000000))+(new_r22));
IkReal x321=((((new_r02)*(sj5)))+(((cj5)*(new_r12))));
IkReal x322=((((cj5)*(new_r02)))+(((IkReal(-1.00000000000000))*(new_r12)*(sj5))));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=x320;
evalcond[2]=x321;
evalcond[3]=x321;
evalcond[4]=x322;
evalcond[5]=new_r20;
evalcond[6]=new_r21;
evalcond[7]=new_r20;
evalcond[8]=new_r21;
evalcond[9]=x320;
evalcond[10]=x322;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x323=((IkReal(0.999999995000000))*(sj5));
IkReal x324=((cj5)*(new_r10));
IkReal x325=((cj5)*(new_r11));
IkReal x326=((IkReal(9.99999995000000e-5))*(sj5));
if( IKabs(((((new_r00)*(x326)))+(((IkReal(-1.00000000000000))*(new_r01)*(x323)))+(((IkReal(-0.999999995000000))*(x325)))+(((IkReal(9.99999995000000e-5))*(x324))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-9.99999995000000e-5))*(x325)))+(((IkReal(-1.00000000000000))*(new_r01)*(x326)))+(((IkReal(-1.00000000000000))*(new_r00)*(x323)))+(((IkReal(-0.999999995000000))*(x324))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((new_r00)*(x326)))+(((IkReal(-1.00000000000000))*(new_r01)*(x323)))+(((IkReal(-0.999999995000000))*(x325)))+(((IkReal(9.99999995000000e-5))*(x324)))))+IKsqr(((((IkReal(-9.99999995000000e-5))*(x325)))+(((IkReal(-1.00000000000000))*(new_r01)*(x326)))+(((IkReal(-1.00000000000000))*(new_r00)*(x323)))+(((IkReal(-0.999999995000000))*(x324)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((new_r00)*(x326)))+(((IkReal(-1.00000000000000))*(new_r01)*(x323)))+(((IkReal(-0.999999995000000))*(x325)))+(((IkReal(9.99999995000000e-5))*(x324)))), ((((IkReal(-9.99999995000000e-5))*(x325)))+(((IkReal(-1.00000000000000))*(new_r01)*(x326)))+(((IkReal(-1.00000000000000))*(new_r00)*(x323)))+(((IkReal(-0.999999995000000))*(x324)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x327=IKsin(j3);
IkReal x328=IKcos(j3);
IkReal x329=((IkReal(1.00000000000000))*(sj5));
IkReal x330=((IkReal(0.999999995000000))*(x327));
IkReal x331=((IkReal(9.99999995000000e-5))*(x328));
IkReal x332=((IkReal(0.999999995000000))*(x328));
IkReal x333=((IkReal(9.99999995000000e-5))*(x327));
IkReal x334=((x331)+(x330));
evalcond[0]=((((cj5)*(new_r10)))+(((new_r00)*(sj5)))+(x332)+(((IkReal(-1.00000000000000))*(x333))));
evalcond[1]=((((cj5)*(new_r11)))+(((new_r01)*(sj5)))+(x334));
evalcond[2]=((((cj5)*(new_r00)))+(((IkReal(-1.00000000000000))*(new_r10)*(x329)))+(((IkReal(-1.00000000000000))*(x334))));
evalcond[3]=((((cj5)*(new_r01)))+(x332)+(((IkReal(-1.00000000000000))*(x333)))+(((IkReal(-1.00000000000000))*(new_r11)*(x329))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j9;
vinfos[6].indices[0] = _ij9[0];
vinfos[6].indices[1] = _ij9[1];
vinfos[6].maxsolutions = _nj9;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x335=((cj5)*(new_r02));
IkReal x336=((new_r12)*(sj5));
IkReal x337=((((new_r02)*(sj5)))+(((cj5)*(new_r12))));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-1.00000000000000))+(new_r22));
evalcond[2]=x337;
evalcond[3]=x337;
evalcond[4]=((x335)+(((IkReal(-1.00000000000000))*(x336))));
evalcond[5]=((IkReal(-1.00000000000000))*(new_r20));
evalcond[6]=((IkReal(-1.00000000000000))*(new_r21));
evalcond[7]=new_r20;
evalcond[8]=new_r21;
evalcond[9]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(new_r22))));
evalcond[10]=((x336)+(((IkReal(-1.00000000000000))*(x335))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x338=((IkReal(0.999999995000000))*(sj5));
IkReal x339=((cj5)*(new_r10));
IkReal x340=((cj5)*(new_r11));
IkReal x341=((IkReal(9.99999995000000e-5))*(sj5));
if( IKabs(((((new_r00)*(x341)))+(((IkReal(-0.999999995000000))*(x340)))+(((IkReal(9.99999995000000e-5))*(x339)))+(((IkReal(-1.00000000000000))*(new_r01)*(x338))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-9.99999995000000e-5))*(x340)))+(((IkReal(-1.00000000000000))*(new_r00)*(x338)))+(((IkReal(-1.00000000000000))*(new_r01)*(x341)))+(((IkReal(-0.999999995000000))*(x339))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((new_r00)*(x341)))+(((IkReal(-0.999999995000000))*(x340)))+(((IkReal(9.99999995000000e-5))*(x339)))+(((IkReal(-1.00000000000000))*(new_r01)*(x338)))))+IKsqr(((((IkReal(-9.99999995000000e-5))*(x340)))+(((IkReal(-1.00000000000000))*(new_r00)*(x338)))+(((IkReal(-1.00000000000000))*(new_r01)*(x341)))+(((IkReal(-0.999999995000000))*(x339)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((new_r00)*(x341)))+(((IkReal(-0.999999995000000))*(x340)))+(((IkReal(9.99999995000000e-5))*(x339)))+(((IkReal(-1.00000000000000))*(new_r01)*(x338)))), ((((IkReal(-9.99999995000000e-5))*(x340)))+(((IkReal(-1.00000000000000))*(new_r00)*(x338)))+(((IkReal(-1.00000000000000))*(new_r01)*(x341)))+(((IkReal(-0.999999995000000))*(x339)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x342=IKsin(j3);
IkReal x343=IKcos(j3);
IkReal x344=((IkReal(1.00000000000000))*(sj5));
IkReal x345=((IkReal(0.999999995000000))*(x342));
IkReal x346=((IkReal(9.99999995000000e-5))*(x343));
IkReal x347=((IkReal(9.99999995000000e-5))*(x342));
IkReal x348=((IkReal(0.999999995000000))*(x343));
IkReal x349=((x346)+(x345));
evalcond[0]=((((cj5)*(new_r10)))+(((new_r00)*(sj5)))+(x348)+(((IkReal(-1.00000000000000))*(x347))));
evalcond[1]=((((cj5)*(new_r11)))+(((new_r01)*(sj5)))+(x349));
evalcond[2]=((((IkReal(-1.00000000000000))*(new_r10)*(x344)))+(((cj5)*(new_r00)))+(x349));
evalcond[3]=((((IkReal(-1.00000000000000))*(new_r11)*(x344)))+(((cj5)*(new_r01)))+(x347)+(((IkReal(-1.00000000000000))*(x348))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j9;
vinfos[6].indices[0] = _ij9[0];
vinfos[6].indices[1] = _ij9[1];
vinfos[6].maxsolutions = _nj9;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x350=((cj4)*(new_r00)*(sj5));
IkReal x351=((cj4)*(cj5)*(new_r10));
if( IKabs(((gconst16)*(((((IkReal(-100000000.500000))*(new_r20)))+(((IkReal(10000.0000500000))*(x350)))+(((IkReal(10000.0000500000))*(x351))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst16)*(((((IkReal(-100000000.500000))*(x350)))+(((IkReal(-100000000.500000))*(x351)))+(((IkReal(-10000.0000500000))*(new_r20))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst16)*(((((IkReal(-100000000.500000))*(new_r20)))+(((IkReal(10000.0000500000))*(x350)))+(((IkReal(10000.0000500000))*(x351)))))), ((gconst16)*(((((IkReal(-100000000.500000))*(x350)))+(((IkReal(-100000000.500000))*(x351)))+(((IkReal(-10000.0000500000))*(new_r20)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x352=IKsin(j3);
IkReal x353=IKcos(j3);
IkReal x354=((cj5)*(new_r01));
IkReal x355=((IkReal(0.999999995000000))*(cj4));
IkReal x356=((IkReal(1.00000000000000))*(cj4));
IkReal x357=((IkReal(9.99999995000000e-5))*(cj4));
IkReal x358=((cj5)*(new_r00));
IkReal x359=((IkReal(0.999999995000000))*(x352));
IkReal x360=((IkReal(9.99999995000000e-5))*(x353));
IkReal x361=((IkReal(0.999999995000000))*(x353));
IkReal x362=((IkReal(9.99999995000000e-5))*(x352));
IkReal x363=((sj4)*(x352));
IkReal x364=((IkReal(1.00000000000000))*(new_r11)*(sj5));
IkReal x365=((sj4)*(x353));
IkReal x366=((IkReal(1.00000000000000))*(new_r10)*(sj5));
IkReal x367=((x359)+(x360));
evalcond[0]=((((x352)*(x355)))+(((x353)*(x357)))+(new_r20));
evalcond[1]=((((x352)*(x357)))+(((IkReal(-1.00000000000000))*(x353)*(x355)))+(new_r21));
evalcond[2]=((((cj5)*(new_r10)))+(((IkReal(-1.00000000000000))*(x362)))+(((new_r00)*(sj5)))+(x361));
evalcond[3]=((((cj5)*(new_r11)))+(((new_r01)*(sj5)))+(x367));
evalcond[4]=((((IkReal(-9.99999995000000e-5))*(x365)))+(((IkReal(-1.00000000000000))*(x366)))+(((IkReal(-0.999999995000000))*(x363)))+(x358));
evalcond[5]=((((IkReal(-9.99999995000000e-5))*(x363)))+(((IkReal(-1.00000000000000))*(x364)))+(((IkReal(0.999999995000000))*(x365)))+(x354));
evalcond[6]=((((sj4)*(x358)))+(((IkReal(-1.00000000000000))*(sj4)*(x366)))+(((IkReal(-1.00000000000000))*(x367)))+(((IkReal(-1.00000000000000))*(new_r20)*(x356))));
evalcond[7]=((((sj4)*(x354)))+(((IkReal(-1.00000000000000))*(sj4)*(x364)))+(((IkReal(-1.00000000000000))*(x362)))+(x361)+(((IkReal(-1.00000000000000))*(new_r21)*(x356))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j9;
vinfos[6].indices[0] = _ij9[0];
vinfos[6].indices[1] = _ij9[1];
vinfos[6].maxsolutions = _nj9;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs(((gconst15)*(((((IkReal(-100000000.500000))*(new_r20)))+(((IkReal(-10000.0000500000))*(new_r21))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst15)*(((((IkReal(100000000.500000))*(new_r21)))+(((IkReal(-10000.0000500000))*(new_r20))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst15)*(((((IkReal(-100000000.500000))*(new_r20)))+(((IkReal(-10000.0000500000))*(new_r21)))))), ((gconst15)*(((((IkReal(100000000.500000))*(new_r21)))+(((IkReal(-10000.0000500000))*(new_r20)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x368=IKsin(j3);
IkReal x369=IKcos(j3);
IkReal x370=((cj5)*(new_r01));
IkReal x371=((IkReal(0.999999995000000))*(cj4));
IkReal x372=((IkReal(1.00000000000000))*(cj4));
IkReal x373=((IkReal(9.99999995000000e-5))*(cj4));
IkReal x374=((cj5)*(new_r00));
IkReal x375=((IkReal(0.999999995000000))*(x368));
IkReal x376=((IkReal(9.99999995000000e-5))*(x369));
IkReal x377=((IkReal(0.999999995000000))*(x369));
IkReal x378=((IkReal(9.99999995000000e-5))*(x368));
IkReal x379=((sj4)*(x368));
IkReal x380=((IkReal(1.00000000000000))*(new_r11)*(sj5));
IkReal x381=((sj4)*(x369));
IkReal x382=((IkReal(1.00000000000000))*(new_r10)*(sj5));
IkReal x383=((x376)+(x375));
evalcond[0]=((((x369)*(x373)))+(new_r20)+(((x368)*(x371))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x369)*(x371)))+(new_r21)+(((x368)*(x373))));
evalcond[2]=((((cj5)*(new_r10)))+(((IkReal(-1.00000000000000))*(x378)))+(((new_r00)*(sj5)))+(x377));
evalcond[3]=((((cj5)*(new_r11)))+(((new_r01)*(sj5)))+(x383));
evalcond[4]=((((IkReal(-0.999999995000000))*(x379)))+(x374)+(((IkReal(-1.00000000000000))*(x382)))+(((IkReal(-9.99999995000000e-5))*(x381))));
evalcond[5]=((((IkReal(-9.99999995000000e-5))*(x379)))+(x370)+(((IkReal(0.999999995000000))*(x381)))+(((IkReal(-1.00000000000000))*(x380))));
evalcond[6]=((((IkReal(-1.00000000000000))*(new_r20)*(x372)))+(((sj4)*(x374)))+(((IkReal(-1.00000000000000))*(sj4)*(x382)))+(((IkReal(-1.00000000000000))*(x383))));
evalcond[7]=((((IkReal(-1.00000000000000))*(new_r21)*(x372)))+(((sj4)*(x370)))+(((IkReal(-1.00000000000000))*(x378)))+(((IkReal(-1.00000000000000))*(sj4)*(x380)))+(x377));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j3;
vinfos[0].indices[0] = _ij3[0];
vinfos[0].indices[1] = _ij3[1];
vinfos[0].maxsolutions = _nj3;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j4;
vinfos[1].indices[0] = _ij4[0];
vinfos[1].indices[1] = _ij4[1];
vinfos[1].maxsolutions = _nj4;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j5;
vinfos[2].indices[0] = _ij5[0];
vinfos[2].indices[1] = _ij5[1];
vinfos[2].maxsolutions = _nj5;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j6;
vinfos[3].indices[0] = _ij6[0];
vinfos[3].indices[1] = _ij6[1];
vinfos[3].maxsolutions = _nj6;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j7;
vinfos[4].indices[0] = _ij7[0];
vinfos[4].indices[1] = _ij7[1];
vinfos[4].maxsolutions = _nj7;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j8;
vinfos[5].indices[0] = _ij8[0];
vinfos[5].indices[1] = _ij8[1];
vinfos[5].maxsolutions = _nj8;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j9;
vinfos[6].indices[0] = _ij9[0];
vinfos[6].indices[1] = _ij9[1];
vinfos[6].maxsolutions = _nj9;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}
}
}};


/// solves the inverse kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
IKSolver solver;
return solver.ComputeIk(eetrans,eerot,pfree,solutions);
}

IKFAST_API const char* GetKinematicsHash() { return "<robot:genericrobot - mk2 (a8a207d41d9a03d2983d9a68833f25fe)>"; }

IKFAST_API const char* GetIkFastVersion() { return IKFAST_STRINGIZE(IKFAST_VERSION); }

#ifdef IKFAST_NAMESPACE
} // end namespace
#endif

#ifndef IKFAST_NO_MAIN
#include <stdio.h>
#include <stdlib.h>
#ifdef IKFAST_NAMESPACE
using namespace IKFAST_NAMESPACE;
#endif
int main(int argc, char** argv)
{
    if( argc != 12+GetNumFreeParameters()+1 ) {
        printf("\nUsage: ./ik r00 r01 r02 t0 r10 r11 r12 t1 r20 r21 r22 t2 free0 ...\n\n"
               "Returns the ik solutions given the transformation of the end effector specified by\n"
               "a 3x3 rotation R (rXX), and a 3x1 translation (tX).\n"
               "There are %d free parameters that have to be specified.\n\n",GetNumFreeParameters());
        return 1;
    }

    IkSolutionList<IkReal> solutions;
    std::vector<IkReal> vfree(GetNumFreeParameters());
    IkReal eerot[9],eetrans[3];
    eerot[0] = atof(argv[1]); eerot[1] = atof(argv[2]); eerot[2] = atof(argv[3]); eetrans[0] = atof(argv[4]);
    eerot[3] = atof(argv[5]); eerot[4] = atof(argv[6]); eerot[5] = atof(argv[7]); eetrans[1] = atof(argv[8]);
    eerot[6] = atof(argv[9]); eerot[7] = atof(argv[10]); eerot[8] = atof(argv[11]); eetrans[2] = atof(argv[12]);
    for(std::size_t i = 0; i < vfree.size(); ++i)
        vfree[i] = atof(argv[13+i]);
    bool bSuccess = ComputeIk(eetrans, eerot, vfree.size() > 0 ? &vfree[0] : NULL, solutions);

    if( !bSuccess ) {
        fprintf(stderr,"Failed to get ik solution\n");
        return -1;
    }

    printf("Found %d ik solutions:\n", (int)solutions.GetNumSolutions());
    std::vector<IkReal> solvalues(GetNumJoints());
    for(std::size_t i = 0; i < solutions.GetNumSolutions(); ++i) {
        const IkSolutionBase<IkReal>& sol = solutions.GetSolution(i);
        printf("sol%d (free=%d): ", (int)i, (int)sol.GetFree().size());
        std::vector<IkReal> vsolfree(sol.GetFree().size());
        sol.GetSolution(&solvalues[0],vsolfree.size()>0?&vsolfree[0]:NULL);
        for( std::size_t j = 0; j < solvalues.size(); ++j)
            printf("%.15f, ", solvalues[j]);
        printf("\n");
    }
    return 0;
}

#endif
